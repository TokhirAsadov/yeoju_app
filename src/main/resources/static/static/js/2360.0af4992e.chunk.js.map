{"version":3,"file":"static/js/2360.0af4992e.chunk.js","mappings":"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","sources":["components/student/student_service/QueueDeanForStudent.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Card, CardContent, Stack} from \"@mui/material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {BASE_URL, getHeaders, mainColor} from \"../../../utills/ServiceUrls\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment/moment\";\r\nimport EmptyDataImg from \"../../emptyDataImg/EmptyDataImg\";\r\nimport {extrasmall} from \"../../../responsiv\";\r\nimport axios from \"axios\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport {IoClose} from \"react-icons/io5\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {toast} from \"react-toastify\";\r\nimport {MdLibraryAdd} from \"react-icons/md\";\r\n\r\nconst QueueDeanForStudent = () => {\r\n\r\n    const student = useSelector(state => state?.student?.student);\r\n    const isSirtqi = student.groupData?.educationTypeName === \"SIRTQI\"\r\n    const [data, setData] = useState([])\r\n    const [currentQueue, setCurrentQueue] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const {headers} = getHeaders()\r\n    const getAllStudentQueue = () => {\r\n        setIsLoading(true)\r\n        axios.get(BASE_URL + `/queue/getAllStudentQueues/${student.id}`, {headers})\r\n            .then(res => {\r\n                console.log(res.data.obj)\r\n                setCurrentQueue(res.data.obj[0])\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n    const findAllQueuesOfTodayForDean = () => {\r\n        axios.get(BASE_URL + '/queue/findAllQueuesOfTodayForDean', {headers})\r\n            .then(res => {\r\n                console.log(res)\r\n                setData(res.data.obj.sort((a, b) => {\r\n                    if (a.number > b.number) return 1;\r\n                    else if (a.number < b.number) return -1;\r\n                    return 0;\r\n                }))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const queueCreate = () => {\r\n        axios.post(BASE_URL + '/queue/createQueue', {}, {headers})\r\n            .then(res => {\r\n                console.log(res.data)\r\n                getAllStudentQueue()\r\n                findAllQueuesOfTodayForDean()\r\n                setOpenModal(false)\r\n                toast.success('Successfully created')\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                toast.error('Error creating')\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        getAllStudentQueue()\r\n        findAllQueuesOfTodayForDean()\r\n    }, []);\r\n\r\n    const handleCloseModal = () => {\r\n        setOpenModal(false);\r\n    }\r\n\r\n    return (\r\n        isSirtqi ? (\r\n            <>\r\n                <QueueCard>\r\n                    {moment().format('DD.MM.YYYY') === moment(currentQueue?.createdAt).format('DD.MM.YYYY') && currentQueue?.number &&\r\n                        <Card sx={{width: '320px', mt: 3}}>\r\n                            <CardContent sx={{pb: '16px !important'}}>\r\n                                <Box\r\n                                    sx={{\r\n                                        color: mainColor,\r\n                                    }}\r\n                                >\r\n                                    <Typography fontWeight={'bold'} fontSize={20}>\r\n                                        Queue : {currentQueue?.number}\r\n                                    </Typography>\r\n                                    <Typography fontWeight={'bold'} fontSize={20}>\r\n                                        Status : {currentQueue?.status}\r\n                                    </Typography>\r\n                                    <Typography fontWeight={'bold'} fontSize={20}>\r\n                                        Create date :{moment(currentQueue?.createdAt).format('DD.MM.YYYY HH:mm')}\r\n                                    </Typography>\r\n                                </Box>\r\n                            </CardContent>\r\n                        </Card>}\r\n                </QueueCard>\r\n                <Card sx={{mt: 3}}>\r\n                    <CardContent>\r\n                        <Stack mt={1} direction=\"row\" justifyContent=\"end\">\r\n                            <Button onClick={() => setOpenModal(true)} variant=\"contained\" color=\"success\"\r\n                                    endIcon={<MdLibraryAdd/>}>\r\n                                Apply\r\n                            </Button>\r\n                        </Stack>\r\n                        <BodyBox>\r\n                            <table>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th style={{width: '100px'}}>â„–</th>\r\n                                    <th>Full name</th>\r\n                                    <th style={{width: '250px'}}> Date of creation</th>\r\n                                    <th style={{width: '250px'}}> Status</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {data?.map(item => (\r\n                                    <tr key={item?.id}\r\n                                        style={{background: student.fullName === item?.studentData?.fullName && '#e7e7e7'}}>\r\n                                        <td>{item?.number}</td>\r\n                                        <td>{item?.studentData?.fullName}</td>\r\n                                        <td>{moment(item?.createdAt).format('DD.MM.YYYY HH:mm')}</td>\r\n                                        <td>{item?.status}</td>\r\n                                    </tr>\r\n                                ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </BodyBox>\r\n                        {data?.length === 0 && <Box>\r\n                            <EmptyDataImg w={200} h={180}/>\r\n                        </Box>}\r\n                    </CardContent>\r\n                </Card>\r\n                {/*modal create*/}\r\n                <Modal\r\n                    open={openModal}\r\n                    onClose={handleCloseModal}\r\n                    aria-labelledby=\"modal-modal-title\"\r\n                    aria-describedby=\"modal-modal-description\"\r\n                >\r\n                    <Box sx={style} component={style2}>\r\n                        <ModalTitle>\r\n                            <h5>\r\n\r\n                            </h5>\r\n                            <CloseBtnModal onClick={handleCloseModal}> <IoClose size={22}/></CloseBtnModal>\r\n                        </ModalTitle>\r\n                        <Box>\r\n                            <Stack sx={{height: \"100px\"}} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n                                <Typography variant=\"h6\" color=\"black\">\r\n                                    Do you want to meet with the dean?\r\n                                </Typography>\r\n                            </Stack>\r\n\r\n                            <Stack direction=\"row\" spacing={2} justifyContent=\"flex-end\"\r\n                                   alignItems=\"center\">\r\n                                <Button variant=\"outlined\" onClick={handleCloseModal}>Cancel</Button>\r\n                                <Button variant=\"contained\" onClick={() => queueCreate()}>\r\n                                    Ok\r\n                                </Button>\r\n                            </Stack>\r\n                        </Box>\r\n                    </Box>\r\n                </Modal>\r\n            </>\r\n        ) : (\r\n            <Card sx={{mt: 3}}>\r\n                <CardContent>\r\n                    <Typography textAlign={'center'} fontWeight={'bold'} color={'error'} fontSize={25}>For external\r\n                        education only !</Typography>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n\r\n    );\r\n};\r\n\r\nconst ModalTitle = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    h4 {\r\n        color: black;\r\n    }\r\n\r\n    h5 {\r\n        color: red;\r\n    }\r\n\r\n`\r\nconst CloseBtnModal = styled.button`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 5px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    background-color: ${mainColor};\r\n    color: white;\r\n    font-size: 12px;\r\n`\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 500,\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    padding: \"15px\",\r\n    borderRadius: \"8px\",\r\n};\r\nconst style2 = styled.div`\r\n    ${extrasmall({\r\n        width: \"95% !important\",\r\n    })}\r\n`\r\nconst QueueCard = styled.div`\r\n    display: flex;\r\n    justify-content: end;\r\n    ${extrasmall({\r\n        justifyContent: 'center',\r\n    })}\r\n`;\r\nconst BodyBox = styled.div`\r\n    margin-top: 25px;\r\n    width: 100%;\r\n    overflow-x: scroll;\r\n\r\n    table {\r\n        min-width: 700px;\r\n        border-collapse: collapse;\r\n        width: 100%;\r\n        border-radius: 5px;\r\n        overflow: hidden;\r\n\r\n        td, th {\r\n            border: 1px solid #ddd;\r\n            padding: 8px;\r\n            font-size: 15px;\r\n            text-align: center;\r\n        }\r\n\r\n        th {\r\n            text-align: center;\r\n        }\r\n\r\n        tr {\r\n            &:nth-child(even) {\r\n                background-color: #fcf9f9;\r\n            }\r\n        }\r\n\r\n        th {\r\n            background-color: ${mainColor};\r\n            color: white;\r\n        }\r\n    }`;\r\nexport default QueueDeanForStudent;"],"names":["ModalTitle","styled","CloseBtnModal","mainColor","style","position","top","left","transform","width","bgcolor","boxShadow","padding","borderRadius","style2","extrasmall","QueueCard","justifyContent","BodyBox","student","useSelector","state","isSirtqi","groupData","educationTypeName","useState","data","setData","currentQueue","setCurrentQueue","setIsLoading","openModal","setOpenModal","headers","getHeaders","getAllStudentQueue","axios","BASE_URL","id","then","res","console","log","obj","catch","err","finally","findAllQueuesOfTodayForDean","sort","a","b","number","useEffect","handleCloseModal","moment","format","createdAt","sx","mt","pb","color","fontWeight","fontSize","status","direction","onClick","variant","endIcon","map","item","background","fullName","studentData","length","w","h","open","onClose","component","size","height","alignItems","spacing","toast","textAlign"],"sourceRoot":""}