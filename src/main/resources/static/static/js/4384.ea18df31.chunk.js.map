{"version":3,"file":"static/js/4384.ea18df31.chunk.js","mappings":"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","sources":["components/student/subject/StudentSubjects.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {BASE_URL, getHeaders, mainColor, navbarHeight} from \"../../../utills/ServiceUrls\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {extrasmall, large, medium, small, xlarge} from \"../../../responsiv\";\r\nimport {RiBookMarkFill} from 'react-icons/ri'\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport {educationYearStatisticsFetching} from \"../../../redux/slice/educationYear/education_year_statistics_slice\";\r\nimport {fetchEducationYear} from \"../../../redux/actions/educationYear/education_year_actions\";\r\nimport {setInfoStudentForLesson} from \"../../../redux/actions/infoStudentForLesson/InfoStudentForLesson_actions\";\r\n\r\nconst StudentSubjects = () => {\r\n    const navigate = useNavigate()\r\n    const student = useSelector(state => state?.student?.student)\r\n    const {headers} = getHeaders();\r\n    const [subjects, setSubjects] = useState([]);\r\n    const educationYear = useSelector(state => state?.educationYear?.educationYear) || null;\r\n    const [eduYears, setEduYears] = useState([]);\r\n    const dispatch = useDispatch()\r\n\r\n    const fetchEducationYears = async () => {\r\n        await axios.get(BASE_URL + '/education/educationYearsForSelected', {headers})\r\n            .then(res => {\r\n                // console.log(res?.data?.obj,\"education years res come\")\r\n                setEduYears(res?.data?.obj);\r\n                dispatch(fetchEducationYear(res?.data?.obj?.[0]))\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const fetchLessons = async (group) => {\r\n        await axios.get(BASE_URL + `/groupConnect/getLessonForGroup/${educationYear?.id}?groupName=${group}`, {headers})\r\n            .then(res => {\r\n                console.log(res?.data, \"res come\")\r\n                setSubjects(res?.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        fetchEducationYears();\r\n        fetchLessons(student?.groupData?.name)\r\n    }, [])\r\n\r\n\r\n\r\n    const handleChange = (event) => {\r\n        event.target.value !== educationYear?.name && dispatch(educationYearStatisticsFetching())\r\n        dispatch(fetchEducationYear(eduYears?.find(i => i?.name === event.target.value)))\r\n\r\n    };\r\n    const handleClick = (data) => {\r\n        const stateData = {\r\n            lessonName: data.lessonName,\r\n            educationYearId: educationYear.id,\r\n            lessonId: data.lessonId,\r\n            teacherId: data.teacherId,\r\n        }\r\n        dispatch(setInfoStudentForLesson(stateData))\r\n        navigate(`${data.lessonName}`)\r\n    }\r\n    return (\r\n        <Container>\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    padding: \"10px\"\r\n                }}\r\n            >\r\n                <Title>Subjects</Title>\r\n                <Box sx={{minWidth: 150, background: \"#fff\"}}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel htmlFor='semestr'>O'quv yilli</InputLabel>\r\n                        <Select\r\n                            labelId=\"semestr\"\r\n                            id=\"demo-simple-select\"\r\n                            value={educationYear?.name}\r\n                            onChange={handleChange}\r\n                            label=\"O'quv yili\"\r\n                        >\r\n                            {eduYears?.map((item, key) => (\r\n                                <MenuItem key={item?.id} value={item?.name}>{item?.name}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n            </Box>\r\n\r\n\r\n            <BodyCards>\r\n\r\n                {\r\n                    subjects?.map((item, index) => {\r\n                        return (\r\n                            <BodyCard key={index} onClick={() => handleClick(item)}>\r\n                                <BodyCardTitle>\r\n                                    <Box sx={{w: \"30px\", h: \"30px\"}}>\r\n                                        <RiBookMarkFill size={30}/>\r\n                                    </Box>\r\n                                    <span>{item?.lessonName}</span>\r\n                                </BodyCardTitle>\r\n                                <p>Teacher : <>{item?.fullName}</></p>\r\n                            </BodyCard>\r\n                        )\r\n                    })\r\n                }\r\n            </BodyCards>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst BodyCardTitle = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n    font-size: 16px;\r\n    text-align: start;\r\n    color: ${mainColor};\r\n    font-weight: bold;\r\n    ${extrasmall({\r\n        fontSize: \"14px\",\r\n    })}\r\n`\r\n\r\nconst BodyCard = styled.div`\r\n    padding: 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    background-color: #fff;\r\n    border-radius: 0.5rem;\r\n    box-shadow: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;\r\n\r\n    p {\r\n        display: flex;\r\n        align-items: center;\r\n        color: black;\r\n        font-size: 14px;\r\n    }\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n        box-shadow: 1px 3px 8px 0px rgba(34, 60, 80, 0.2);\r\n    }\r\n`;\r\n\r\nconst BodyCards = styled.div`\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    gap: 20px;\r\n    ${xlarge({\r\n        gridTemplateColumns: \"1fr 1fr 1fr  \",\r\n    })}\r\n    ${large({\r\n        gridTemplateColumns: \"1fr 1fr 1fr  \",\r\n    })}\r\n    ${medium({\r\n        gridTemplateColumns: \"1fr 1fr \",\r\n    })}\r\n    ${small({\r\n        gridTemplateColumns: \"1fr 1fr \",\r\n    })}\r\n    ${extrasmall({\r\n        gridTemplateColumns: \"1fr \",\r\n    })}\r\n`;\r\n\r\n\r\n\r\n\r\nconst Title = styled.p`\r\n    width: 100%;\r\n    font-size: 25px;\r\n    font-weight: bold;\r\n    ${extrasmall({\r\n        fontSize: \"20px\"\r\n    })}\r\n`;\r\n\r\n\r\nconst Container = styled.div`\r\n    padding: 1rem !important;\r\n    color: ${mainColor};\r\n`;\r\n\r\n\r\nexport default StudentSubjects;"],"names":["BodyCardTitle","styled","mainColor","extrasmall","fontSize","BodyCard","BodyCards","xlarge","gridTemplateColumns","large","medium","small","Title","Container","navigate","useNavigate","student","useSelector","state","headers","getHeaders","useState","subjects","setSubjects","educationYear","eduYears","setEduYears","dispatch","useDispatch","fetchEducationYears","axios","BASE_URL","then","res","data","obj","fetchEducationYear","catch","err","console","log","fetchLessons","group","id","useEffect","groupData","name","sx","display","justifyContent","padding","minWidth","background","fullWidth","htmlFor","labelId","value","onChange","event","target","educationYearStatisticsFetching","find","i","label","map","item","key","index","onClick","stateData","lessonName","educationYearId","lessonId","teacherId","setInfoStudentForLesson","handleClick","w","h","size","fullName"],"sourceRoot":""}