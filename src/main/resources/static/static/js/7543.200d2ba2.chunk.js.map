{"version":3,"file":"static/js/7543.200d2ba2.chunk.js","mappings":"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","sources":["components/rektor/staff/RektorStaff.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {BASE_URL, getHeaders, mainColor, TOKEN} from \"../../../utills/ServiceUrls\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {FaUserTie} from \"react-icons/fa\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {RiCloseLine} from \"react-icons/ri\";\r\nimport Spinner from \"../../spinner/Spinner\";\r\nimport ModalRektorTeachersPage from \"../ModalRektorTeachersPage\";\r\nimport {AnimatePresence, motion as m} from 'framer-motion'\r\nimport {rektorStaffsFetching} from \"../../../redux/slice/rektor/rektor_staffs_slice\";\r\nimport {fetchRektorStaffs} from \"../../../redux/actions/rektor/rektor_staffs_action\";\r\nimport {extrasmall, large, medium, small, xlarge} from \"../../../responsiv\";\r\nimport {Skeleton} from \"@mui/material\";\r\nimport ExportBtnToExcelForRektor from \"./ExportBtnToExcelForRektor\";\r\n\r\nconst RektorStaff = ({s}) => {\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(TOKEN);\r\n        const decode = jwtDecode(token);\r\n        let roleName2 = decode?.roles.find(i => i.roleName === 'ROLE_REKTOR')?.roleName;\r\n        let roleName3 = decode?.roles.find(i => i.roleName === 'Kengash raisi')?.roleName;\r\n\r\n        if (roleName2 !== \"ROLE_REKTOR\" && roleName3 !== \"Kengash raisi\") {\r\n            navigate(\"/login\");\r\n        }\r\n    }, [])\r\n\r\n\r\n    const [data, setData] = useState([]);\r\n    const [section, setSection] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        axios.get(BASE_URL + `/user/rektorStaff?s=${s}`, {headers})\r\n            .then(res => {\r\n                // console.log(res?.data,\"r s\")\r\n                setData(res?.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n    }, [s])\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const {headers} = getHeaders();\r\n\r\n    const handleOpenModal = (id, name) => {\r\n        setSection(name);\r\n        setOpenModal(true);\r\n        dispatch(rektorStaffsFetching('loading'))\r\n\r\n        axios.get(BASE_URL + `/user/getSectionStaffDataForRektorBySectionId?id=${id}&s=${s}`, {headers})\r\n            .then(res => {\r\n                // console.log(rektorTeacher)\r\n                dispatch(fetchRektorStaffs(res?.data?.obj))\r\n\r\n                console.log(res?.data, \"'''''''''''  ''''''''''''\")\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n\r\n    const handleCloseModal = () => {\r\n        setOpenModal(false);\r\n    }\r\n\r\n    const rektorStaffs = useSelector(state => state?.rektorStaffs);\r\n\r\n    const variants = {\r\n        visible: index => ({\r\n            scale: 1,\r\n            transition: {\r\n                delay: index * 0.1,\r\n            },\r\n        }),\r\n        hidden: {scale: 0},\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <WrapperSection>\r\n                {\r\n                    !isLoading ? data?.map((i, index) => {\r\n                        return <BodyCardSection\r\n                            key={i.id}\r\n                            onClick={() => handleOpenModal(i.id, i.name)}\r\n                            custom={index}\r\n                            animate=\"visible\"\r\n                            variants={variants}\r\n                            initial=\"hidden\"\r\n                        >\r\n                            <BodyCardTitleWrapper>\r\n                                <BodyCardTitleIconWrapper>\r\n                                    <BodyCardTitleIcon>\r\n                                        <FaUserTie/>\r\n                                    </BodyCardTitleIcon>\r\n                                    <ComeCount\r\n                                        color={i?.data === null ? false : i?.data?.comeCount !== null}>{i?.data === null ? 0 : i?.data?.comeCount === null ? 0 : i?.data?.comeCount}</ComeCount>\r\n                                </BodyCardTitleIconWrapper>\r\n                                <hr/>\r\n                                <BodyCardTitle>\r\n                                    <span style={{fontSize: \"14px\"}}>{i?.name}</span>\r\n                                    <BodyCardCountUsers>{i?.data === null ? 0 : i?.data?.allCount}</BodyCardCountUsers>\r\n                                </BodyCardTitle>\r\n                            </BodyCardTitleWrapper>\r\n                        </BodyCardSection>\r\n                    }) : (\r\n                        Array.from({length: 5}).map((_, i) => (\r\n                            <Skeleton sx={{transform: 'scale(1,1)'}} key={i} height={180}/>\r\n                        ))\r\n                    )\r\n                }\r\n            </WrapperSection>\r\n            {\r\n                !isLoading && <Box display={'flex'} justifyContent={'end'} sx={{width: '100%', my: 3}}>\r\n                    <ExportBtnToExcelForRektor direction={`Data_${s ? 'staff' : 'deans'}`} dataToExcel={data}/>\r\n                </Box>\r\n            }\r\n\r\n            {/*** ================= teacher =================== ***/}\r\n            <AnimatePresence>\r\n                {\r\n                    openModal && <Modal\r\n                        open={openModal}\r\n                        onClose={handleCloseModal}\r\n                        aria-labelledby=\"keep-mounted-modal-title\"\r\n                        aria-describedby=\"keep-mounted-modal-description\"\r\n\r\n                        component={m.div}\r\n                        initial={{opacity: 0}}\r\n                        animate={{opacity: 1}}\r\n                        transition={{duration: 0.3}}\r\n                        exit={{opacity: 0}}\r\n                    >\r\n                        <Box sx={styleTable}>\r\n                            <CloseMyButtonForChild\r\n                                onClick={handleCloseModal}\r\n                                whileHover={{rotate: 180, scale: 1.1}}\r\n                                whileTap={{scale: 0.9}}\r\n                                transition={{duration: 0.3}}\r\n                            ><RiCloseLine/></CloseMyButtonForChild>\r\n                            <h2 style={{textAlign: \"center\", color: mainColor, marginBottom: '10px'}}>{section}</h2>\r\n                            {\r\n                                rektorStaffs?.rektorStaffsLoadingStatus === \"loading\" ? <Spinner/> :\r\n                                    <ModalRektorTeachersPage\r\n                                        colName={\"Staffs\"}\r\n                                        isTeacherUrl={false}\r\n                                        kafedraMudiri={rektorStaffs?.rektorStaffs?.boss}\r\n                                        all={rektorStaffs?.rektorStaffs?.allStaffs}\r\n                                        come={rektorStaffs?.rektorStaffs?.comeStaff}\r\n                                        noCome={rektorStaffs?.rektorStaffs?.noComeStaff}\r\n                                        facultyName={section}\r\n                                        kafedraId={rektorStaffs?.rektorStaffs?.id}\r\n                                    />\r\n                            }\r\n                        </Box>\r\n                    </Modal>\r\n                }\r\n            </AnimatePresence>\r\n            {/*** ================= teacher =================== ***/}\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst styleTable = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: \"90vw\",\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    borderRadius: 3,\r\n    p: 4,\r\n};\r\nconst CloseMyButtonForChild = styled(m.button)`\r\n    width: 30px;\r\n    height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: ${mainColor};\r\n    border-radius: 50%;\r\n    color: white;\r\n    font-size: 26px;\r\n    border: none;\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n`;\r\n\r\n\r\nconst ComeCount = styled.div`\r\n    align-self: flex-end;\r\n    color: ${props => props.color ? \"lime\" : \"red\"};\r\n    display: flex;\r\n\r\n`\r\n\r\nconst BodyCardCountUsers = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    font-size: 30px;\r\n    font-weight: 200;\r\n`;\r\n\r\nconst BodyCardTitle = styled.span`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n`;\r\n\r\nconst BodyCardTitleIcon = styled.span`\r\n    margin-top: -35px;\r\n    width: 55px;\r\n    height: 55px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 30px;\r\n    background: #deedf4;\r\n    border-radius: 15%;\r\n`;\r\n\r\nconst BodyCardTitleIconWrapper = styled.span`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 24px;\r\n`;\r\n\r\nconst BodyCardTitleWrapper = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    padding: 5px 15px !important;\r\n    margin-top: 10px !important;\r\n`;\r\n\r\nconst BodyCardSection = styled(m.div)`\r\n    height: 150px;\r\n    width: 100%;\r\n    display: flex;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    color: ${mainColor};\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        box-shadow: 2px 3px 5px 1px rgba(81, 159, 219, 0.43);\r\n    }\r\n`;\r\n\r\n\r\nconst WrapperSection = styled(m.div)`\r\n    margin: 30px 0;\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    gap: 40px;\r\n    padding: 10px 0 !important;\r\n\r\n    ${xlarge({\r\n        gridTemplateColumns: \"repeat(3,1fr)\",\r\n    })}\r\n    ${large({\r\n        gridTemplateColumns: \"repeat(3,1fr)\",\r\n    })}\r\n    ${medium({\r\n        gridTemplateColumns: \"repeat(2,1fr)\",\r\n    })}\r\n    ${small({\r\n        gridTemplateColumns: \"repeat(2,1fr)\",\r\n    })}\r\n    ${extrasmall({\r\n        gridTemplateColumns: \"repeat(1,1fr)\",\r\n    })}\r\n`;\r\n\r\n\r\nexport default RektorStaff;"],"names":["styleTable","position","top","left","transform","width","bgcolor","boxShadow","borderRadius","p","CloseMyButtonForChild","styled","m","mainColor","ComeCount","props","color","BodyCardCountUsers","BodyCardTitle","BodyCardTitleIcon","BodyCardTitleIconWrapper","BodyCardTitleWrapper","BodyCardSection","WrapperSection","xlarge","gridTemplateColumns","large","medium","small","extrasmall","s","navigate","useNavigate","useEffect","token","localStorage","getItem","TOKEN","decode","jwtDecode","roleName2","roles","find","i","roleName","roleName3","useState","data","setData","section","setSection","isLoading","setIsLoading","openModal","setOpenModal","axios","BASE_URL","headers","then","res","catch","err","console","log","finally","dispatch","useDispatch","getHeaders","handleCloseModal","rektorStaffs","useSelector","state","variants","visible","index","scale","transition","delay","hidden","Array","from","length","map","_","sx","height","onClick","id","name","rektorStaffsFetching","fetchRektorStaffs","obj","custom","animate","initial","comeCount","style","fontSize","allCount","display","justifyContent","my","direction","dataToExcel","open","onClose","component","opacity","duration","exit","whileHover","rotate","whileTap","textAlign","marginBottom","rektorStaffsLoadingStatus","colName","isTeacherUrl","kafedraMudiri","boss","all","allStaffs","come","comeStaff","noCome","noComeStaff","facultyName","kafedraId"],"sourceRoot":""}