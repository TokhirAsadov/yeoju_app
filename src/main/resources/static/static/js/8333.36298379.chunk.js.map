{"version":3,"file":"static/js/8333.36298379.chunk.js","mappings":"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","sources":["components/uquvbulimi/teachers/EducationalTeachers.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {extrasmall} from \"../../../responsiv\";\r\nimport {BASE_URL, getHeaders} from \"../../../utills/ServiceUrls\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport axios from \"axios\";\r\nimport TeacherTimeTableOfWeek from \"../../teacher/timeTable/TeacherTimeTableOfWeek\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/ru';\r\n\r\nconst EducationalTeachers = () => {\r\n\r\n    const [eduTypes, setEduTypes] = useState([]);\r\n    const [teachers, setTeachers] = useState([]);\r\n    const [selectEduTypeId, setSelectEduTypeId] = useState(null);\r\n    const [selectTeacherId, setSelectTeacherId] = useState(null);\r\n    const {headers} = getHeaders();\r\n\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [statistics, setStatistics] = useState(null);\r\n\r\n\r\n    const getDaysOfWeek = (weekNumber, year) => {\r\n        moment.locale('ru');\r\n        const startDate = moment().year(year).isoWeek(weekNumber).startOf('isoWeek');\r\n        const daysOfWeek = [];\r\n        for (let i = 0; i < 6; i++) {\r\n            daysOfWeek.push(startDate.clone().add(i, 'days').toDate());\r\n        }\r\n        return daysOfWeek;\r\n    };\r\n    const [objWeek, setObjWeek] = useState({\r\n        date: moment().format('YYYY-[W]WW'),\r\n        dateFrom: moment().startOf('isoWeek').toDate(),\r\n        dateTo: moment().endOf('isoWeek').toDate(),\r\n        weekNumber: moment().isoWeek(),\r\n        daysOfWeek: getDaysOfWeek(moment().isoWeek(), moment().year()),\r\n    });\r\n\r\n    const onChange = (event) => {\r\n        const date=event.target.value\r\n        const weekNumber = moment(date).isoWeek();\r\n        const dateFrom = moment(date).startOf('isoWeek').toDate();\r\n        const dateTo = moment(date).endOf('isoWeek').toDate();\r\n        const dateYear = moment(date).year()\r\n\r\n        setObjWeek({\r\n            date,\r\n            dateFrom,\r\n            dateTo,\r\n            weekNumber,\r\n            daysOfWeek: getDaysOfWeek(weekNumber, dateYear)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchKafedra()\r\n    }, [])\r\n\r\n    const fetchKafedra = () => {\r\n        axios.get(BASE_URL + \"/kafedra/getKafedrasForSelect\", {headers})\r\n            .then(res => {\r\n                setEduTypes(res?.data?.obj)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        selectEduTypeId && axios.get(BASE_URL + \"/kafedra/getTeachersForSelectByKafedraId?kafedraId=\" + selectEduTypeId, {headers})\r\n            .then(res => {\r\n                setTeachers(res?.data?.obj)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [selectEduTypeId])\r\n\r\n    useEffect(() => {\r\n\r\n        setIsLoading(true)\r\n        selectTeacherId && axios.get(BASE_URL + \"/timeTableByWeekOfYear/getTeacherTimeTable?t=\" + selectTeacherId + \"&week=\" + objWeek?.weekNumber + \"&year=\" + moment(objWeek?.date).format(\"YYYY\"), {headers})\r\n            .then(res => {\r\n                const resultData = res?.data?.obj\r\n\r\n                const convertDate = [];\r\n\r\n                const showGroups = {};\r\n\r\n                resultData?.forEach((item) => {\r\n                    item.shows.forEach((show) => {\r\n                        const key = show.daysName;\r\n                        if (!showGroups[key]) {\r\n                            showGroups[key] = {\r\n                                teacherData: item.teacherData,\r\n                                shows: [],\r\n                            };\r\n                        }\r\n                        showGroups[key].shows.push(show);\r\n                    });\r\n                });\r\n\r\n                for (const key in showGroups) {\r\n                    convertDate.push(showGroups[key]);\r\n                }\r\n\r\n                console.log(convertDate);\r\n                setData(convertDate)\r\n                setIsLoading(false)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n        selectTeacherId != null && fetchStatistics(selectTeacherId);\r\n\r\n    }, [selectTeacherId, objWeek])\r\n\r\n    const fetchStatistics = (teacherId) => {\r\n\r\n        axios.get(BASE_URL + \"/user/getTeacherStatisticsForTimeTableByWeek?teacherId=\" + teacherId + \"&week=\" + objWeek?.weekNumber + \"&year=\" + moment(objWeek?.date).format(\"YYYY\"), {headers})\r\n            .then(res => {\r\n                setStatistics(res?.data?.obj);\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Wrapperinput>\r\n                <Selectbox>\r\n\r\n                    <Autocomplete\r\n                        disablePortal\r\n                        id=\"combo-box-demo\"\r\n                        options={eduTypes}\r\n                        onChange={(event, newValue) => {\r\n                            setSelectEduTypeId(newValue?.value)\r\n                        }}\r\n\r\n                        sx={{width: 300}}\r\n                        renderInput={(params) => <TextField {...params} label=\"Kafedra\"/>}\r\n                    />\r\n                </Selectbox>\r\n                <Selectbox>\r\n\r\n                    <Autocomplete\r\n                        disablePortal\r\n                        id=\"combo-box-demo\"\r\n                        options={teachers}\r\n                        onChange={(event, newValue) => {\r\n\r\n                            setSelectTeacherId(newValue?.value)\r\n                        }}\r\n\r\n                        sx={{width: 300}}\r\n                        renderInput={(params) => <TextField {...params} label=\"Teacher\"/>}\r\n                    />\r\n                </Selectbox>\r\n\r\n                <TextField\r\n                    label=\"Date of the week\"\r\n                    type=\"week\"\r\n                    sx={{width: \"200px\"}}\r\n                    value={objWeek.date}\r\n                    onChange={onChange}\r\n                />\r\n            </Wrapperinput>\r\n            {selectTeacherId &&\r\n                <TeacherTimeTableOfWeek isLoading={isLoading} obj={objWeek} data={data} statistics={statistics}/>}\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nconst Selectbox = styled.div`\r\n    width: 300px;\r\n    ${extrasmall({\r\n        width: \"80%\"\r\n    })}\r\n`\r\nconst Wrapperinput = styled.div`\r\n\r\n    padding: 10px 0;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    gap: 25px;\r\n    overflow: hidden;\r\n    margin: 15px 15px 0;\r\n\r\n    ${extrasmall({\r\n        margin: \"15px 0 0 0\",\r\n        justifyContent: \"center\"\r\n    })}\r\n`\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    padding: 1rem;\r\n\r\n`\r\n\r\n\r\nexport default EducationalTeachers;"],"names":["Selectbox","styled","extrasmall","width","Wrapperinput","margin","justifyContent","Container","useState","eduTypes","setEduTypes","teachers","setTeachers","selectEduTypeId","setSelectEduTypeId","selectTeacherId","setSelectTeacherId","headers","getHeaders","data","setData","isLoading","setIsLoading","statistics","setStatistics","getDaysOfWeek","weekNumber","year","moment","startDate","isoWeek","startOf","daysOfWeek","i","push","clone","add","toDate","date","format","dateFrom","dateTo","endOf","objWeek","setObjWeek","useEffect","fetchKafedra","axios","BASE_URL","then","res","obj","catch","err","console","log","resultData","convertDate","showGroups","key","forEach","item","shows","show","daysName","teacherData","fetchStatistics","teacherId","disablePortal","id","options","onChange","event","newValue","value","sx","renderInput","params","label","type","target","dateYear"],"sourceRoot":""}