{"version":3,"file":"static/js/7626.97eba41d.chunk.js","mappings":"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","sources":["components/admin/rooms/Rooms.jsx","components/form/FormForItem.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {ADMIN, BASE_URL, getHeaders, mainColor} from \"../../../utills/ServiceUrls\";\r\nimport {DataGrid, GridToolbar} from \"@mui/x-data-grid\";\r\nimport Spinner from \"../../spinner/Spinner\";\r\nimport Modal from '@mui/material/Modal';\r\nimport {RiCloseLine} from \"react-icons/ri\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FormForItem from \"../../form/FormForItem\";\r\nimport axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport {extrasmall} from \"../../../responsiv\";\r\nimport ButtonMui from \"@mui/material/Button\";\r\nimport {MdAddHome} from \"react-icons/md\";\r\nimport {FaEdit, FaList, FaTrash} from \"react-icons/fa\";\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 365,\r\n    bgcolor: 'background.paper',\r\n    borderRadius: 2,\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n\r\nconst Rooms = () => {\r\n    const [spinner, setSpinner] = useState(true);\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const [updateItem, setUpdateItem] = useState({})\r\n\r\n    const columns = [\r\n        {field: 'id', headerName: 'ID', width: 40, editable: false},\r\n        {field: 'name', headerName: 'Name', type: 'string', width: 300, editable: false,},\r\n        {\r\n            field: 'state', headerName: 'State', type: 'string', width: 240, editable: false,\r\n            renderCell: (cellValues) => {\r\n                return (\r\n                    <Wrapper>\r\n                        <Button\r\n                            bg={\"blue\"}\r\n                            variant=\"contained\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                getUpdateItem(cellValues.id);\r\n                            }}\r\n                        >\r\n                            <FaEdit />\r\n                            Update\r\n                        </Button>\r\n\r\n                        <Button\r\n                            bg={\"red\"}\r\n                            variant=\"contained\"\r\n                            color=\"danger\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                checkDelete(cellValues.id);\r\n                            }}\r\n                        >\r\n                            <FaTrash />\r\n                            Delete\r\n                        </Button>\r\n                    </Wrapper>\r\n                );\r\n            }\r\n        },\r\n    ];\r\n    const [data, setData] = useState([\r\n        {id: 1, name: \"Tohir Asadov\", state: \"123456\",},\r\n        {id: 2, name: \"Tohir Asadov\", state: \"123456\",},\r\n    ])\r\n\r\n    const {headers} = getHeaders();\r\n\r\n    const saveRoom = (form) => {\r\n\r\n        axios.post(BASE_URL + ADMIN.ROOM_SAVE, form, {headers})\r\n            .then(response => {\r\n                toast.success(\"Room success saved\");\r\n                getAllRooms();\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                toast.error(err.message);\r\n            });\r\n\r\n    }\r\n\r\n\r\n    const addModalOpen = () => {\r\n        setUpdateItem({...updateItem, id: null, name: null})\r\n        handleOpen();\r\n    }\r\n\r\n    const checkDelete = (id) => {\r\n        axios.get(BASE_URL + ADMIN.ROOM_GET_ELEMENT_BY_ID + id, {headers})\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    if (window.confirm(\"Do you agree to delete \" + res.data?.obj?.name + \" room?\")) {\r\n                        onDelete(id);\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onDelete = (id) => {\r\n        axios.delete(BASE_URL + ADMIN.ROOM_DELETE + id, {headers})\r\n            .then(res => {\r\n                if (res.status === 204) {\r\n                    toast.success(\"Deleted room successfully!...\")\r\n                    setData(data.filter(item => item.id !== id));\r\n                    getAllRooms();\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const getUpdateItem = (id) => {\r\n        axios.get(BASE_URL + ADMIN.ROOM_GET_ELEMENT_BY_ID + id, {headers})\r\n            .then(res => {\r\n                setUpdateItem(res.data.obj);\r\n                if (res.data?.obj !== null) {\r\n                    handleOpen();\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onUpdate = (room) => {\r\n        axios.put(BASE_URL + ADMIN.ROOM_UPDATE, room, {headers})\r\n            .then(res => {\r\n                if (res.status === 202) toast.success(\"Room updated successfully!...\")\r\n                getAllRooms();\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllRooms()\r\n    }, [])\r\n\r\n    const getAllRooms = () => {\r\n        axios.get(BASE_URL + ADMIN.ALL_ROOMS, {headers})\r\n            .then(res => {\r\n                let item = res.data.obj.sort((a, b) => a.name > b.name ? 1 : -1);\r\n                setSpinner(false);\r\n                setData(item);\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"keep-mounted-modal-title\"\r\n                aria-describedby=\"keep-mounted-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <CloseButtonForChild onClick={handleClose}><RiCloseLine/></CloseButtonForChild>\r\n                    <FormForItem\r\n                        title={updateItem?.id !== null ? \"UPDATE ROOM\" : \"ADD ROOM\"}\r\n                        formArr={[\r\n                            {\r\n                                label: \"add room\",\r\n                                name: \"name\",\r\n                                placeholder: \"Enter name of room\",\r\n                                type: \"text\"\r\n                            }\r\n                        ]}\r\n                        submitBtn={updateItem?.id !== null ? \"Update\" : \"Save\"}\r\n                        updateItem={updateItem}\r\n                        onSubmit={(form) => updateItem?.id !== null ? onUpdate(form) : saveRoom(form)}\r\n                    />\r\n                </Box>\r\n            </Modal>\r\n            <TitleMain>\r\n                <p><FaList /> Table of Rooms</p>\r\n                <ButtonMui\r\n                    variant={'contained'}\r\n                    color={'success'}\r\n                    endIcon={<MdAddHome/>}\r\n                    onClick={addModalOpen}> Add Room</ButtonMui></TitleMain>\r\n            <Body>\r\n                {\r\n                    spinner ? <Spinner/> : <DataGrid\r\n                        checkboxSelection\r\n                        style={{width: \"500px!important\", minHeight: \"300px!important\"}}\r\n                        columns={columns}\r\n                        rows={data}\r\n                        components={{Toolbar: GridToolbar}}/*** print and excel ****/\r\n                        autoHeight\r\n                        pageSize={50}\r\n                        initialState={{ // hide items\r\n                            ...data.initialState,\r\n                            columns: {\r\n                                columnVisibilityModel: {\r\n                                    id: false,\r\n                                    login: false,\r\n                                    card: false,\r\n                                    passport: false\r\n                                },\r\n                            },\r\n                        }}\r\n                    />\r\n                }\r\n            </Body>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst CloseButtonForChild = styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    border-radius: 50%;\r\n    color: ${mainColor};\r\n    font-size: 26px;\r\n    border: none;\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    gap: 10px;\r\n    margin: 5px !important;\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n    float: ${props => props.float};\r\n    width: ${props => props.width ? props.width : \"100%\"};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    color: #ffffff;\r\n    gap: 10px;\r\n    background-color: ${props => props.bg};\r\n    padding: ${props => props.padding ? props.padding : \"5px 10px\"};\r\n    font-size: 16px;\r\n    border: none;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    letter-spacing: 1.2px;\r\n\r\n    &:focus {\r\n        transform: scale(0.95);\r\n    }\r\n`;\r\n\r\nconst Body = styled.div`\r\n    width: 100%;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst TitleMain = styled.h1`\r\n    padding: 0 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    p {\r\n        color: ${mainColor};\r\n        font-size: 25px;\r\n        font-weight: bold;\r\n\r\n        ${extrasmall({\r\n            textAlign: \"start\",\r\n            fontSize: \"15px\",\r\n        })}\r\n\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    padding: 10px !important;\r\n`;\r\n\r\n\r\nexport default Rooms;","import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {mainColor} from \"../../utills/ServiceUrls\";\r\nimport {FaEdit, FaSave} from \"react-icons/fa\";\r\n\r\n\r\nconst prepareForm = (formArr) => {\r\n    return formArr.reduce((r,v) => ({...r,[v.name]: \"\"}),{});\r\n}\r\n\r\nconst FormForItem = ({ title,formArr, submitBtn, onSubmit,updateItem, redirect }) => {\r\n    const initialForm = prepareForm(formArr);\r\n    const [form,setForm] = useState(prepareForm(formArr));\r\n\r\n    const onChangeHandler = (e) => setForm(p => ({...p,[e.target.name]: e.target.value}));\r\n\r\n    const onSubmitHandler = () => onSubmit(form, ()=> {\r\n            setForm(initialForm);\r\n        }\r\n    );\r\n\r\n    useEffect(()=>{\r\n      if (updateItem?.name) setForm({...form,id:updateItem?.id,name:updateItem?.name})\r\n      else  setForm({...form,id:updateItem?.id,nameEn:updateItem?.nameEn,nameRu:updateItem?.nameRu,nameUz:updateItem?.nameUz})\r\n    },[])\r\n\r\n    const hasRedirect = !!redirect;\r\n\r\n    return (\r\n        <SForm >\r\n            <Title>{title}</Title>\r\n                <InputWrapper >\r\n            {formArr?.map(({label,name,placeholder,type,value},index) => (\r\n                    <Input\r\n                      key={index}\r\n                        display={ name === \"id\" }\r\n                        id={name}\r\n                        name={name}\r\n                        type={type}\r\n                        value={form[name]}\r\n                        onChange={(e) => onChangeHandler(e)}\r\n                        placeholder={placeholder}\r\n                    />\r\n            ))}\r\n                </InputWrapper>\r\n            <Button\r\n                onClick={(e) => {\r\n                    e.preventDefault();\r\n                    onSubmitHandler();\r\n                }}\r\n            >{title.startsWith(\"UPDATE\") ? <FaEdit/> : <FaSave/>}\r\n                {submitBtn}\r\n            </Button>\r\n            { hasRedirect && (\r\n                <Redirect>\r\n                    <RedirectLabel>{redirect.label}&nbsp;</RedirectLabel>\r\n                    <RedirectLink to={redirect.link.to}>{redirect.link.label}</RedirectLink>\r\n                </Redirect>\r\n            )}\r\n        </SForm>\r\n    );\r\n};\r\n\r\nconst SForm = styled.form`\r\n  width: 100%;\r\n  color: ${mainColor};\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 1px solid ${mainColor};\r\n  margin: 0 auto;\r\n  height: 40px;\r\n  width: 200px;\r\n  padding-left: 10px!important;\r\n  border-radius: 5px;\r\n  display: ${props => props.display ? \"none\" : \"\"};\r\n  \r\n  &::placeholder{\r\n    font-size: 14px;\r\n    letter-spacing: 1.1px;\r\n    color: ${mainColor};\r\n  }\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n  width: 200px;\r\n  margin: 0 auto;\r\n  height: 30px;\r\n  margin-top: 30px!important;\r\n  background-color: ${mainColor};\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  font-size: 16px;\r\n  letter-spacing: 0.7px;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: all ease 0.4s;\r\n  border: none;\r\n  border-radius: 5px;\r\n  \r\n  &:focus{\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n\r\nconst Redirect = styled.div`\r\n  font-size: 12px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 10px!important;\r\n`;\r\n\r\nconst RedirectLabel = styled.span`\r\n\r\n`;\r\nconst Title = styled.h3`\r\n  font-size: 18px;\r\n  color: ${mainColor};\r\n  margin-bottom: 20px!important;\r\n`;\r\n\r\nconst RedirectLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: blue;\r\n`;\r\n\r\n\r\n\r\nexport default FormForItem;"],"names":["style","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","p","CloseButtonForChild","styled","mainColor","Wrapper","Button","props","float","bg","padding","Body","TitleMain","extrasmall","textAlign","fontSize","Container","useState","spinner","setSpinner","React","open","setOpen","handleOpen","handleClose","updateItem","setUpdateItem","columns","field","headerName","editable","type","renderCell","cellValues","variant","onClick","e","preventDefault","getUpdateItem","id","color","checkDelete","name","state","data","setData","headers","getHeaders","axios","BASE_URL","ADMIN","then","res","status","window","confirm","obj","onDelete","catch","err","console","log","toast","filter","item","getAllRooms","useEffect","sort","a","b","onClose","sx","title","formArr","label","placeholder","submitBtn","onSubmit","form","room","response","message","saveRoom","endIcon","checkboxSelection","minHeight","rows","components","Toolbar","GridToolbar","autoHeight","pageSize","initialState","columnVisibilityModel","login","card","passport","prepareForm","reduce","r","v","SForm","InputWrapper","Input","display","Redirect","RedirectLabel","Title","RedirectLink","Link","redirect","initialForm","setForm","nameEn","nameRu","nameUz","hasRedirect","map","index","value","onChange","target","onChangeHandler","startsWith","to","link"],"sourceRoot":""}