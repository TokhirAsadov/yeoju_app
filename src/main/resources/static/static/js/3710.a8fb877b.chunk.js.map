{"version":3,"file":"static/js/3710.a8fb877b.chunk.js","mappings":"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","sources":["../node_modules/react-circular-progressbar/src/Path.tsx","../node_modules/react-circular-progressbar/src/CircularProgressbar.tsx","../node_modules/react-circular-progressbar/src/constants.ts","components/dekan/dashboard/card/DashboardCard.jsx","components/dekan/dashboard/chart/barChart/DashboardBarChart.jsx","components/dekan/dashboard/chart/barChart/DashboardBarChartSection.jsx","components/dekan/dashboard/Dashboard.jsx"],"sourcesContent":["import * as React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nfunction Path({\n  className,\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, dashRatio, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n}: {\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import * as React from 'react';\n\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\nimport { CircularProgressbarDefaultProps, CircularProgressbarProps } from './types';\n\nclass CircularProgressbar extends React.Component<CircularProgressbarProps> {\n  static defaultProps: CircularProgressbarDefaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n    text: '',\n  };\n\n  getBackgroundPadding() {\n    if (!this.props.background) {\n      // Don't add padding if not displaying background\n      return 0;\n    }\n    return this.props.backgroundPadding;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  // Ratio of path length to trail length, as a value between 0 and 1\n  getPathRatio() {\n    const { value, minValue, maxValue } = this.props;\n    const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  }\n\n  render() {\n    const {\n      circleRatio,\n      className,\n      classes,\n      counterClockwise,\n      styles,\n      strokeWidth,\n      text,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n    const pathRatio = this.getPathRatio();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n        data-test-id=\"CircularProgressbar\"\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          dashRatio={circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          dashRatio={pathRatio * circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n","export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {CircularProgressbar} from \"react-circular-progressbar\";\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport {mainColor} from \"../../../../utills/ServiceUrls\";\r\n\r\nconst DashboardCard = ({course, comeCount, allCount}) => {\r\n    return (\r\n        <DashboardCardWrapper>\r\n            <DashboardCardData\r\n                color={course === 1 ? mainColor : course === 2 ? \"#FD8539\" : course === 3 ? \"#2ED480\" : \"#FE6D8E\"}>\r\n                <DashboardCardDataTitle>Course - {course}</DashboardCardDataTitle>\r\n                <DashboardCardDataStatistics>{comeCount}</DashboardCardDataStatistics>\r\n                <DashboardCardDataStatistics>{allCount}</DashboardCardDataStatistics>\r\n            </DashboardCardData>\r\n            {\r\n                comeCount && allCount && <DashboardCardChartWrapper>\r\n                    <CircularProgressbar\r\n                        value={Math.ceil(comeCount / allCount * 100)}\r\n                        text={`${Math.ceil(comeCount / allCount * 100)}%`}\r\n                        styles={{\r\n                            pathTransition: \"none\",\r\n                            path: {\r\n                                stroke: course === 1 ? mainColor : course === 2 ? \"#FD8539\" : course === 3 ? \"#2ED480\" : \"#FE6D8E\",\r\n                                strokeWidth: '20px',\r\n                                transformOrigin: 'center center',\r\n                                filter: `drop-shadow(2px 4px 6px ${course === 1 ? mainColor : course === 2 ? \"#FD8539\" : course === 3 ? \"#2ED480\" : \"#FE6D8E\"})`\r\n                            },\r\n                            root: {\r\n                                width: '4rem',\r\n                                overflow: \"visible\"\r\n                            },\r\n                            text: {\r\n                                fill: `${course === 1 ? mainColor : course === 2 ? \"#FD8539\" : course === 3 ? \"#2ED480\" : \"#FE6D8E\"}`,\r\n                                fontSize: '20px',\r\n                            },\r\n                            trail: {\r\n                                strokeWidth: '24px',\r\n                                transformOrigin: 'center center',\r\n                                stroke: '#F2F6FC'\r\n                            }\r\n                        }}\r\n                    />\r\n                </DashboardCardChartWrapper>\r\n            }\r\n        </DashboardCardWrapper>\r\n    );\r\n};\r\n\r\nconst DashboardCardChartWrapper = styled.span`\r\n    width: 80px !important;\r\n    height: 80px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst DashboardCardDataStatistics = styled.span`\r\n    font-size: 30px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst DashboardCardDataTitle = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 300;\r\n`;\r\n\r\nconst DashboardCardData = styled.div`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    color: ${props => props.color};\r\n`;\r\n\r\nconst DashboardCardWrapper = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    min-height: 120px;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 5px 20px;\r\n    cursor: pointer;\r\n\r\n`;\r\n\r\n\r\nexport default DashboardCard;","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from \"styled-components\";\r\nimport {BASE_URL, DEKAN, getHeaders, mainColor} from \"../../../../../utills/ServiceUrls\";\r\nimport './dashboardBarChart.css';\r\nimport axios from \"axios\";\r\nimport {useSelector} from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport Box from '@mui/material/Box';\r\nimport Select from \"@mui/material/Select\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport {FaLayerGroup} from \"react-icons/fa\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport {extrasmall, small} from \"../../../../../responsiv\";\r\nimport Skeleton from '@mui/material/Skeleton';\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport '../../tabsgroup.css';\r\nimport NoImg from \"../../../../../utills/images/no-picture.jpg\";\r\nimport EmptyDataImg from \"../../../../emptyDataImg/EmptyDataImg\";\r\nimport * as XLSX from 'xlsx';\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst DashboardBarChart = () => {\r\n\r\n    const [s1, setS1] = useState([])\r\n    const dekanat = useSelector(state => state?.dekanat?.dekanat)\r\n    const educationYear = useSelector(state => state?.educationYear?.educationYear)\r\n    const {headers} = getHeaders()\r\n    const [allgroup, setAllgroup] = useState([])\r\n    const [valueTabs, setValueTabs] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const handleChangeSelectInput = (event) => {\r\n        setStep(event.target.value);\r\n    };\r\n    const handleChange = (event, newValue) => {\r\n        setValueTabs(newValue);\r\n    };\r\n\r\n    function pres(a, b) {\r\n        if (!a || !b) return 0\r\n        return Math.ceil(b * 100 / a)\r\n    }\r\n\r\n    function pres2(a) {\r\n        return 100 - a\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(BASE_URL + DEKAN.GET_GROUP_STATISTICS + `?endTime=${moment(new Date()).format(\"yyyy.MM.DD\")} 23%3A59&&startTime=${moment(new Date()).format(\"yyyy.MM.DD\")} 00%3A00`, {headers})\r\n            .then(res => {\r\n\r\n                setAllgroup(res.data?.reduce((acc, {name, allCount, comeCount, level}) => {\r\n                    const title = name.split(\"-\")[0];\r\n                    const existingGroup = acc.find((item) => item.title === title);\r\n\r\n                    if (existingGroup) {\r\n                        existingGroup.groups.push({name, allCount, comeCount, level});\r\n                    } else {\r\n                        acc.push({\r\n                            title,\r\n                            groups: [{name, allCount, comeCount, level}],\r\n                        });\r\n                    }\r\n\r\n                    return acc;\r\n                }, []))\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n\r\n    function TabPanel(props) {\r\n        const {children, value, index, ...other} = props;\r\n\r\n        return (\r\n            <div\r\n                role=\"tabpanel\"\r\n                hidden={value !== index}\r\n                id={`simple-tabpanel-${index}`}\r\n                aria-labelledby={`simple-tab-${index}`}\r\n                {...other}\r\n            >\r\n                {value === index && (\r\n                    <Box sx={{p: 0}}>\r\n                        <div>{children}</div>\r\n                    </Box>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    TabPanel.propTypes = {\r\n        children: PropTypes.node,\r\n        index: PropTypes.number.isRequired,\r\n        value: PropTypes.number.isRequired,\r\n    };\r\n\r\n    function a11yProps(index) {\r\n        return {\r\n            id: `simple-tab-${index}`,\r\n            'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n    }\r\n\r\n\r\n    let steps = [5, 10, 20, 30, 40, 50];\r\n    const [step, setStep] = useState(steps[0]);\r\n\r\n    let days = [1, 2, 3, 4, 5]\r\n    const [objWeek, setObjWeek] = useState({\r\n        date: new Date(),\r\n        dateFrom: moment().startOf('isoWeek').toDate(),\r\n        dateTo: moment().endOf('isoWeek').toDate(),\r\n        weekNumber: moment().isoWeek(),\r\n        weekDay: moment().day()\r\n    });\r\n\r\n\r\n    const [levelStatistics, setLevelStatistics] = useState([]);\r\n    const [levelTimeTable, setLevelTimeTable] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setS1([])\r\n        setIsLoading(true)\r\n        allgroup?.length > 0 && dekanat && educationYear && axios.get(`${BASE_URL}/timeTableByWeekOfYear/studentStatisticsWithWeekOfEduYear/${educationYear?.id}?facultyId=${dekanat?.faculties?.find(faculty => faculty?.shortName === allgroup?.[valueTabs]?.title?.substring(0, 3))?.id}&facultyShortName=${dekanat?.faculties?.find(faculty => faculty?.shortName === allgroup?.[valueTabs]?.title?.substring(0, 3))?.shortName}&eduType=${dekanat?.eduType?.name}&eduTypeId=${dekanat?.eduType?.id}`)\r\n            .then(res => {\r\n                setLevelStatistics(\r\n                    res?.data?.obj?.map(item => {\r\n                        let arr3 = [];\r\n                        item?.map(child => {\r\n\r\n                            days.map(day => {\r\n                                child?.sortNumber === objWeek?.weekNumber ?\r\n                                    day <= objWeek?.weekDay && arr3.push(child?.[day]?.statistics?.map(statistic => ({\r\n                                        ...statistic,\r\n                                        day,\r\n                                        week: child?.sortNumber\r\n                                    })))\r\n                                    :\r\n                                    arr3.push(child?.[day]?.statistics?.map(statistic => ({\r\n                                        ...statistic,\r\n                                        day,\r\n                                        week: child?.sortNumber\r\n                                    })))\r\n                            })\r\n\r\n\r\n                        })\r\n\r\n                        return Object.values(groupObjectsByFullName(arr3?.flat()));\r\n                    })\r\n                )\r\n\r\n                setLevelTimeTable(\r\n                    res?.data?.secondObj?.map(timeTable => (\r\n                            timeTable?.map(tableChild => ({\r\n                                ...tableChild,\r\n                                count: Object.values(groupObjectsByCount(tableChild?.count))\r\n                            }))\r\n                        )\r\n                    )\r\n                )\r\n\r\n                res?.data?.obj?.map(item1 => {\r\n                    item1.map(item => {\r\n                        item?.sortNumber === objWeek?.weekNumber ?\r\n                            days.map(day => {\r\n                                day <= objWeek?.weekDay && setS1(prevState => [...prevState, ...item?.[day]?.statistics])\r\n                            })\r\n                            :\r\n                            days.map(day => {\r\n                                setS1(prevState => [...prevState, ...item?.[day]?.statistics])\r\n                            })\r\n                    })\r\n\r\n                })\r\n                setIsLoading(false)\r\n            })\r\n            .catch(err => {\r\n                setIsLoading(false)\r\n                console.log(err)\r\n            })\r\n    }, [educationYear, valueTabs, allgroup])\r\n\r\n\r\n    function groupObjectsByLevel(arr) {\r\n        return arr.reduce((groupedObjects, obj) => {\r\n            const name = obj?.level;\r\n\r\n            if (groupedObjects[name]) {\r\n                groupedObjects[name].push(obj);\r\n            } else {\r\n                groupedObjects[name] = [obj];\r\n            }\r\n\r\n            return groupedObjects;\r\n        }, {});\r\n    }\r\n\r\n    function groupObjectsByCount(arr) {\r\n        return arr.reduce((groupedObjects, obj) => {\r\n            const name = obj;\r\n\r\n            if (groupedObjects[name]) {\r\n                groupedObjects[name].push(obj);\r\n            } else {\r\n                groupedObjects[name] = [obj];\r\n            }\r\n\r\n            return groupedObjects;\r\n        }, {});\r\n    }\r\n\r\n    function groupObjectsByFullName(arr) {\r\n\r\n        return arr.reduce((groupedObjects, obj) => {\r\n            const name = obj?.fullName;\r\n\r\n            if (groupedObjects[name]) {\r\n                groupedObjects[name].push(obj);\r\n            } else {\r\n                groupedObjects[name] = [obj];\r\n            }\r\n\r\n            return groupedObjects;\r\n        }, {});\r\n\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(Object.values(groupObjectsByLevel(s1)))\r\n\r\n    }, [valueTabs])\r\n\r\n    const exportToExcel = (data) => {\r\n        if (!data || data.length === 0) {\r\n            console.error('No data to export.');\r\n            return;\r\n        }\r\n        const sortedData = data.sort((a, b) =>\r\n            a.name.toUpperCase().localeCompare(b.name.toUpperCase())\r\n        );\r\n\r\n        const headerRow = ['№', 'Group Name', 'All Students', 'Students Came', 'Percent', 'Level', `${moment().format('DD.MM.YYYY HH:mm')}`];\r\n\r\n        const sheetData = [headerRow, ...sortedData.map((item, index) => [\r\n            index + 1,\r\n            item.name,\r\n            item.allCount,\r\n            item.comeCount || 0,\r\n            pres(item.allCount, item.comeCount || 0),\r\n            item.level,\r\n        ])];\r\n\r\n        const workbook = XLSX.utils.book_new();\r\n        const worksheet = XLSX.utils.aoa_to_sheet(sheetData);\r\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'GroupData');\r\n        const fileName = `${sortedData[0].name.substring(0, sortedData[0].name.indexOf('-'))}-groups.xlsx`;\r\n        XLSX.writeFile(workbook, fileName);\r\n    };\r\n\r\n    return (\r\n        <Container id={\"chart\"}>\r\n            <div className='dekantabs'>\r\n                <Tabs variant=\"scrollable\"\r\n                      scrollButtons\r\n                      allowScrollButtonsMobile\r\n                      value={valueTabs}\r\n                      onChange={handleChange}\r\n                      indicatorColor=\"\"\r\n                      aria-label=\"basic tabs example\">\r\n\r\n                    {allgroup?.map((item, key) => (\r\n                        <Tab\r\n                            component={tabsitem}\r\n                            key={key}\r\n                            label={item?.title} {...a11yProps(key)}/>\r\n                    ))}\r\n                </Tabs>\r\n            </div>\r\n            {allgroup?.map((item, key) => (\r\n                <TabPanel value={valueTabs} index={key} key={key}>\r\n                    <SelectBox>\r\n                        <FormControl sx={{minWidth: 100}} size=\"small\">\r\n                            <InputLabel id=\"select-label\">Size</InputLabel>\r\n                            <Select\r\n                                labelId=\"select-label\"\r\n                                id=\"select-small-size\"\r\n                                value={step}\r\n                                label=\"Size\"\r\n                                onChange={handleChangeSelectInput}\r\n                            >\r\n                                {steps.map((item, index) => (\r\n                                    <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </SelectBox>\r\n\r\n                    <Cardcore2>\r\n                        {isLoading && Array.from({length: 4}).map((_, index) => (\r\n                            <CardMain key={index}>\r\n                                <TitleCard\r\n                                    cl={(index === 0 && `${mainColor}`) || (index === 1 && `#FD8539`) || (index === 2 && `#2ED480`) || (index === 3 && `#FE6D8E`)}>{index + 1}-Course\r\n                                </TitleCard>\r\n                                <CardBody>\r\n                                    <Box sx={{width: \"100%\"}}>\r\n                                        <Skeleton/>\r\n                                        <Skeleton animation=\"wave\"/>\r\n                                        <Skeleton animation={false}/>\r\n                                    </Box>\r\n                                </CardBody>\r\n                            </CardMain>\r\n                        ))}\r\n                        {!isLoading && levelStatistics?.map((item, index) => (\r\n                            <CardMain key={index}>\r\n                                <TitleCard\r\n                                    cl={(index === 0 && `${mainColor}`) || (index === 1 && `#FD8539`) || (index === 2 && `#2ED480`) || (index === 3 && `#FE6D8E`)}>{index + 1}-Course\r\n                                </TitleCard>\r\n                                <CardBody>\r\n                                    {\r\n\r\n                                        item.length > 0 ? item?.sort(function (o1, o2) {\r\n                                            if (o1?.length < o2?.length) return 1;\r\n                                            else if (o1?.length > o2?.length) return -1;\r\n                                            else return 0;\r\n                                        })?.map((student, i) => {\r\n                                            let counter = 0;\r\n                                            student?.map(s3 => {\r\n\r\n                                                const nowWeek = moment().isoWeek()\r\n                                                const nowDay = moment().format('DD')\r\n\r\n                                                if (nowWeek > s3.week && Number(nowDay) > s3.day) {\r\n                                                    if (levelTimeTable?.[index]?.find(t => t?.week === s3?.week && t.groupName === s3?.groupName)?.count?.[s3?.day - 1]?.length) {\r\n                                                        counter += levelTimeTable?.[index]?.find(t => t?.week === s3?.week && t?.groupName === s3?.groupName)?.count?.[s3?.day - 1]?.length\r\n                                                    }\r\n                                                }\r\n\r\n                                            })\r\n\r\n                                            return {...student, counter}\r\n                                        })?.sort(function (o1, o2) {\r\n                                            if (o1?.counter < o2?.counter) return 1;\r\n                                            else if (o1?.counter > o2?.counter) return -1;\r\n                                            else return 0;\r\n                                        })?.map((student, i) => {\r\n\r\n                                                return i < step && <CardBodyItem key={i}>\r\n                                                    <AvatarBox>\r\n                                                        <img style={{width: \"100%\"}}\r\n                                                             src={student?.avatarimg ? student?.avatarimg : NoImg}\r\n                                                             alt=\"avatar\"/>\r\n                                                    </AvatarBox>\r\n                                                    <StudentInfo>\r\n                                                        <h6>\r\n                                                            {student?.[0]?.fullName}\r\n                                                        </h6>\r\n                                                        <p>\r\n                                                            {student?.[0]?.groupName}\r\n                                                        </p>\r\n                                                    </StudentInfo>\r\n                                                    <Nbbox>\r\n                                                        {\r\n                                                            student?.counter\r\n                                                        }\r\n                                                    </Nbbox>\r\n                                                </CardBodyItem>\r\n\r\n                                            }\r\n                                        ) : <Box>\r\n                                            <EmptyDataImg w={150} h={130}/>\r\n                                        </Box>}\r\n\r\n                                </CardBody>\r\n                            </CardMain>\r\n                        ))}\r\n\r\n                    </Cardcore2>\r\n\r\n                    <Cardcore>\r\n                        {item.groups?.sort((a, b) => {\r\n                            const nameA = a.name.toUpperCase();\r\n                            const nameB = b.name.toUpperCase();\r\n\r\n                            if (nameA < nameB) {\r\n                                return -1;\r\n                            }\r\n                            if (nameA > nameB) {\r\n                                return 1;\r\n                            }\r\n                            return 0;\r\n                        })?.map((item, key) => (\r\n                            <Carditem key={key}>\r\n                                <Rigthbox>\r\n                                    <Titlecard>\r\n                                        <FaLayerGroup/> {item.name}\r\n                                    </Titlecard>\r\n                                    <Numberbox>\r\n                                        <Numstudent color={'#9cd365'}>{item.allCount}</Numstudent>\r\n                                        <Numstudent\r\n                                            color={mainColor}>{pres(item.allCount, item.comeCount)}%</Numstudent>\r\n                                    </Numberbox>\r\n                                    <Progres>\r\n                                        <Tooltip title={`kelgan:${item.comeCount}`}>\r\n                                            <Progresitem bgcolor={mainColor}\r\n                                                         width={`${pres(item.allCount, item.comeCount)}%`}/>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={`kelmagan:${item.allCount - item.comeCount}`}>\r\n                                            <Progresitem bgcolor={\"red\"}\r\n                                                         width={`${pres2(pres(item.allCount, item.comeCount))}%`}/>\r\n                                        </Tooltip>\r\n                                    </Progres>\r\n                                </Rigthbox>\r\n                            </Carditem>\r\n                        ))}\r\n                    </Cardcore>\r\n                    <Box display={'flex'} justifyContent={'end'} marginY={2}>\r\n                        <Button variant={'contained'} onClick={() => exportToExcel(item.groups)}>export to\r\n                            excel</Button>\r\n                    </Box>\r\n                </TabPanel>\r\n            ))\r\n            }\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nconst SelectBox = styled.div`\r\n    display: flex;\r\n    justify-content: end;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nconst Nbbox = styled.div`\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 30px;\r\n    height: 30px;\r\n    background-color: red;\r\n    color: white;\r\n    border-radius: 50%;\r\n`\r\nconst StudentInfo = styled.div`\r\n    h6 {\r\n        font-size: 11px;\r\n        font-weight: bold;\r\n        color: #000000;\r\n    }\r\n\r\n    p {\r\n        font-size: 10px;\r\n        font-weight: normal;\r\n        color: silver;\r\n    }\r\n\r\n`\r\nconst AvatarBox = styled.div`\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    margin: 0 auto;\r\n\r\n`\r\nconst CardBodyItem = styled.div`\r\n    margin-top: 15px;\r\n    display: grid;\r\n    grid-template-columns: 0.2fr 1fr 0.2fr;\r\n    align-items: center;\r\n    gap: 5px;\r\n\r\n`\r\nconst CardBody = styled.div`\r\n    margin-top: 20px;\r\n\r\n    h5 {\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nconst TitleCard = styled.p`\r\n    font-size: 15px;\r\n    font-weight: bold;\r\n    color: ${props => props.cl};\r\n`\r\n\r\nconst CardMain = styled.div`\r\n    border-radius: 8px;\r\n    background-color: #fff;\r\n    padding: 10px;\r\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\r\n`\r\n\r\n\r\nconst tabsitem = styled.div`\r\n    font-size: 13px;\r\n    width: 200px !important;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    border-radius: 8px !important;;\r\n    color: ${mainColor};\r\n    padding: 5px 20px !important;\r\n    height: 42px !important;\r\n    margin: 5px !important;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0 4px 12px;\r\n\r\n    &:hover {\r\n        color: #ffffff !important;\r\n        background-color: #5093f1 !important;\r\n    }\r\n\r\n    &.Mui-selected {\r\n        color: #ffffff !important;\r\n        background-color: #5093f1 !important;\r\n    }\r\n`;\r\n\r\n\r\nconst Progresitem = styled.div`\r\n    width: ${props => props.width};\r\n    height: 100%;\r\n    background-color: ${props => props.bgcolor};\r\n`\r\nconst Progres = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    height: 8.5px;\r\n    border-radius: 5px;\r\n`\r\n\r\nconst Numstudent = styled.h6`\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    color: ${props => props.color};\r\n`\r\nconst Numberbox = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\nconst Titlecard = styled.h6`\r\n    font-size: 14px;\r\n`\r\nconst Rigthbox = styled.div`\r\n    width: 100%;\r\n`\r\n\r\n\r\nconst Carditem = styled.div`\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #fff;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n    gap: 10px;\r\n    border-radius: 5px;\r\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\r\n    cursor: pointer;\r\n    transition: 0.06s;\r\n\r\n    &:hover {\r\n        transform: scale(1.05);\r\n    }\r\n`\r\n\r\nconst Cardcore2 = styled.div`\r\n    width: 100%;\r\n    min-width: 300px;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    gap: 40px;\r\n    margin-bottom: 40px;\r\n    ${small({\r\n        gridTemplateColumns: \"auto auto\",\r\n    })}\r\n    ${extrasmall({\r\n        gridTemplateColumns: \"auto\",\r\n    })}\r\n`\r\n\r\nconst Cardcore = styled.div`\r\n    width: 100%;\r\n    min-width: 300px;\r\n    display: grid;\r\n    grid-template-columns: auto auto auto auto;\r\n    gap: 40px;\r\n    ${small({\r\n        gridTemplateColumns: \"auto auto\",\r\n    })}\r\n    ${extrasmall({\r\n        gridTemplateColumns: \"auto\",\r\n    })}\r\n`\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    margin-top: 10px;\r\n    color: ${mainColor};\r\n`;\r\n\r\nexport default DashboardBarChart;","import React,{useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {color_5, mainColor} from \"../../../../../utills/ServiceUrls\";\r\nimport DashboardBarChart from \"./DashboardBarChart\";\r\nimport {BsFillArrowUpCircleFill} from \"react-icons/bs\";\r\nimport {Autocomplete, TextField} from \"@mui/material\";\r\n\r\nconst DashboardBarChartSection = ({allComeCount}) => {\r\n\r\n  return (\r\n    <Container>\r\n      <DashboardBarChart/>\r\n    </Container>\r\n  );\r\n};\r\n\r\n\r\nconst Container = styled.div`\r\n  min-height: 360px;\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  margin-top: 15px!important;\r\n  padding: 10px!important;\r\n  background-color: #fff; \r\n  color: ${mainColor};\r\n`;\r\n\r\nexport default DashboardBarChartSection;","import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {BASE_URL, DEKAN, getHeaders} from \"../../../utills/ServiceUrls\";\r\nimport DashboardCard from \"./card/DashboardCard\";\r\nimport DashboardBarChartSection from \"./chart/barChart/DashboardBarChartSection\";\r\nimport axios from \"axios\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport {extrasmall, large, medium, small} from \"../../../responsiv\";\r\nimport {fetchEducationYear} from \"../../../redux/actions/educationYear/education_year_actions\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {Skeleton} from \"@mui/material\";\r\n\r\nconst Dashboard = () => {\r\n\r\n    const [cardData, setCardData] = useState([]);\r\n    const [allComeCount, setAllComeCount] = useState(0);\r\n\r\n    const dispatch = useDispatch()\r\n    const [open, setOpen] = useState(false);\r\n    const {headers} = getHeaders();\r\n\r\n\r\n    useEffect(() => {\r\n        fetchEducationYears();\r\n        setAllComeCount(0);\r\n        axios.get(BASE_URL + DEKAN.GET + `?endTime=${moment(new Date()).format(\"yyyy.MM.DD\")} 23:59&startTime=${moment(new Date()).format(\"yyyy.MM.DD\")} 00:00`, {headers})\r\n            .then(res => {\r\n                let arr = [];\r\n                let c1 = 0;\r\n                let c2 = 0;\r\n                res.data?.filter(i => i.level === 1)?.map(i => {\r\n                    c1 = c1 + Number(i.comeCount);\r\n                    c2 = c2 + Number(i.allCount);\r\n                })\r\n                arr.push({level: 1, comeCount: c1, allCount: c2})\r\n\r\n                let c3 = 0;\r\n                let c4 = 0;\r\n                res.data?.filter(i => i.level === 2)?.map(i => {\r\n                    c3 = c3 + Number(i.comeCount);\r\n                    c4 = c4 + Number(i.allCount);\r\n                })\r\n                arr.push({level: 2, comeCount: c3, allCount: c4})\r\n\r\n                let c5 = 0;\r\n                let c6 = 0;\r\n                res.data?.filter(i => i.level === 3)?.map(i => {\r\n                    c5 = c5 + Number(i.comeCount);\r\n                    c6 = c6 + Number(i.allCount);\r\n                })\r\n                arr.push({level: 3, comeCount: c5, allCount: c6})\r\n\r\n                let c7 = 0;\r\n                let c8 = 0;\r\n                res.data?.filter(i => i.level === 4)?.map(i => {\r\n                    c7 = c7 + Number(i.comeCount);\r\n                    c8 = c8 + Number(i.allCount);\r\n                })\r\n                arr.push({level: 4, comeCount: c7, allCount: c8})\r\n\r\n\r\n                setCardData(arr);\r\n                if (arr?.length === 4) setOpen(true)\r\n                setAllComeCount(0);\r\n                res.data.map(item => {\r\n                    if (item.comeCount !== null) {\r\n                        setAllComeCount(prev => prev + parseInt(item.comeCount))\r\n                    }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err, \"Error\");\r\n                setOpen(true)\r\n            })\r\n    }, [])\r\n\r\n    const fetchEducationYears = async () => {\r\n        await axios.get(BASE_URL + '/education/educationYearsForSelected', {headers})\r\n            .then(res => {\r\n                dispatch(fetchEducationYear(res?.data?.obj?.[0]))\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                open === true ? (\r\n                    <DashboardCards>\r\n                        {\r\n                            cardData && cardData?.map(\r\n                                item => <DashboardCard\r\n                                    key={item.level}\r\n                                    course={item.level}\r\n                                    comeCount={item.comeCount}\r\n                                    allCount={item.allCount}\r\n                                />\r\n                            )\r\n                        }\r\n                    </DashboardCards>\r\n                ) : (\r\n                    <DashboardCards>\r\n                        {Array.from({length: 4}).map(i => (\r\n                            <Box\r\n                                key={i}\r\n                                sx={{height: '150px'}}\r\n                            >\r\n                                <Skeleton sx={{transform: 'scale(1)', height: '150px'}}/>\r\n                            </Box>\r\n                        ))}\r\n                    </DashboardCards>\r\n                )\r\n            }\r\n            <DashboardBarChartSection allComeCount={allComeCount}/>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst DashboardCards = styled.div`\r\n  margin: 10px 0 10px;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  gap: 30px;\r\n  ${large({\r\n    gridTemplateColumns: ' repeat(3, 1fr)',\r\n  })}\r\n  ${medium({\r\n    gridTemplateColumns: ' repeat(2, 1fr)',\r\n  })}\r\n  ${small({\r\n    gridTemplateColumns: ' repeat(2, 1fr)',\r\n  })}\r\n  ${extrasmall({\r\n    gridTemplateColumns: ' repeat(1, 1fr)',\r\n    gap: '20px',\r\n  })}\r\n\r\n`;\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  padding: 1rem;\r\n`;\r\nexport default Dashboard;"],"names":["Path","_a","className","counterClockwise","dashRatio","pathRadius","strokeWidth","style","React.createElement","Object","assign","getDashStyle","d","getPathDescription","fillOpacity","rotation","diameter","Math","PI","gapLength","strokeDasharray","strokeDashoffset","__extends","CircularProgressbar","this","props","background","backgroundPadding","getBackgroundPadding","value","minValue","maxValue","min","max","circleRatio","classes","styles","text","getPathRadius","pathRatio","getPathRatio","root","viewBox","cx","cy","r","trail","path","x","y","React.Component","DashboardCardChartWrapper","styled","DashboardCardDataStatistics","DashboardCardDataTitle","DashboardCardData","color","DashboardCardWrapper","course","comeCount","allCount","mainColor","ceil","pathTransition","stroke","transformOrigin","filter","width","overflow","fill","fontSize","SelectBox","Nbbox","StudentInfo","AvatarBox","CardBodyItem","CardBody","TitleCard","cl","CardMain","tabsitem","Progresitem","bgcolor","Progres","Numstudent","Numberbox","Titlecard","Rigthbox","Carditem","Cardcore2","small","gridTemplateColumns","extrasmall","Cardcore","Container","useState","s1","setS1","dekanat","useSelector","state","educationYear","headers","getHeaders","allgroup","setAllgroup","valueTabs","setValueTabs","isLoading","setIsLoading","handleChangeSelectInput","event","setStep","target","pres","a","b","TabPanel","children","index","other","role","hidden","id","Box","sx","p","useEffect","axios","BASE_URL","DEKAN","moment","Date","format","then","res","data","reduce","acc","name","level","title","split","existingGroup","find","item","groups","push","catch","err","console","log","steps","step","days","date","dateFrom","startOf","toDate","dateTo","endOf","weekNumber","isoWeek","weekDay","day","objWeek","levelStatistics","setLevelStatistics","levelTimeTable","setLevelTimeTable","length","faculties","faculty","shortName","substring","eduType","obj","map","arr3","child","sortNumber","statistics","statistic","week","values","flat","groupedObjects","fullName","secondObj","timeTable","tableChild","count","arr","item1","prevState","Tabs","variant","scrollButtons","allowScrollButtonsMobile","onChange","newValue","indicatorColor","key","Tab","component","label","FormControl","minWidth","size","InputLabel","Select","labelId","MenuItem","Array","from","_","Skeleton","animation","sort","o1","o2","student","i","counter","s3","nowWeek","nowDay","Number","t","groupName","src","avatarimg","NoImg","alt","EmptyDataImg","w","h","nameA","toUpperCase","nameB","Tooltip","display","justifyContent","marginY","Button","onClick","sortedData","localeCompare","sheetData","workbook","XLSX","worksheet","fileName","indexOf","error","exportToExcel","allComeCount","DashboardCards","large","medium","gap","cardData","setCardData","setAllComeCount","dispatch","useDispatch","open","setOpen","fetchEducationYears","c1","c2","c3","c4","c5","c6","c7","c8","prev","parseInt","fetchEducationYear","height","transform"],"sourceRoot":""}