{"version":3,"file":"static/js/1906.720d5dcb.chunk.js","mappings":"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","sources":["components/admin/device/Device.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {ADMIN, BASE_URL, getHeaders, mainColor,} from \"../../../utills/ServiceUrls\";\r\nimport axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport Spinner from \"../../spinner/Spinner\";\r\nimport {DataGrid, GridToolbar} from \"@mui/x-data-grid\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {RiCloseLine} from \"react-icons/ri\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport {Select} from \"@mui/material\";\r\nimport {FaEdit} from \"react-icons/fa\";\r\nimport {MdDelete} from \"react-icons/md\";\r\nimport ButtonMui from \"@mui/material/Button\";\r\n\r\nconst Device = () => {\r\n  const [device,setDevice] = useState(\"\");\r\n  const [deviceId,setDeviceId] = useState(1);\r\n  const [devices,setDevices] = useState([]);\r\n  const [port,setPort] = useState(1);\r\n  const [ports,setPorts] = useState([]);\r\n  const [building,setBuilding] = useState(\"\");\r\n  const [buildings,setBuildings] = useState([]);\r\n  const [room,setRoom] = useState(\"\");\r\n  const [rooms,setRooms] = useState([]);\r\n\r\n  const [acRoom,setAcRoom] = useState({\r\n    deviceId,\r\n    doorName: room,\r\n    doorNo: port\r\n  })\r\n\r\n  const [spinner,setSpinner] = useState(false);\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 40, editable: false },\r\n    { field: 'ip', headerName: 'Device',type: 'string', width: 300, editable: false, },\r\n    { field: 'port', headerName: 'Port',type: 'integer', width: 180, editable: false, },\r\n    { field: 'room', headerName: 'Room',type: 'string', width: 140, editable: false, },\r\n    { field: 'state', headerName: 'State',type: 'string', width: 240, editable: false,\r\n      renderCell: (cellValues) => {\r\n        return (\r\n          <Wrapper>\r\n            <ButtonMui\r\n                size={'small'}\r\n              variant=\"contained\"\r\n              startIcon={<FaEdit size={17}/>}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                getUpdateItem(cellValues.id);\r\n              }}\r\n            >\r\n              Update\r\n            </ButtonMui>\r\n\r\n            <ButtonMui\r\n                size={'small'}\r\n              startIcon={ <MdDelete size={17} />}\r\n              variant=\"contained\"\r\n              color={'error'}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                checkDelete(cellValues.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </ButtonMui>\r\n          </Wrapper>\r\n        );\r\n      }},\r\n  ];\r\n  const [data,setData] = useState([\r\n    { id: 1, fullName: \"Tohir Asadov\", cardNo: \"123456\", dateAsc: new Date(),dateDesc: new Date(),phoneNumber:\"993361603\"},\r\n    { id: 2, fullName: \"Tohir Asadov\", cardNo: \"123456\", dateAsc: new Date(),dateDesc: new Date(),Print:\"OK See\",phoneNumber: \"993361603\"},\r\n  ])\r\n  const [open, setOpen] = React.useState(false);\r\n  const [updateItem,setUpdateItem] = useState({})\r\n  const [updatePorts,setUpdatePorts] = useState([])\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n\r\n  const {headers} = getHeaders();\r\n\r\n  useEffect(() => {\r\n    setAcRoom({...acRoom,deviceId: deviceId,doorName: room,doorNo: port})\r\n  },[deviceId,port,room])\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setDeviceId(devices[0]?.id);\r\n    devices[0] && axios.get(BASE_URL+ADMIN.ACC_DOOR_PORTS+devices[0]?.id,{headers})\r\n      .then(res => {\r\n        setPorts(res?.data?.obj);\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  },[devices])\r\n\r\n  useEffect(() => {\r\n    const check = devices.filter(i => i?.ip === device)[0]?.id;\r\n    setDeviceId(check);\r\n    check && axios.get(BASE_URL+ADMIN.ACC_DOOR_PORTS+check,{headers})\r\n      .then(res => {\r\n        setPorts(res?.data?.obj);\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  },[device])\r\n\r\n  const fetchData = () => {\r\n    axios.get(BASE_URL+ADMIN.DEVICE, { headers })\r\n      .then(res => {\r\n        setDevices(res?.data?.devices);\r\n        setBuildings(res?.data?.buildings);\r\n        setRooms(res?.data?.rooms);\r\n        setRoom(res?.data?.rooms[0]?.name);\r\n        setData(res?.data?.deviceList);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  const fetchPortsForUpdateDevice = (id) => {\r\n    axios.get(BASE_URL+ADMIN.ACC_DOOR_PORTS+id,{headers})\r\n      .then(res => {\r\n        setUpdatePorts(prevState => [...prevState,...res?.data?.obj]);\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const saveAcRoom = () => {\r\n    axios.put(BASE_URL+ADMIN.ACC_DOOR_UPDATED,acRoom,{headers})\r\n      .then(res => {\r\n        fetchData();\r\n        if (res.status === 200) {\r\n          toast.success(\"Changed successfully...\")\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const onUpdate = (obj) => {\r\n    axios.put(BASE_URL+ADMIN.ACC_DOOR_UPDATED,obj,{headers})\r\n      .then(res => {\r\n        setOpen(false);\r\n        fetchData();\r\n        if (res.status === 200) {\r\n          toast.success(\"Changed successfully...\")\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const getUpdateItem = (id) => {\r\n    handleOpen()\r\n    setUpdateItem(data.find(i => i.id===id))\r\n    setUpdatePorts([data?.find(i => i.id===id)?.port])\r\n    fetchPortsForUpdateDevice(id);\r\n  }\r\n\r\n  const checkDelete = (id) => {\r\n    axios.get(BASE_URL+\"/ac-door/findById/\"+id, { headers })\r\n      .then(res => {\r\n        if (res.status === 200){\r\n          if (window.confirm(\"Do you agree to delete \"+res.data?.obj?.doorName+\" room?\")){\r\n            onDelete(id);\r\n          }\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const onDelete = (id) => {\r\n    console.log(id,\"deleted id\")\r\n    axios.delete(BASE_URL+\"/ac-door/delete/\"+id,{ headers })\r\n      .then(res => {\r\n        if (res.status === 204){\r\n          toast.success(\"Deleted room successfully!...\")\r\n          setData(data.filter(item => item.id!==id));\r\n          fetchData();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Update Device</Title>\r\n      <Header>\r\n        <Select1\r\n          id=\"device\"\r\n          width={\"230px\"}\r\n          value={device}\r\n          onChange={(e) => setDevice(e.target.value)}\r\n        >\r\n          <optgroup label=\"Devices\">\r\n            {\r\n              devices?.map((item,key) =>(\r\n                <option key={key} value={item.ip}>\r\n                    {item.ip}\r\n                </option>\r\n              ))\r\n            }\r\n          </optgroup>\r\n        </Select1>\r\n        <Select1\r\n          id=\"ip\"\r\n          width={\"140px\"}\r\n          value={port}\r\n          onChange={(e) => setPort(e.target.value)}\r\n        >\r\n          <optgroup label=\"Ports\">\r\n            {\r\n              ports?.map((item,key )=>(\r\n                <option key={key} value={item}>\r\n                    {item}\r\n                </option>\r\n              ))\r\n            }\r\n          </optgroup>\r\n        </Select1>\r\n        <Select1\r\n          id=\"building\"\r\n          width={\"140px\"}\r\n          value={building}\r\n          onChange={(e) => setBuilding(e.target.value)}\r\n        >\r\n          <optgroup label=\"Buildings\">\r\n            {\r\n              buildings?.map((item,key) =>(\r\n                <option key={key} value={item.name}>\r\n                  {item.name}\r\n                </option>\r\n              ))\r\n            }\r\n          </optgroup>\r\n        </Select1>\r\n        <Select1\r\n          id=\"room\"\r\n          width={\"230px\"}\r\n          value={room}\r\n          onChange={(e) => setRoom(e.target.value)}\r\n        >\r\n          <optgroup label=\"Rooms\">\r\n            {\r\n              rooms?.map((item,key) =>(\r\n                <option key={key} value={item.name}>\r\n                  {item.name}\r\n                </option>\r\n              ))\r\n            }\r\n          </optgroup>\r\n        </Select1>\r\n        <Button onClick={saveAcRoom}>Save</Button>\r\n      </Header>\r\n      <Title mt={\"50px\"}>Table of Device</Title>\r\n      <Body>\r\n        {\r\n          spinner ? <Spinner /> : <DataGrid\r\n            checkboxSelection\r\n            style={{width:\"700px\",minHeight:\"300px!important\"}}\r\n            columns={columns}\r\n            rows={ data }\r\n            components={{ Toolbar: GridToolbar }}/*** print and excel ****/\r\n            autoHeight\r\n            pageSize={50}\r\n            initialState={{ // hide items\r\n              ...data.initialState,\r\n              columns: {\r\n                columnVisibilityModel: {\r\n                  id: false,\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        }\r\n\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"keep-mounted-modal-title\"\r\n          aria-describedby=\"keep-mounted-modal-description\"\r\n        >\r\n          <Box sx={style} >\r\n            <CloseButtonForChild onClick={handleClose}><RiCloseLine /></CloseButtonForChild>\r\n            <Row>\r\n              <TextField\r\n                id={\"outlined-basic\"}\r\n                label=\"IP\"\r\n                variant={\"outlined\"}\r\n                value={updateItem?.ip}\r\n                disabled={true}\r\n              />\r\n\r\n              <Box sx={{ minWidth: 200 }}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-label\">Port</InputLabel>\r\n                  <Select\r\n                    disabled={true}\r\n                    sx={{width:\"200px\",\" @media only screen and  (max-width: 576px)\":{width:300}}}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    name={\"port\"}\r\n                    value={updateItem?.port}\r\n                    label={\"Port\"}\r\n                    onChange={(e) => setUpdateItem(preForm=>({...preForm,port:e?.target?.value}))}\r\n                  >\r\n                    {\r\n                      updatePorts?.map(item => (<MenuItem key={item} value={item}>{item}</MenuItem>))\r\n                    }\r\n                  </Select>\r\n                </FormControl>\r\n              </Box>\r\n\r\n              <Box sx={{ minWidth: 200 }}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-label\">Room</InputLabel>\r\n                  <Select\r\n                    sx={{width:\"200px\",\" @media only screen and  (max-width: 576px)\":{width:300}}}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    name={\"room\"}\r\n                    value={updateItem?.room}\r\n                    label={\"Room\"}\r\n                    onChange={(e) => setUpdateItem(preForm=>({...preForm,room:e?.target?.value}))}\r\n                  >\r\n                    {\r\n                      [ {name: updateItem?.room},...rooms]?.map(item => (<MenuItem key={item?.name} value={item?.name}>{item?.name}</MenuItem>))\r\n                    }\r\n                  </Select>\r\n\r\n                </FormControl>\r\n              </Box>\r\n            </Row>\r\n            <Row>\r\n\r\n              <UpdateButton onClick={() => onUpdate({deviceId: updateItem?.deviceId,doorName: updateItem?.room,doorNo: updateItem?.port})}>Update</UpdateButton>\r\n            </Row>\r\n          </Box>\r\n        </Modal>\r\n\r\n      </Body>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst UpdateButton = styled.button`  \r\n  width: 120px;\r\n  height:50px;\r\n  background: ${mainColor}; \r\n  font-size: 18px; \r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  border: 1px solid ${mainColor};\r\n  color: #fff;\r\n  transition: all 0.2s ease;\r\n  margin-left: 15px!important;\r\n  letter-spacing: 1.2px;\r\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\r\n  &:focus{\r\n    transform: scale(0.95);\r\n  }\r\n`\r\n\r\nconst Row = styled.div`\r\n  padding: 20px;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 25px;\r\n`\r\n\r\nconst CloseButtonForChild = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center; \r\n  background-color: rgba(255,255,255,0.6);\r\n  border-radius: 50%;\r\n  color: ${mainColor};\r\n  font-size: 26px;\r\n  border: none;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n`;\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: '50%',\r\n  bgcolor: 'background.paper',\r\n  borderRadius:2,\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  gap: 10px;\r\n  margin: 5px!important;\r\n`;\r\n\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\n\r\nconst Title = styled.h3`\r\n  display: flex;\r\n  width: 100%;\r\n  float: left;\r\n  margin-left: 15px;\r\n  margin-top: ${props => props.mt};\r\n  color: ${mainColor};\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-top: 20px;\r\n  width: 100px;\r\n  height:35px;\r\n  background: ${mainColor};\r\n  padding-left: 5px;\r\n  font-size: 18px;\r\n  padding-right: 10px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  border: 1px solid ${mainColor};\r\n  color: #fff;\r\n  transition: all 0.2s ease;\r\n  margin-left: 15px!important;\r\n  letter-spacing: 1.2px;\r\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\r\n  &:focus{\r\n    transform: scale(0.95);\r\n  }\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding:  8px!important;\r\n  color: ${mainColor};\r\n`;\r\n\r\nconst Select1 = styled.select`\r\n  width: ${props => props.width} ;\r\n  margin-top: 20px;\r\n  height:35px;\r\n  background: white;\r\n  padding-left: 5px;\r\n  font-size: 18px;\r\n  padding-right: 10px;\r\n  border-radius: 7px;\r\n  cursor: pointer;\r\n  border: 1px solid ${mainColor};\r\n  color: ${mainColor};\r\n  margin-left: 15px;\r\n  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n\r\n  option {\r\n    color: black;\r\n    background: white;\r\n    font-weight: 300;\r\n    display: flex;\r\n    white-space: pre;\r\n    min-height: 20px;\r\n    padding: 0px 2px 1px;\r\n  }\r\n  \r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding:  10px!important; \r\n`;\r\n\r\nexport default Device;"],"names":["UpdateButton","styled","mainColor","Row","CloseButtonForChild","style","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","p","Wrapper","Body","Title","props","mt","Button","Header","Select1","Container","useState","device","setDevice","deviceId","setDeviceId","devices","setDevices","port","setPort","ports","setPorts","building","setBuilding","buildings","setBuildings","room","setRoom","rooms","setRooms","doorName","doorNo","acRoom","setAcRoom","spinner","columns","field","headerName","editable","type","renderCell","cellValues","size","variant","startIcon","onClick","e","preventDefault","getUpdateItem","id","color","checkDelete","fullName","cardNo","dateAsc","Date","dateDesc","phoneNumber","Print","data","setData","React","open","setOpen","updateItem","setUpdateItem","updatePorts","setUpdatePorts","handleClose","headers","getHeaders","useEffect","fetchData","axios","BASE_URL","ADMIN","then","res","obj","catch","err","console","log","check","filter","i","ip","name","deviceList","find","prevState","fetchPortsForUpdateDevice","status","window","confirm","onDelete","toast","item","value","onChange","target","label","map","key","checkboxSelection","minHeight","rows","components","Toolbar","GridToolbar","autoHeight","pageSize","initialState","columnVisibilityModel","onClose","sx","disabled","minWidth","fullWidth","labelId","preForm"],"sourceRoot":""}