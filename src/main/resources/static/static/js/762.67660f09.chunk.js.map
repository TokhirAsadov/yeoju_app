{"version":3,"file":"static/js/762.67660f09.chunk.js","mappings":"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","sources":["components/rektor/StudentsStatisticsForRektor.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL, getHeaders, mainColor} from \"../../utills/ServiceUrls\";\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport {extrasmall, small} from \"../../responsiv\";\r\nimport PropTypes from \"prop-types\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport NoImg from \"../../utills/images/no-picture.jpg\";\r\nimport moment from \"moment/moment\";\r\nimport {fetchEducationYear} from \"../../redux/actions/educationYear/education_year_actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport EmptyDataImg from \"../emptyDataImg/EmptyDataImg\";\r\n\r\nconst StudentsStatisticsForRektor = () => {\r\n    const [allData, setAllData] = useState([])\r\n    const [dean, setDean] = useState(\"\");\r\n    const [deanData, setdeanData] = useState({})\r\n    const [allDeans, setAllDeans] = useState([])\r\n    const [allGroups, setAllGroups] = useState([])\r\n    const [valueTabs, setValueTabs] = useState(0);\r\n    const [levelStatistics, setLevelStatistics] = useState([]);\r\n    const [levelTimeTable, setLevelTimeTable] = useState([]);\r\n    const [s1, setS1] = useState([])\r\n    const educationYear = useSelector(state => state?.educationYear?.educationYear)\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isError, setError] = useState(false);\r\n    const {headers} = getHeaders();\r\n    const dispatch = useDispatch()\r\n\r\n    const emptyState = [1, 2, 3, 4]\r\n    let days = [1, 2, 3, 4, 5]\r\n    const [objWeek, setObjWeek] = useState({\r\n        date: new Date(),\r\n        dateFrom: moment().startOf('isoWeek').toDate(),\r\n        dateTo: moment().endOf('isoWeek').toDate(),\r\n        weekNumber: moment().isoWeek(),\r\n        weekDay: moment().day()\r\n    });\r\n    const fetchEducationYears = async () => {\r\n        await axios.get(BASE_URL + '/education/educationYearsForSelected', {headers})\r\n            .then(res => {\r\n                dispatch(fetchEducationYear(res?.data?.obj?.[0]))\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    const handleChange = (event) => {\r\n        setDean(event.target.value);\r\n    };\r\n    const handleChangeTab = (event, newValue) => {\r\n        setValueTabs(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get(BASE_URL + \"/dekanat/all\", headers)\r\n            .then(res => {\r\n                setAllData(res.data.obj);\r\n                setAllDeans(res.data.obj?.map(item => item.name))\r\n                setDean(res.data.obj[0].name)\r\n            })\r\n            .catch(e => console.log(e))\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchEducationYears()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setS1([])\r\n        setIsLoading(true)\r\n        allGroups?.length > 0 && educationYear && axios.get(`${BASE_URL}/timeTableByWeekOfYear/studentStatisticsWithWeekOfEduYear/${educationYear?.id}?facultyId=${allGroups[valueTabs].id}&facultyShortName=${allGroups[valueTabs].shortName}&eduType=${deanData?.eduType?.name}&eduTypeId=${deanData?.eduType?.id}`)\r\n            .then(res => {\r\n                setLevelStatistics(\r\n                    res?.data?.obj?.map(item => {\r\n                        let arr3 = [];\r\n                        item?.map(child => {\r\n\r\n                            days.map(day => {\r\n                                child?.sortNumber === objWeek?.weekNumber ?\r\n                                    day <= objWeek?.weekDay && arr3.push(child?.[day]?.statistics?.map(statistic => ({\r\n                                        ...statistic,\r\n                                        day,\r\n                                        week: child?.sortNumber\r\n                                    })))\r\n                                    :\r\n                                    arr3.push(child?.[day]?.statistics?.map(statistic => ({\r\n                                        ...statistic,\r\n                                        day,\r\n                                        week: child?.sortNumber\r\n                                    })))\r\n                            })\r\n\r\n\r\n                        })\r\n\r\n                        return Object.values(groupObjectsByFullName(arr3?.flat()));\r\n                    })\r\n                )\r\n\r\n                setLevelTimeTable(\r\n                    res?.data?.secondObj?.map(timeTable => (\r\n                            timeTable?.map(tableChild => ({\r\n                                ...tableChild,\r\n                                count: Object.values(groupObjectsByCount(tableChild?.count))\r\n                            }))\r\n                        )\r\n                    )\r\n                )\r\n\r\n                res?.data?.obj?.map(item1 => {\r\n                    item1.map(item => {\r\n                        item?.sortNumber === objWeek?.weekNumber ?\r\n                            days.map(day => {\r\n                                day <= objWeek?.weekDay && setS1(prevState => [...prevState, ...item?.[day]?.statistics])\r\n                            })\r\n                            :\r\n                            days.map(day => {\r\n                                setS1(prevState => [...prevState, ...item?.[day]?.statistics])\r\n                            })\r\n                    })\r\n\r\n                })\r\n                setIsLoading(false)\r\n            })\r\n            .catch(err => {\r\n                setIsLoading(false)\r\n                setError(true)\r\n                console.log(err)\r\n            })\r\n    }, [educationYear, valueTabs, allGroups])\r\n\r\n    useEffect(() => {\r\n        setAllGroups(allData.find(item => item.name === dean)?.faculties || [])\r\n\r\n        setdeanData(allData.find(item => item.name === dean))\r\n        console.log(allData.find(item => item.name === dean), 'allll deeean')\r\n    }, [dean]);\r\n\r\n    useEffect(() => {\r\n        console.log(allGroups)\r\n    }, [allGroups])\r\n\r\n    let steps = [5, 10, 20, 30, 40, 50];\r\n    const [step, setStep] = useState(steps[0]);\r\n    const handleChangeSelectInput = (event) => {\r\n        setStep(event.target.value);\r\n    };\r\n\r\n\r\n    function groupObjectsByCount(arr) {\r\n        return arr.reduce((groupedObjects, obj) => {\r\n            const name = obj;\r\n\r\n            if (groupedObjects[name]) {\r\n                groupedObjects[name].push(obj);\r\n            } else {\r\n                groupedObjects[name] = [obj];\r\n            }\r\n\r\n            return groupedObjects;\r\n        }, {});\r\n    }\r\n\r\n    function groupObjectsByFullName(arr) {\r\n\r\n        return arr.reduce((groupedObjects, obj) => {\r\n            const name = obj?.fullName;\r\n\r\n            if (groupedObjects[name]) {\r\n                groupedObjects[name].push(obj);\r\n            } else {\r\n                groupedObjects[name] = [obj];\r\n            }\r\n\r\n            return groupedObjects;\r\n        }, {});\r\n\r\n\r\n    }\r\n\r\n\r\n    /********tabs****************/\r\n    function TabPanel(props) {\r\n        const {children, value, index, ...other} = props;\r\n\r\n        return (\r\n            <div\r\n                role=\"tabpanel\"\r\n                hidden={value !== index}\r\n                id={`simple-tabpanel-${index}`}\r\n                aria-labelledby={`simple-tab-${index}`}\r\n                {...other}\r\n            >\r\n                {value === index && (\r\n                    <Box sx={{p: 0}}>\r\n                        <div>{children}</div>\r\n                    </Box>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    TabPanel.propTypes = {\r\n        children: PropTypes.node,\r\n        index: PropTypes.number.isRequired,\r\n        value: PropTypes.number.isRequired,\r\n    };\r\n\r\n    function a11yProps(index) {\r\n        return {\r\n            id: `simple-tab-${index}`,\r\n            'aria-controls': `simple-tabpanel-${index}`,\r\n        };\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <FormControl sx={{width: \"200px\", m: 2}}>\r\n                <InputLabel id=\"demo-simple-select-label\">Dean</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={dean}\r\n                    label=\"Dean\"\r\n                    onChange={handleChange}\r\n                >\r\n                    {allDeans.map((item, key) => (\r\n                        <MenuItem value={item} key={key}>{item}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <div className='dekantabs'>\r\n                <Tabs variant=\"scrollable\"\r\n                      scrollButtons\r\n                      allowScrollButtonsMobile\r\n                      value={valueTabs}\r\n                      onChange={handleChangeTab}\r\n                      indicatorColor=\"\"\r\n                      aria-label=\"basic tabs example\">\r\n\r\n                    {allGroups?.map((item, key) => (\r\n                        <Tab\r\n                            component={tabsitem}\r\n                            key={key}\r\n                            label={item?.shortName} {...a11yProps(key)}/>\r\n                    ))}\r\n                </Tabs>\r\n            </div>\r\n\r\n            {allGroups?.map((item, key) => (\r\n                <TabPanel value={valueTabs} index={key} key={key}>\r\n                    <SelectBox>\r\n                        <FormControl sx={{minWidth: 100}} size=\"small\">\r\n                            <InputLabel id=\"select-label\">Size</InputLabel>\r\n                            <Select\r\n                                labelId=\"select-label\"\r\n                                id=\"select-small-size\"\r\n                                value={step}\r\n                                label=\"Size\"\r\n                                onChange={handleChangeSelectInput}\r\n                            >\r\n                                {steps.map((item, index) => (\r\n                                    <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </SelectBox>\r\n\r\n                    <Cardcore2>\r\n                        {isLoading && Array.from({length: 4}).map((_, index) => (\r\n                            <CardMain key={index}>\r\n                                <TitleCard\r\n                                    cl={(index === 0 && `${mainColor}`) || (index === 1 && `#FD8539`) || (index === 2 && `#2ED480`) || (index === 3 && `#FE6D8E`)}>{index + 1}-Course\r\n                                </TitleCard>\r\n                                <CardBody>\r\n                                    <Box sx={{width: \"100%\"}}>\r\n                                        <Skeleton/>\r\n                                        <Skeleton animation=\"wave\"/>\r\n                                        <Skeleton animation={false}/>\r\n                                    </Box>\r\n                                </CardBody>\r\n                            </CardMain>\r\n                        ))}\r\n                        {!isLoading && levelStatistics ? levelStatistics?.map((item, index) => (\r\n                            <CardMain key={index}>\r\n                                <TitleCard\r\n                                    cl={(index === 0 && `${mainColor}`) || (index === 1 && `#FD8539`) || (index === 2 && `#2ED480`) || (index === 3 && `#FE6D8E`)}>{index + 1}-Course\r\n                                </TitleCard>\r\n                                <CardBody>\r\n                                    {\r\n                                        item.length > 0 ? item?.sort(function (o1, o2) {\r\n                                            if (o1?.length < o2?.length) return 1;\r\n                                            else if (o1?.length > o2?.length) return -1;\r\n                                            else return 0;\r\n                                        })?.map((student, i) => {\r\n                                            let counter = 0;\r\n                                            student?.map(s3 => {\r\n                                                const nowWeek = moment().isoWeek()\r\n                                                const nowDay = moment().format('DD')\r\n\r\n                                                if (nowWeek > s3.week && Number(nowDay) > s3.day) {\r\n\r\n                                                    if (levelTimeTable?.[index]?.find(t => t?.week === s3?.week && t.groupName === s3?.groupName)?.count?.[s3?.day - 1]?.length) {\r\n\r\n                                                        counter += levelTimeTable?.[index]?.find(t => t?.week === s3?.week && t?.groupName === s3?.groupName)?.count?.[s3?.day - 1]?.length\r\n                                                    }\r\n                                                }\r\n                                            })\r\n\r\n                                            return {...student, counter}\r\n                                        })?.sort(function (o1, o2) {\r\n                                            if (o1?.counter < o2?.counter) return 1;\r\n                                            else if (o1?.counter > o2?.counter) return -1;\r\n                                            else return 0;\r\n                                        })?.map((student, i) => {\r\n                                                return i < step && <CardBodyItem key={i}>\r\n                                                    <AvatarBox>\r\n                                                        <img style={{width: \"100%\"}}\r\n                                                             src={student?.avatarimg ? student?.avatarimg : NoImg}\r\n                                                             alt=\"avatar\"/>\r\n                                                    </AvatarBox>\r\n                                                    <StudentInfo>\r\n                                                        <h6>\r\n                                                            {student?.[0]?.fullName}\r\n                                                        </h6>\r\n                                                        <p>\r\n                                                            {student?.[0]?.groupName}\r\n                                                        </p>\r\n                                                    </StudentInfo>\r\n                                                    <NbBox>\r\n                                                        {\r\n                                                            student?.counter\r\n                                                        }\r\n                                                    </NbBox>\r\n                                                </CardBodyItem>\r\n\r\n                                            }\r\n                                        ) : <Box>\r\n                                            <EmptyDataImg w={150} h={130}/>\r\n                                        </Box>}\r\n\r\n                                </CardBody>\r\n                            </CardMain>\r\n                        )) : (\r\n                            !isLoading && emptyState.map((item, i) => (\r\n                                <CardMain>\r\n                                    <TitleCard\r\n                                        cl={(i === 0 && `${mainColor}`) || (i === 1 && `#FD8539`) || (i === 2 && `#2ED480`) || (i === 3 && `#FE6D8E`)}>{i + 1}-Course</TitleCard>\r\n                                    <CardBody>\r\n                                        <h5>No data Students</h5>\r\n                                    </CardBody>\r\n                                </CardMain>\r\n                            ))\r\n                        )}\r\n\r\n                    </Cardcore2>\r\n\r\n                </TabPanel>\r\n            ))\r\n            }\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst NbBox = styled.div`\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 30px;\r\n    height: 30px;\r\n    background-color: red;\r\n    color: white;\r\n    border-radius: 50%;\r\n`\r\n\r\nconst StudentInfo = styled.div`\r\n    h6 {\r\n        font-size: 11px;\r\n        font-weight: bold;\r\n        color: #000000;\r\n    }\r\n\r\n    p {\r\n        font-size: 10px;\r\n        font-weight: normal;\r\n        color: silver;\r\n    }\r\n\r\n`\r\n\r\nconst AvatarBox = styled.div`\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    margin: 0 auto;\r\n\r\n`\r\n\r\nconst CardBodyItem = styled.div`\r\n    margin-top: 15px;\r\n    display: grid;\r\n    grid-template-columns: 0.2fr 1fr 0.2fr;\r\n    align-items: center;\r\n    gap: 5px;\r\n\r\n`\r\n\r\nconst CardBody = styled.div`\r\n    margin-top: 20px;\r\n\r\n    h5 {\r\n        text-align: center;\r\n        margin: 30px 0;\r\n        color: ${mainColor};\r\n    }\r\n`;\r\n\r\n\r\nconst TitleCard = styled.p`\r\n    font-size: 15px;\r\n    font-weight: bold;\r\n    color: ${props => props.cl};\r\n`\r\n\r\n\r\nconst CardMain = styled.div`\r\n    border-radius: 8px;\r\n    background-color: #fff;\r\n    padding: 10px;\r\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\r\n`\r\n\r\n\r\nconst SelectBox = styled.div`\r\n    display: flex;\r\n    justify-content: end;\r\n    margin: 20px 0;\r\n`\r\n\r\nconst Cardcore2 = styled.div`\r\n    width: 100%;\r\n    min-width: 300px;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    gap: 40px;\r\n    margin-bottom: 40px;\r\n    ${small({\r\n        gridTemplateColumns: \"auto auto\",\r\n    })}\r\n    ${extrasmall({\r\n        gridTemplateColumns: \"auto\",\r\n    })}\r\n`\r\n\r\nconst tabsitem = styled.div`\r\n    font-size: 13px;\r\n    width: 200px !important;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    border-radius: 8px !important;;\r\n    color: ${mainColor};\r\n    padding: 5px 20px !important;\r\n    height: 42px !important;\r\n    margin: 5px !important;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0 4px 12px;\r\n\r\n    &:hover {\r\n        color: #ffffff !important;\r\n        background-color: #5093f1 !important;\r\n    }\r\n\r\n    &.Mui-selected {\r\n        color: #ffffff !important;\r\n        background-color: #5093f1 !important;\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    padding: 10px;\r\n\r\n`\r\nexport default StudentsStatisticsForRektor;\r\n"],"names":["NbBox","styled","StudentInfo","AvatarBox","CardBodyItem","CardBody","mainColor","TitleCard","props","cl","CardMain","SelectBox","Cardcore2","small","gridTemplateColumns","extrasmall","tabsitem","Container","useState","allData","setAllData","dean","setDean","deanData","setdeanData","allDeans","setAllDeans","allGroups","setAllGroups","valueTabs","setValueTabs","levelStatistics","setLevelStatistics","levelTimeTable","setLevelTimeTable","setS1","educationYear","useSelector","state","isLoading","setIsLoading","setError","headers","getHeaders","dispatch","useDispatch","emptyState","days","date","Date","dateFrom","moment","startOf","toDate","dateTo","endOf","weekNumber","isoWeek","weekDay","day","objWeek","fetchEducationYears","axios","BASE_URL","then","res","fetchEducationYear","data","obj","catch","err","console","log","useEffect","map","item","name","e","length","id","shortName","eduType","arr3","child","sortNumber","push","statistics","statistic","week","Object","values","flat","reduce","groupedObjects","fullName","secondObj","timeTable","tableChild","count","arr","item1","prevState","find","faculties","steps","step","setStep","handleChangeSelectInput","event","target","value","TabPanel","children","index","other","role","hidden","sx","p","width","m","labelId","label","onChange","key","className","variant","scrollButtons","allowScrollButtonsMobile","newValue","indicatorColor","component","minWidth","size","Array","from","_","animation","sort","o1","o2","student","i","counter","s3","nowWeek","nowDay","format","Number","t","groupName","style","src","avatarimg","NoImg","alt","w","h"],"sourceRoot":""}