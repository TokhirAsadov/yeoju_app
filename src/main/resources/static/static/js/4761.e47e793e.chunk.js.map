{"version":3,"file":"static/js/4761.e47e793e.chunk.js","mappings":"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","sources":["components/dekan/studentservice/QueueForDean.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Card, CardContent, TextField} from \"@mui/material\";\r\nimport moment from \"moment/moment\";\r\nimport {DataGrid, GridToolbar} from \"@mui/x-data-grid\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL, getHeaders} from \"../../../utills/ServiceUrls\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport {toast} from \"react-toastify\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst QueueForDean = () => {\r\n    const isDeanExternal = useSelector(state => state.dekanat.dekanat?.name) === \"Sirtqi ta'lim\"\r\n    const queueStatusEnum = [\"RUNNABLE\", \"CALLED\", \" RUNNING\", \"WAITING\", \"CANCELLED\", \"COMPLETED\"]\r\n    const columns = [\r\n        {\r\n            field: 'number',\r\n            headerName: 'â„–',\r\n            sortable: true,\r\n            width: 50,\r\n            align: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        {\r\n            minWidth: 100,\r\n            flex: 1,\r\n            field: 'fullName',\r\n            headerName: 'Full name',\r\n            sortable: true,\r\n            align: 'center',\r\n            justifyContent: 'center',\r\n            renderCell: (cellValue) => (\r\n                <p>{cellValue.row?.studentData?.fullName}</p>\r\n            )\r\n        },\r\n        {\r\n            minWidth: 100,\r\n            flex: 0.5,\r\n            field: 'date',\r\n            headerName: 'Date of creation',\r\n            sortable: true,\r\n            align: 'center',\r\n            justifyContent: 'center',\r\n            renderCell: (cellValue) => (\r\n                <p>{moment(cellValue.row?.createdAt).format('DD.MM.YYYY HH:mm')}</p>\r\n            )\r\n        },\r\n        {\r\n            minWidth: 100,\r\n            flex: 0.5,\r\n            field: 'status',\r\n            headerName: 'Status',\r\n            sortable: true,\r\n            align: 'center',\r\n            justifyContent: 'center'\r\n        },\r\n        {\r\n            minWidth: 150,\r\n            flex: 0.5,\r\n            field: 'action',\r\n            headerName: 'Action',\r\n            sortable: false,\r\n            align: 'center',\r\n            justifyContent: 'center',\r\n            renderCell: (cellValue) => (\r\n                <TextField\r\n                    select\r\n                    size=\"small\"\r\n                    defaultValue={cellValue.row?.status}\r\n                    onChange={e => upDateStatusData(e.target.value, cellValue.row.id)}\r\n                    sx={{\r\n                        width: 200,\r\n                    }}\r\n                >\r\n                    {queueStatusEnum.map((option) => (\r\n                        <MenuItem key={option} value={option}>\r\n                            {option}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            )\r\n        },\r\n    ]\r\n    const [data, setData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const {headers} = getHeaders()\r\n\r\n\r\n    function upDateStatusData(val, id) {\r\n        const body = {\r\n            id,\r\n            statusEnum: val\r\n        }\r\n        axios.put(BASE_URL + '/queue/changeQueue', body, {headers})\r\n            .then(response => {\r\n                console.log(response)\r\n                getQueueAllForDean()\r\n                toast.success(val)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n                toast.error('Error status')\r\n            })\r\n    }\r\n\r\n    const getQueueAllForDean = () => {\r\n        setIsLoading(true)\r\n        axios.get(BASE_URL + `/queue/findAllQueuesOfTodayForDean`, {headers})\r\n            .then(res => {\r\n                console.log(res.data.obj)\r\n                setData(res.data.obj.sort((a, b) => {\r\n                    if (a.number > b.number) return 1;\r\n                    else if (a.number < b.number) return -1;\r\n                    return 0;\r\n                }))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        getQueueAllForDean()\r\n    }, []);\r\n    return (\r\n        <Container>\r\n            {isDeanExternal ? (\r\n                <Card sx={{mt: 3}}>\r\n                    <CardContent>\r\n                        <DataGrid\r\n                            columns={columns}\r\n                            rows={data || []}\r\n                            loading={isLoading}\r\n                            components={{Toolbar: GridToolbar}}\r\n                            rowsPerPageOptions={[10, 30, 50, 70, 100]}\r\n                            autoHeight\r\n                            initialState={{ // hide items\r\n                                columns: {\r\n                                    columnVisibilityModel: {\r\n                                        action: false,\r\n                                    },\r\n                                },\r\n                            }}\r\n                        />\r\n                    </CardContent>\r\n                </Card>\r\n            ) : (\r\n                <Card sx={{mt: 3}}>\r\n                    <CardContent>\r\n                        <Typography textAlign={'center'} fontWeight={'bold'} color={'error'} fontSize={25}>For external\r\n                            education only !</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n\r\n    .MuiDataGrid-columnHeaderTitleContainer {\r\n        justify-content: center;\r\n    }\r\n`\r\nexport default QueueForDean;"],"names":["Container","styled","isDeanExternal","useSelector","state","dekanat","name","queueStatusEnum","columns","field","headerName","sortable","width","align","justifyContent","minWidth","flex","renderCell","cellValue","row","studentData","fullName","moment","createdAt","format","select","size","defaultValue","status","onChange","e","val","id","body","statusEnum","axios","BASE_URL","headers","then","response","console","log","getQueueAllForDean","toast","catch","error","upDateStatusData","target","value","sx","map","option","useState","data","setData","isLoading","setIsLoading","getHeaders","res","obj","sort","a","b","number","err","finally","useEffect","mt","rows","loading","components","Toolbar","GridToolbar","rowsPerPageOptions","autoHeight","initialState","columnVisibilityModel","action","textAlign","fontWeight","color","fontSize"],"sourceRoot":""}