{"version":3,"file":"static/js/7758.adde630b.chunk.js","mappings":"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","sources":["components/dekan/kafedra/DekanKafedra.jsx","components/form/FormForItem.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {BASE_URL, DEKAN, getHeaders, mainColor} from \"../../../utills/ServiceUrls\";\r\nimport styled from \"styled-components\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {RiCloseLine} from \"react-icons/ri\";\r\nimport FormForItem from \"../../form/FormForItem\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport Spinner from \"../../spinner/Spinner\";\r\nimport {DataGrid, GridToolbar} from \"@mui/x-data-grid\";\r\nimport {FaEdit, FaPlus, FaTrash} from \"react-icons/fa\";\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\n\r\nconst DekanKafedra = () => {\r\n\r\n  const [spinner,setSpinner] = useState(true);\r\n  const [updateItem,setUpdateItem] = useState({})\r\n\r\n  const [data,setData] = useState([\r\n    { id: 1, name: \"Tohir Asadov\", state: \"123456\",},\r\n    { id: 2, name: \"Tohir Asadov\", state: \"123456\",},\r\n  ]);\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 40, editable: false },\r\n    { field: 'nameEn', headerName: 'Kafedra',type: 'string', width: 300, editable: false, },\r\n    { field: 'nameRu', headerName: 'Russian Name',type: 'string', width: 300, editable: false, },\r\n    { field: 'nameUz', headerName: 'Uzbek Name',type: 'string', width: 300, editable: false, },\r\n    { field: 'state', headerName: 'State',type: 'string', width: 240, editable: false,\r\n      renderCell: (cellValues) => {\r\n        return (\r\n          <Wrapper>\r\n            <Button\r\n              bg={\"blue\"}\r\n              variant=\"contained\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                getUpdateItem(cellValues.id);\r\n              }}\r\n            >\r\n              <FaEdit />\r\n              Update\r\n            </Button>\r\n\r\n            <Button\r\n              bg={\"red\"}\r\n              variant=\"contained\"\r\n              color=\"danger\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                checkDelete(cellValues.id);\r\n              }}\r\n            >\r\n              <FaTrash />\r\n              Delete\r\n            </Button>\r\n          </Wrapper>\r\n        );\r\n      }},\r\n  ];\r\n\r\n  const { headers } = getHeaders();\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  const addModalOpen = () => {\r\n    setUpdateItem({...updateItem,id:null,nameEn:null,nameRu:null,nameUz:null})\r\n    handleOpen();\r\n  }\r\n\r\n  const checkDelete = (id) => {\r\n    axios.get(BASE_URL+DEKAN.GET_KAFEDRA_BY_ID+id, { headers })\r\n      .then(res => {\r\n        if (res.status===200){\r\n          if (window.confirm(\"Do you agree to delete \"+res.data?.obj?.nameEn+\" kafedra?\")){\r\n            onDelete(id);\r\n          }\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const onDelete = (id) => {\r\n    axios.delete(BASE_URL+DEKAN.DELETE_KAFEDRA+id,{ headers })\r\n      .then(res => {\r\n        if (res.status === 204){\r\n          toast.success(\"Deleted kafedra successfully!...\")\r\n          setData(data.filter(item => item.id!==id));\r\n          getAllBuildings();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  const getUpdateItem = (id) => {\r\n    axios.get(BASE_URL+DEKAN.GET_KAFEDRA_BY_ID+id, { headers })\r\n      .then(res => {\r\n        setUpdateItem(res.data.obj);\r\n        if (res.data?.obj!==null){\r\n          handleOpen();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const onUpdate = (building) => {\r\n    axios.put(BASE_URL+DEKAN.UPDATE_KAFEDRA, building,{ headers })\r\n      .then(res => {\r\n        if (res.status===202) toast.success(\"Kafedra updated successfully!...\")\r\n        getAllBuildings();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  const saveKafedra = (form) => {\r\n    if (form?.id===\"\"){\r\n      form.id = null\r\n    }\r\n\r\n    axios.post(BASE_URL+DEKAN.CREATE_KAFEDRA, form,{ headers })\r\n      .then(response => {\r\n        toast.success(\"Kafedra success saved\");\r\n        // console.log(response)\r\n        getAllBuildings();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        toast.error(err.message);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllBuildings()\r\n  },[])\r\n\r\n  const getAllBuildings = () => {\r\n    axios.get( BASE_URL+DEKAN.ALL_KAFEDRA,{headers})\r\n      .then(res => {\r\n        let item = res.data.obj.sort((a,b) => a.name > b.name ? 1 : -1);\r\n        setSpinner(false);\r\n        setData(item);\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Table of Kafedra <Button onClick={addModalOpen} padding={\"8px 10px\"} float={\"right\"} width={\"150px\"} bg={\"lime\"}><FaPlus/> Add Kafedra</Button></Title>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"keep-mounted-modal-title\"\r\n        aria-describedby=\"keep-mounted-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <CloseButtonForChild onClick={handleClose}><RiCloseLine /></CloseButtonForChild>\r\n          <FormForItem\r\n            title={updateItem?.id!==null ? \"UPDATE KAFEDRA\" : \"ADD KAFEDRA\"}\r\n            formArr={[\r\n              {\r\n                label: \"id\",\r\n                name: \"id\",\r\n                placeholder:\"Enter id of build\",\r\n                type: \"text\",\r\n              },\r\n              {\r\n                label: \"add build\",\r\n                name: \"nameEn\",\r\n                placeholder:\"English name\",\r\n                type: \"text\",\r\n              },\r\n              {\r\n                label: \"add build\",\r\n                name: \"nameRu\",\r\n                placeholder:\"Russian name\",\r\n                type: \"text\",\r\n              },\r\n              {\r\n                label: \"add build\",\r\n                name: \"nameUz\",\r\n                placeholder:\"Uzbek name\",\r\n                type: \"text\",\r\n              }\r\n            ]}\r\n            submitBtn={updateItem?.id!==null ? \"Update\":\"Save\"}\r\n            onSubmit={ (form)=> updateItem?.id!==null ? onUpdate(form) : saveKafedra(form)}\r\n            updateItem={updateItem}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n      <Body>\r\n        {\r\n          spinner ? <Spinner /> : <DataGrid\r\n            checkboxSelection\r\n            style={{width:\"500px!important\",minHeight:\"300px!important\"}}\r\n            columns={columns}\r\n            rows={ data }\r\n            components={{ Toolbar: GridToolbar }}/*** print and excel ****/\r\n            autoHeight\r\n            pageSize={5}\r\n            initialState={{ // hide items\r\n              ...data.initialState,\r\n              columns: {\r\n                columnVisibilityModel: {\r\n                  id: false,\r\n                  nameRu: false,\r\n                  nameUz:false\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        }\r\n      </Body>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst CloseButtonForChild = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center; \r\n  background-color: rgba(255,255,255,0.6);\r\n  border-radius: 50%;\r\n  color: ${mainColor};\r\n  font-size: 26px;\r\n  border: none;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  gap: 10px;\r\n  margin: 5px!important;\r\n`;\r\n\r\n\r\n\r\nconst Button = styled.button`\r\n  float: ${props => props.float};\r\n  width: ${props => props.width ? props.width : \"100%\"};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  color: #ffffff;\r\n  gap: 10px;\r\n  background-color: ${props => props.bg};\r\n  padding: ${props => props.padding ? props.padding : \"5px 10px\" };\r\n  font-size: 16px; \r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease; \r\n  letter-spacing: 1.2px;\r\n  \r\n  &:focus{\r\n    transform: scale(0.95);\r\n  }\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  color: ${mainColor};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  min-height: 500px;\r\n  border-radius: 10px;\r\n  margin-top: 10px!important;\r\n  margin-left: 50px!important;\r\n  padding: 5px 10px!important; \r\n`;\r\n\r\n\r\nexport default DekanKafedra;","import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {mainColor} from \"../../utills/ServiceUrls\";\r\nimport {FaEdit, FaSave} from \"react-icons/fa\";\r\n\r\n\r\nconst prepareForm = (formArr) => {\r\n    return formArr.reduce((r,v) => ({...r,[v.name]: \"\"}),{});\r\n}\r\n\r\nconst FormForItem = ({ title,formArr, submitBtn, onSubmit,updateItem, redirect }) => {\r\n    const initialForm = prepareForm(formArr);\r\n    const [form,setForm] = useState(prepareForm(formArr));\r\n\r\n    const onChangeHandler = (e) => setForm(p => ({...p,[e.target.name]: e.target.value}));\r\n\r\n    const onSubmitHandler = () => onSubmit(form, ()=> {\r\n            setForm(initialForm);\r\n        }\r\n    );\r\n\r\n    useEffect(()=>{\r\n      if (updateItem?.name) setForm({...form,id:updateItem?.id,name:updateItem?.name})\r\n      else  setForm({...form,id:updateItem?.id,nameEn:updateItem?.nameEn,nameRu:updateItem?.nameRu,nameUz:updateItem?.nameUz})\r\n    },[])\r\n\r\n    const hasRedirect = !!redirect;\r\n\r\n    return (\r\n        <SForm >\r\n            <Title>{title}</Title>\r\n                <InputWrapper >\r\n            {formArr?.map(({label,name,placeholder,type,value},index) => (\r\n                    <Input\r\n                      key={index}\r\n                        display={ name === \"id\" }\r\n                        id={name}\r\n                        name={name}\r\n                        type={type}\r\n                        value={form[name]}\r\n                        onChange={(e) => onChangeHandler(e)}\r\n                        placeholder={placeholder}\r\n                    />\r\n            ))}\r\n                </InputWrapper>\r\n            <Button\r\n                onClick={(e) => {\r\n                    e.preventDefault();\r\n                    onSubmitHandler();\r\n                }}\r\n            >{title.startsWith(\"UPDATE\") ? <FaEdit/> : <FaSave/>}\r\n                {submitBtn}\r\n            </Button>\r\n            { hasRedirect && (\r\n                <Redirect>\r\n                    <RedirectLabel>{redirect.label}&nbsp;</RedirectLabel>\r\n                    <RedirectLink to={redirect.link.to}>{redirect.link.label}</RedirectLink>\r\n                </Redirect>\r\n            )}\r\n        </SForm>\r\n    );\r\n};\r\n\r\nconst SForm = styled.form`\r\n  width: 100%;\r\n  color: ${mainColor};\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 1px solid ${mainColor};\r\n  margin: 0 auto;\r\n  height: 40px;\r\n  width: 200px;\r\n  padding-left: 10px!important;\r\n  border-radius: 5px;\r\n  display: ${props => props.display ? \"none\" : \"\"};\r\n  \r\n  &::placeholder{\r\n    font-size: 14px;\r\n    letter-spacing: 1.1px;\r\n    color: ${mainColor};\r\n  }\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n  width: 200px;\r\n  margin: 0 auto;\r\n  height: 30px;\r\n  margin-top: 30px!important;\r\n  background-color: ${mainColor};\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  font-size: 16px;\r\n  letter-spacing: 0.7px;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: all ease 0.4s;\r\n  border: none;\r\n  border-radius: 5px;\r\n  \r\n  &:focus{\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n\r\nconst Redirect = styled.div`\r\n  font-size: 12px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 10px!important;\r\n`;\r\n\r\nconst RedirectLabel = styled.span`\r\n\r\n`;\r\nconst Title = styled.h3`\r\n  font-size: 18px;\r\n  color: ${mainColor};\r\n  margin-bottom: 20px!important;\r\n`;\r\n\r\nconst RedirectLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: blue;\r\n`;\r\n\r\n\r\n\r\nexport default FormForItem;"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","p","Body","styled","CloseButtonForChild","mainColor","Wrapper","Button","props","float","bg","padding","Title","Container","useState","spinner","setSpinner","updateItem","setUpdateItem","id","name","state","data","setData","columns","field","headerName","editable","type","renderCell","cellValues","variant","onClick","e","preventDefault","getUpdateItem","color","checkDelete","headers","getHeaders","open","setOpen","handleOpen","handleClose","axios","BASE_URL","DEKAN","then","res","status","window","confirm","obj","nameEn","onDelete","catch","err","console","log","toast","filter","item","getAllBuildings","useEffect","sort","a","b","nameRu","nameUz","onClose","sx","title","formArr","label","placeholder","submitBtn","onSubmit","form","building","response","message","saveKafedra","checkboxSelection","minHeight","rows","components","Toolbar","GridToolbar","autoHeight","pageSize","initialState","columnVisibilityModel","prepareForm","reduce","r","v","SForm","InputWrapper","Input","display","Redirect","RedirectLabel","RedirectLink","Link","redirect","initialForm","setForm","hasRedirect","map","index","value","onChange","target","onChangeHandler","startsWith","to","link"],"sourceRoot":""}