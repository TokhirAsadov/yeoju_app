{"version":3,"file":"static/js/3766.b4f9530c.chunk.js","mappings":"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","sources":["../node_modules/@mui/base/useAutocomplete/useAutocomplete.js","../node_modules/@mui/material/ListSubheader/listSubheaderClasses.js","../node_modules/@mui/material/ListSubheader/ListSubheader.js","../node_modules/@mui/material/internal/svg-icons/Close.js","../node_modules/@mui/material/Autocomplete/autocompleteClasses.js","../node_modules/@mui/material/Autocomplete/Autocomplete.js","../node_modules/@mui/material/internal/svg-icons/Cancel.js","../node_modules/@mui/material/Chip/chipClasses.js","../node_modules/@mui/material/Chip/Chip.js"],"sourcesContent":["'use client';\n\n/* eslint-disable no-constant-condition */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId, usePreviousProps } from '@mui/utils';\n\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n    const filteredOptions = !input ? options : options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n}\n\n// To replace with .findIndex() once we stop IE11 support.\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\nconst defaultFilterOptions = createFilterOptions();\n\n// Number of options to jump in list box when `Page Up` and `Page Down` keys are used.\nconst pageSize = 5;\nconst defaultIsActiveElementInListbox = listboxRef => {\n  var _listboxRef$current$p;\n  return listboxRef.current !== null && ((_listboxRef$current$p = listboxRef.current.parentElement) == null ? void 0 : _listboxRef$current$p.contains(document.activeElement));\n};\nexport function useAutocomplete(props) {\n  const {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_isActiveElementInListbox = defaultIsActiveElementInListbox,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    unstable_classNamePrefix = 'Mui',\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled: disabledProp,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    isOptionEqualToValue = (option, value) => option === value,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n      return String(optionLabel);\n    }\n    return optionLabel;\n  };\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n    if (inputValue === newInputValue) {\n      return;\n    }\n    setInputValueState(newInputValue);\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n    return true;\n  }),\n  // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const previousProps = usePreviousProps({\n    filteredOptions,\n    value,\n    inputValue\n  });\n  React.useEffect(() => {\n    const valueChange = value !== previousProps.value;\n    if (focused && !valueChange) {\n      return;\n    }\n\n    // Only reset the input's value when freeSolo if the component's value changes.\n    if (freeSolo && !valueChange) {\n      return;\n    }\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, previousProps.value, freeSolo]);\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  });\n\n  // Ensure the focusedTag is never inconsistent\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index;\n\n    // does the index exist?\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n    const prev = listboxRef.current.querySelector(`[role=\"option\"].${unstable_classNamePrefix}-focused`);\n    if (prev) {\n      prev.classList.remove(`${unstable_classNamePrefix}-focused`);\n      prev.classList.remove(`${unstable_classNamePrefix}-focusVisible`);\n    }\n    let listboxNode = listboxRef.current;\n    if (listboxRef.current.getAttribute('role') !== 'listbox') {\n      listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]');\n    }\n\n    // \"No results\"\n    if (!listboxNode) {\n      return;\n    }\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n    if (!option) {\n      return;\n    }\n    option.classList.add(`${unstable_classNamePrefix}-focused`);\n    if (reason === 'keyboard') {\n      option.classList.add(`${unstable_classNamePrefix}-focusVisible`);\n    }\n\n    // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/content-assets/wai-aria-practices/patterns/combobox/examples/js/select-only.js\n    // In case of mouse clicks and touch (in mobile devices) we avoid scrolling the element and keep both behaviors same.\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse' && reason !== 'touch') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n      if (diff === 'start') {\n        return 0;\n      }\n      if (diff === 'end') {\n        return maxIndex;\n      }\n      const newIndex = highlightedIndexRef.current + diff;\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n        return maxIndex;\n      }\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n        return 0;\n      }\n      return newIndex;\n    };\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    });\n\n    // Sync the content of the input with the highlighted option.\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option;\n\n        // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const checkHighlightedOptionExists = () => {\n    const isSameValue = (value1, value2) => {\n      const label1 = value1 ? getOptionLabel(value1) : '';\n      const label2 = value2 ? getOptionLabel(value2) : '';\n      return label1 === label2;\n    };\n    if (highlightedIndexRef.current !== -1 && previousProps.filteredOptions && previousProps.filteredOptions.length !== filteredOptions.length && previousProps.inputValue === inputValue && (multiple ? value.length === previousProps.value.length && previousProps.value.every((val, i) => getOptionLabel(value[i]) === getOptionLabel(val)) : isSameValue(previousProps.value, value))) {\n      const previousHighlightedOption = previousProps.filteredOptions[highlightedIndexRef.current];\n      if (previousHighlightedOption) {\n        const previousHighlightedOptionExists = filteredOptions.some(option => {\n          return getOptionLabel(option) === getOptionLabel(previousHighlightedOption);\n        });\n        if (previousHighlightedOptionExists) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    // Check if the previously highlighted option still exists in the updated filtered options list and if the value and inputValue haven't changed\n    // If it exists and the value and the inputValue haven't changed, return, otherwise continue execution\n    if (checkHighlightedOptionExists()) {\n      return;\n    }\n    const valueItem = multiple ? value[0] : value;\n\n    // The popup is empty, reset\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n\n    // Synchronize the value with the highlighted index\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current];\n\n      // Keep the current highlighted index if possible\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n      return;\n    }\n\n    // Prevent the highlighted index to leak outside the boundaries.\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    }\n\n    // Restore the focus to the previous index.\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    });\n    // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length,\n  // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n    if (!node) {\n      return;\n    }\n    syncHighlightedIndex();\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have bound getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n    setOpenState(true);\n    setInputPristine(true);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n    setOpenState(false);\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n    setValueState(newValue);\n  };\n  const isTouch = React.useRef(false);\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} does not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n    if (!disableCloseOnSelect && (!event || !event.ctrlKey && !event.metaKey)) {\n      handleClose(event, reason);\n    }\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`);\n\n      // Same logic as MenuList.js\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n    let nextTag = focusedTag;\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n\n    // Wait until IME is settled.\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n\n            // Avoid early form validation, let the end-users continue filling the form.\n            event.preventDefault();\n            if (disabled) {\n              return;\n            }\n            selectNewValue(event, option, 'selectOption');\n\n            // Move the selection to the end.\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n          break;\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault();\n            // Avoid the Modal to handle the event.\n            event.stopPropagation();\n            handleClear(event);\n          }\n          break;\n        case 'Backspace':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        case 'Delete':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0 && focusedTag !== -1) {\n            const index = focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        default:\n      }\n    }\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (unstable_isActiveElementInListbox(listboxRef)) {\n      inputRef.current.focus();\n      return;\n    }\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n    handleClose(event, 'blur');\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleOptionMouseMove = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    if (highlightedIndexRef.current !== index) {\n      setHighlightedIndex({\n        event,\n        index,\n        reason: 'mouse'\n      });\n    }\n  };\n  const handleOptionTouchStart = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'touch'\n    });\n    isTouch.current = true;\n  };\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  // Prevent input blur when interacting with the combobox\n  const handleMouseDown = event => {\n    // Prevent focusing the input if click is anywhere outside the Autocomplete\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  };\n\n  // Focus the input when interacting with the combobox\n  const handleClick = event => {\n    // Prevent focusing the input if click is anywhere outside the Autocomplete\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n    inputRef.current.focus();\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n    firstFocus.current = false;\n  };\n  const handleInputMouseDown = event => {\n    if (!disabledProp && (inputValue === '' || !open)) {\n      handlePopupIndicator(event);\n    }\n  };\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n          indexBy.set(group, true);\n        }\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n      return acc;\n    }, []);\n  }\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperatively so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox',\n      disabled: disabledProp\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => _extends({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1\n    }, !readOnly && {\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseMove: handleOptionMouseMove,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    expanded: popupOpen && anchorEl,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getListSubheaderUtilityClass } from './listSubheaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\nconst ListSubheaderRoot = styled('li', {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box',\n  lineHeight: '48px',\n  listStyle: 'none',\n  color: (theme.vars || theme).palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14)\n}, ownerState.color === 'primary' && {\n  color: (theme.vars || theme).palette.primary.main\n}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.inset && {\n  paddingLeft: 72\n}, !ownerState.disableSticky && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 1,\n  backgroundColor: (theme.vars || theme).palette.background.paper\n}));\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n  const {\n      className,\n      color = 'default',\n      component = 'li',\n      disableGutters = false,\n      disableSticky = false,\n      inset = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nListSubheader.muiSkipListHighlight = true;\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListSubheader;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'expanded', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _ClearIcon, _ArrowDropDownIcon;\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"slotProps\", \"value\"],\n  _excluded2 = [\"ref\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport useForkRef from '../utils/useForkRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 5px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 8px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 16,\n      paddingBottom: 17\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.hiddenLabel}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${autocompleteClasses.input}`]: {\n      paddingTop: 8,\n      paddingBottom: 9\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n});\n\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  position: 'relative',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _slotProps$clearIndic, _slotProps$paper, _slotProps$popper, _slotProps$popupIndic;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n  const {\n      autoComplete = false,\n      autoHighlight = false,\n      autoSelect = false,\n      blurOnSelect = false,\n      ChipProps,\n      className,\n      clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n        fontSize: \"small\"\n      })),\n      clearOnBlur = !props.freeSolo,\n      clearOnEscape = false,\n      clearText = 'Clear',\n      closeText = 'Close',\n      componentsProps = {},\n      defaultValue = props.multiple ? [] : null,\n      disableClearable = false,\n      disableCloseOnSelect = false,\n      disabled = false,\n      disabledItemsFocusable = false,\n      disableListWrap = false,\n      disablePortal = false,\n      filterSelectedOptions = false,\n      forcePopupIcon = 'auto',\n      freeSolo = false,\n      fullWidth = false,\n      getLimitTagsText = more => `+${more}`,\n      getOptionLabel: getOptionLabelProp,\n      groupBy,\n      handleHomeEndKeys = !props.freeSolo,\n      includeInputInList = false,\n      limitTags = -1,\n      ListboxComponent = 'ul',\n      ListboxProps,\n      loading = false,\n      loadingText = 'Loading…',\n      multiple = false,\n      noOptionsText = 'No options',\n      openOnFocus = false,\n      openText = 'Open',\n      PaperComponent = Paper,\n      PopperComponent = Popper,\n      popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n      readOnly = false,\n      renderGroup: renderGroupProp,\n      renderInput,\n      renderOption: renderOptionProp,\n      renderTags,\n      selectOnFocus = !props.freeSolo,\n      size = 'medium',\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    expanded,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  const {\n    onMouseDown: handleInputMouseDown\n  } = getInputProps();\n  const {\n    ref: externalListboxRef\n  } = ListboxProps != null ? ListboxProps : {};\n  const _getListboxProps = getListboxProps(),\n    {\n      ref: listboxRef\n    } = _getListboxProps,\n    otherListboxProps = _objectWithoutPropertiesLoose(_getListboxProps, _excluded2);\n  const combinedListboxRef = useForkRef(listboxRef, externalListboxRef);\n  const defaultGetOptionLabel = option => {\n    var _option$label;\n    return (_option$label = option.label) != null ? _option$label : option;\n  };\n  const getOptionLabel = getOptionLabelProp || defaultGetOptionLabel;\n\n  // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    expanded,\n    focused,\n    fullWidth,\n    getOptionLabel,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: classes.tag,\n      disabled\n    }, getTagProps(params));\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n  const renderOption = renderOptionProp || defaultRenderOption;\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      index,\n      inputValue\n    }, ownerState);\n  };\n  const clearIndicatorSlotProps = (_slotProps$clearIndic = slotProps.clearIndicator) != null ? _slotProps$clearIndic : componentsProps.clearIndicator;\n  const paperSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : componentsProps.paper;\n  const popperSlotProps = (_slotProps$popper = slotProps.popper) != null ? _slotProps$popper : componentsProps.popper;\n  const popupIndicatorSlotProps = (_slotProps$popupIndic = slotProps.popupIndicator) != null ? _slotProps$popupIndic : componentsProps.popupIndicator;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          onClick: event => {\n            if (event.target === event.currentTarget) {\n              handleInputMouseDown(event);\n            }\n          }\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, clearIndicatorSlotProps, {\n              className: clsx(classes.clearIndicator, clearIndicatorSlotProps == null ? void 0 : clearIndicatorSlotProps.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, popupIndicatorSlotProps, {\n              className: clsx(classes.popupIndicator, popupIndicatorSlotProps == null ? void 0 : popupIndicatorSlotProps.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen\n    }, popperSlotProps, {\n      className: clsx(classes.popper, popperSlotProps == null ? void 0 : popperSlotProps.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, paperSlotProps, {\n        className: clsx(classes.paper, paperSlotProps == null ? void 0 : paperSlotProps.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, otherListboxProps, ListboxProps, {\n          ref: combinedListboxRef,\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    })) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   *\n   * When using `freeSolo` mode, the typed value will be the input value\n   * if the Autocomplete loses focus without highlighting an option.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @default createFilterOptions()\n   * @param {Value[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {Value[]}\n   */\n  filterOptions: PropTypes.func,\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {Value} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {Value} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {Value} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {Value} option The option to test.\n   * @param {Value} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value|Value[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {Value} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`, `\"touch\"`.\n   */\n  onHighlightChange: PropTypes.func,\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {Value} option The option to render.\n   * @param {object} state The state of each option.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n  /**\n   * Render the selected value.\n   *\n   * @param {Value[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nconst chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'filledPrimary', 'filledSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'deleteIconFilledColorPrimary', 'deleteIconFilledColorSecondary', 'focusVisible']);\nexport default chipClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"avatar\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\", \"tabIndex\", \"skipFocusWhenDisabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport chipClasses, { getChipUtilityClass } from './chipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    size,\n    color,\n    iconColor,\n    onDelete,\n    clickable,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, disabled && 'disabled', `size${capitalize(size)}`, `color${capitalize(color)}`, clickable && 'clickable', clickable && `clickableColor${capitalize(color)}`, onDelete && 'deletable', onDelete && `deletableColor${capitalize(color)}`, `${variant}${capitalize(color)}`],\n    label: ['label', `label${capitalize(size)}`],\n    avatar: ['avatar', `avatar${capitalize(size)}`, `avatarColor${capitalize(color)}`],\n    icon: ['icon', `icon${capitalize(size)}`, `iconColor${capitalize(iconColor)}`],\n    deleteIcon: ['deleteIcon', `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color)}`, `deleteIcon${capitalize(variant)}Color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\nconst ChipRoot = styled('div', {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      color,\n      iconColor,\n      clickable,\n      onDelete,\n      size,\n      variant\n    } = ownerState;\n    return [{\n      [`& .${chipClasses.avatar}`]: styles.avatar\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatar${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatarColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles.icon\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`icon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`iconColor${capitalize(iconColor)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles.deleteIcon\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(variant)}Color${capitalize(color)}`]\n    }, styles.root, styles[`size${capitalize(size)}`], styles[`color${capitalize(color)}`], clickable && styles.clickable, clickable && color !== 'default' && styles[`clickableColor${capitalize(color)})`], onDelete && styles.deletable, onDelete && color !== 'default' && styles[`deletableColor${capitalize(color)}`], styles[variant], styles[`${variant}${capitalize(color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const textColor = theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300];\n  return _extends({\n    maxWidth: '100%',\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: (theme.vars || theme).palette.text.primary,\n    backgroundColor: (theme.vars || theme).palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // reset cursor explicitly in case ButtonBase is used\n    cursor: 'unset',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 0,\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    [`&.${chipClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`& .${chipClasses.avatar}`]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.vars ? theme.vars.palette.Chip.defaultAvatarColor : textColor,\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [`& .${chipClasses.avatarColorPrimary}`]: {\n      color: (theme.vars || theme).palette.primary.contrastText,\n      backgroundColor: (theme.vars || theme).palette.primary.dark\n    },\n    [`& .${chipClasses.avatarColorSecondary}`]: {\n      color: (theme.vars || theme).palette.secondary.contrastText,\n      backgroundColor: (theme.vars || theme).palette.secondary.dark\n    },\n    [`& .${chipClasses.avatarSmall}`]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n    [`& .${chipClasses.icon}`]: _extends({\n      marginLeft: 5,\n      marginRight: -6\n    }, ownerState.size === 'small' && {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    }, ownerState.iconColor === ownerState.color && _extends({\n      color: theme.vars ? theme.vars.palette.Chip.defaultIconColor : textColor\n    }, ownerState.color !== 'default' && {\n      color: 'inherit'\n    })),\n    [`& .${chipClasses.deleteIcon}`]: _extends({\n      WebkitTapHighlightColor: 'transparent',\n      color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.26)` : alpha(theme.palette.text.primary, 0.26),\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.4)` : alpha(theme.palette.text.primary, 0.4)\n      }\n    }, ownerState.size === 'small' && {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    }, ownerState.color !== 'default' && {\n      color: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].contrastTextChannel} / 0.7)` : alpha(theme.palette[ownerState.color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: (theme.vars || theme).palette[ownerState.color].contrastText\n      }\n    })\n  }, ownerState.size === 'small' && {\n    height: 24\n  }, ownerState.color !== 'default' && {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n    color: (theme.vars || theme).palette[ownerState.color].contrastText\n  }, ownerState.onDelete && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, ownerState.onDelete && ownerState.color !== 'default' && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark\n    }\n  });\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.clickable && {\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  },\n  '&:active': {\n    boxShadow: (theme.vars || theme).shadows[1]\n  }\n}, ownerState.clickable && ownerState.color !== 'default' && {\n  [`&:hover, &.${chipClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].dark\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.variant === 'outlined' && {\n  backgroundColor: 'transparent',\n  border: theme.vars ? `1px solid ${theme.vars.palette.Chip.defaultBorder}` : `1px solid ${theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: (theme.vars || theme).palette.action.hover\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`& .${chipClasses.avatar}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.avatarSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.icon}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.iconSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    marginRight: 5\n  },\n  [`& .${chipClasses.deleteIconSmall}`]: {\n    marginRight: 3\n  }\n}, ownerState.variant === 'outlined' && ownerState.color !== 'default' && {\n  color: (theme.vars || theme).palette[ownerState.color].main,\n  border: `1px solid ${theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.7)` : alpha(theme.palette[ownerState.color].main, 0.7)}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.focusOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.focusOpacity)\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    color: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.7)` : alpha(theme.palette[ownerState.color].main, 0.7),\n    '&:hover, &:active': {\n      color: (theme.vars || theme).palette[ownerState.color].main\n    }\n  }\n}));\nconst ChipLabel = styled('span', {\n  name: 'MuiChip',\n  slot: 'Label',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      size\n    } = ownerState;\n    return [styles.label, styles[`label${capitalize(size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  paddingLeft: 12,\n  paddingRight: 12,\n  whiteSpace: 'nowrap'\n}, ownerState.size === 'small' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}));\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n  const {\n      avatar: avatarProp,\n      className,\n      clickable: clickableProp,\n      color = 'default',\n      component: ComponentProp,\n      deleteIcon: deleteIconProp,\n      disabled = false,\n      icon: iconProp,\n      label,\n      onClick,\n      onDelete,\n      onKeyDown,\n      onKeyUp,\n      size = 'medium',\n      variant = 'filled',\n      tabIndex,\n      skipFocusWhenDisabled = false // TODO v6: Rename to `focusableWhenDisabled`.\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n  const ownerState = _extends({}, props, {\n    component,\n    disabled,\n    size,\n    color,\n    iconColor: /*#__PURE__*/React.isValidElement(iconProp) ? iconProp.props.color || color : color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const moreProps = component === ButtonBase ? _extends({\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible\n  }, onDelete && {\n    disableRipple: true\n  }) : {};\n  let deleteIcon = null;\n  if (onDelete) {\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon),\n      onClick: handleDeleteIconClick\n    });\n  }\n  let avatar = null;\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n  let icon = null;\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('MUI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(ChipRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    tabIndex: skipFocusWhenDisabled && disabled ? -1 : tabIndex,\n    ownerState: ownerState\n  }, moreProps, other, {\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      ownerState: ownerState,\n      children: label\n    }), deleteIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.element,\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If `false`, the chip will not appear clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   * Note: this controls the UI and does not affect the onClick event.\n   */\n  clickable: PropTypes.bool,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n  /**\n   * The content of the component.\n   */\n  label: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * If `true`, allows the disabled chip to escape focus.\n   * If `false`, allows the disabled chip to receive focus.\n   * @default false\n   */\n  skipFocusWhenDisabled: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Chip;"],"names":["stripDiacritics","string","normalize","replace","createFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","findIndex","array","comp","i","length","defaultFilterOptions","defaultIsActiveElementInListbox","listboxRef","_listboxRef$current$p","current","parentElement","contains","document","activeElement","useAutocomplete","props","unstable_isActiveElementInListbox","unstable_classNamePrefix","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledProp","disabled","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","label","groupBy","handleHomeEndKeys","idProp","id","includeInputInList","inputValueProp","isOptionEqualToValue","value","onChange","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","openOnFocus","readOnly","selectOnFocus","valueProp","useId","optionLabel","String","ignoreFocus","React","firstFocus","inputRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","useControlled","controlled","default","name","setValueState","state","setInputValueState","focused","setFocused","resetInputValue","event","newValue","newInputValue","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","previousProps","usePreviousProps","valueChange","listboxAvailable","focusTag","useEventCallback","tagToFocus","focus","querySelector","setHighlightedIndex","index","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","getAttribute","add","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","value1","every","val","previousHighlightedOption","checkHighlightedOptionExists","valueItem","currentOption","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","push","splice","ctrlKey","metaKey","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","other","onKeyDown","defaultMuiPrevented","key","which","preventDefault","stopPropagation","handleFocus","handleBlur","handleInputChange","target","handleOptionMouseMove","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","_extends","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","undefined","ref","autoCapitalize","spellCheck","role","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseMove","onTouchStart","expanded","getListSubheaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListSubheaderRoot","styled","overridesResolver","styles","ownerState","root","color","capitalize","disableGutters","gutters","inset","disableSticky","sticky","theme","boxSizing","lineHeight","listStyle","vars","palette","text","secondary","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","primary","main","paddingLeft","paddingRight","position","top","zIndex","backgroundColor","background","paper","ListSubheader","inProps","useThemeProps","className","component","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","muiSkipListHighlight","createSvgIcon","d","getAutocompleteUtilityClass","_ClearIcon","_ArrowDropDownIcon","_excluded2","AutocompleteRoot","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","size","autocompleteClasses","tag","inputRoot","visibility","width","margin","maxWidth","flexWrap","minWidth","inputClasses","paddingBottom","padding","inputBaseClasses","outlinedInputClasses","right","paddingTop","filledInputClasses","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","endAdornment","AutocompleteClearIndicator","IconButton","clearIndicator","marginRight","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","modal","AutocompletePaper","Paper","body1","overflow","AutocompleteLoading","loading","AutocompleteNoOptions","noOptions","AutocompleteListbox","listbox","maxHeight","minHeight","display","justifyContent","alignItems","cursor","outline","WebkitTapHighlightColor","breakpoints","up","action","hover","disabledOpacity","pointerEvents","mainChannel","selectedOpacity","alpha","hoverOpacity","focusOpacity","AutocompleteGroupLabel","groupLabel","AutocompleteGroupUl","groupUl","_slotProps$clearIndic","_slotProps$paper","_slotProps$popper","_slotProps$popupIndic","startAdornment","ChipProps","clearIcon","ClearIcon","clearText","closeText","componentsProps","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","ArrowDropDownIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","slotProps","externalListboxRef","_getListboxProps","otherListboxProps","combinedListboxRef","useForkRef","getCustomizedTagProps","params","map","Chip","children","_jsxs","props2","renderListOption","optionProps","clearIndicatorSlotProps","paperSlotProps","popperSlotProps","popupIndicatorSlotProps","InputLabelProps","InputProps","title","inputProps","style","clientWidth","option2","index2","getChipUtilityClass","ChipRoot","iconColor","clickable","variant","chipClasses","avatar","icon","deleteIcon","deletable","textColor","mode","grey","height","borderRadius","whiteSpace","transition","transitions","create","textDecoration","border","verticalAlign","marginLeft","defaultAvatarColor","contrastText","dark","defaultIconColor","primaryChannel","contrastTextChannel","selectedChannel","userSelect","boxShadow","shadows","defaultBorder","ChipLabel","isDeleteKeyboardEvent","keyboardEvent","avatarProp","clickableProp","ComponentProp","deleteIconProp","iconProp","onKeyUp","skipFocusWhenDisabled","chipRef","handleRef","handleDeleteIconClick","ButtonBase","moreProps","focusVisibleClassName","focusVisible","disableRipple","CancelIcon"],"sourceRoot":""}