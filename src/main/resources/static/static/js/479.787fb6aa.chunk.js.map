{"version":3,"file":"static/js/479.787fb6aa.chunk.js","mappings":"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","sources":["components/dekan/studentservice/FilterNoticeHistoryGroups.jsx","components/dekan/studentservice/NoticeHistory.jsx"],"sourcesContent":["import React, {memo, useState} from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst FilterNoticeHistoryGroups = ({data,setFilteredGroups}) => {\r\n\r\n    const groupsData=useSelector(state => state.dekanat?.dekanat?.faculties) ?? []\r\n    const sortedGroupsData = [...groupsData].sort((a, b) => a?.shortName?.localeCompare(b?.shortName));\r\n    const [selectedGroup, setSelectedGroup] = useState('');\r\n\r\n    function filterData(input, dataArray) {\r\n        if (input === \"\") {\r\n            return [];\r\n        }\r\n        return dataArray.filter(item =>\r\n            item.groupName.toLowerCase().includes(input.toLowerCase())\r\n        );\r\n    }\r\n    const handleGroupChange = (event) => {\r\n        const inputValue = event.target.value;\r\n        setSelectedGroup(inputValue);\r\n        const filteredData = filterData(inputValue, data);\r\n        setFilteredGroups(filteredData);\r\n    };\r\n    return (\r\n        <div>\r\n            <FormControl sx={{ m: 2, minWidth: 150 }}>\r\n                <InputLabel id=\"demo-simple-select-autowidth-label\">Group</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-autowidth-label\"\r\n                    id=\"demo-simple-select-autowidth\"\r\n                    value={selectedGroup}\r\n                    onChange={handleGroupChange}\r\n                    autoWidth\r\n                    size=\"large\"\r\n                    label=\"Group\"\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>All</em>\r\n                    </MenuItem>\r\n                    {sortedGroupsData.map(option => (\r\n                        <MenuItem key={option?.id} value={option?.shortName}>{option?.shortName}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(FilterNoticeHistoryGroups);","import React, {memo, useEffect, useState} from 'react';\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {BsArrowLeft} from \"react-icons/bs\";\r\nimport {Card, CardContent} from \"@mui/material\";\r\nimport {DataGrid, GridToolbar} from \"@mui/x-data-grid\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL, getHeaders} from \"../../../utills/ServiceUrls\";\r\nimport PdfNotice from \"../../../utills/pdfFiles/PdfNotice\";\r\nimport styled from \"styled-components\";\r\nimport FilterNoticeHistoryGroups from \"./FilterNoticeHistoryGroups\";\r\n\r\nconst NoticeHistory = () => {\r\n    const navigate = useNavigate()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const columns = [\r\n        {\r\n            field: 'studentQueue',\r\n            headerName: 'Document number',\r\n            sortable: true,\r\n            width: 150,\r\n            align: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        {\r\n            minWidth: 300,\r\n            flex: 1,\r\n            field: 'fullName',\r\n            headerName: 'Full name',\r\n            sortable: true,\r\n            align: 'center',\r\n            justifyContent: 'center'\r\n        },\r\n        {\r\n            minWidth: 80,\r\n            flex: 0.2,\r\n            field: 'level',\r\n            headerName: 'Course',\r\n            sortable: true,\r\n            align: 'center',\r\n            justifyContent: 'center'\r\n        },     {\r\n            minWidth: 100,\r\n            flex: 0.5,\r\n            field: 'groupName',\r\n            headerName: 'Group',\r\n            sortable: true,\r\n            align: 'center',\r\n            justifyContent: 'center'\r\n        },\r\n        {\r\n            flex: 0.3,\r\n            field: 'file',\r\n            headerName: 'File',\r\n            sortable: true,\r\n            align: 'center',\r\n            renderCell: (cellValue) => {\r\n                const noticeData = {\r\n                    studentQueue:cellValue.row?.studentQueue,\r\n                    updateAt: cellValue.row?.createdAt,\r\n                    educationYear:cellValue.row?.educationYear,\r\n                    fromDate:cellValue.row?.fromDate,\r\n                    toDate:cellValue.row?.toDate,\r\n                }\r\n                const studentData = {\r\n                    fullName:cellValue.row?.fullName,\r\n                    groupData:{\r\n                        facultyName:cellValue.row?.direction,\r\n                        level:cellValue.row?.level,\r\n                        name:cellValue.row?.groupName,\r\n                    }\r\n                }\r\n                return <PdfNotice noticeData={noticeData} studentData={studentData}/>\r\n            }\r\n        }\r\n    ]\r\n    const {headers} = getHeaders()\r\n    const [data, setData] = useState([])\r\n    const [filteredGroups, setFilteredGroups] = useState([]);\r\n\r\n    const getData = () => {\r\n        setIsLoading(true)\r\n        axios.get(BASE_URL + '/notificationOuter/getAllCounters', {headers})\r\n            .then(res => {\r\n                console.log(res.data)\r\n                setData(res.data.obj?.sort((a, b) => {\r\n                    if (a?.studentQueue < b?.studentQueue) return -1;\r\n                    else if (a?.studentQueue > b?.studentQueue) return 1;\r\n                    return 0;\r\n                })?.map(item=>({...item,studentQueue:item?.studentQueue?.toString().padStart(6,'0') })))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        getData()\r\n    }, []);\r\n\r\n    const chooseData=(fData,oData)=>{\r\n        if (fData.length===0) return oData;\r\n        return fData\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Box mt={3} display={'flex'} justifyContent={'end'} gap={5}>\r\n                <Button variant={'outlined'} startIcon={<BsArrowLeft/>} onClick={() => navigate(-1)}>\r\n                    back\r\n                </Button>\r\n            </Box>\r\n            <Card sx={{mt: 2}}>\r\n                <CardContent>\r\n                   <FilterNoticeHistoryGroups data={data}  setFilteredGroups={setFilteredGroups}/>\r\n                    <DataGrid\r\n                        components={{Toolbar: GridToolbar}}\r\n                        loading={isLoading}\r\n                        columns={columns}\r\n                        initialState={{\r\n                            pagination: { paginationModel: { pageSize: 30 } },\r\n                        }}\r\n                        rowsPerPageOptions={[ 30, 50, 70, 100]}\r\n                        rows={chooseData(filteredGroups,data) || []}\r\n                        autoHeight\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\nconst Container=styled.div`\r\n    width: 100%;\r\n    .MuiDataGrid-columnHeaderTitleContainer {\r\n        justify-content: center;\r\n    }\r\n`\r\nexport default memo(NoticeHistory);"],"names":["FilterNoticeHistoryGroups","data","setFilteredGroups","groupsData","useSelector","state","dekanat","faculties","sortedGroupsData","sort","a","b","shortName","localeCompare","useState","selectedGroup","setSelectedGroup","FormControl","sx","m","minWidth","InputLabel","id","Select","labelId","value","onChange","event","inputValue","target","input","dataArray","filteredData","filter","item","groupName","toLowerCase","includes","autoWidth","size","label","MenuItem","map","option","memo","NoticeHistory","navigate","useNavigate","isLoading","setIsLoading","columns","field","headerName","sortable","width","align","justifyContent","flex","renderCell","cellValue","noticeData","studentQueue","row","updateAt","createdAt","educationYear","fromDate","toDate","studentData","fullName","groupData","facultyName","direction","level","name","PdfNotice","headers","getHeaders","setData","filteredGroups","useEffect","axios","BASE_URL","then","res","console","log","obj","toString","padStart","catch","err","finally","fData","oData","Container","Box","mt","display","gap","Button","variant","startIcon","onClick","Card","CardContent","DataGrid","components","Toolbar","GridToolbar","loading","initialState","pagination","paginationModel","pageSize","rowsPerPageOptions","rows","length","autoHeight","styled"],"sourceRoot":""}