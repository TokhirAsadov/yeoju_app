{"version":3,"file":"static/js/2440.9a9c9e88.chunk.js","mappings":"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","sources":["components/role/RoleUser.jsx","../node_modules/@mui/icons-material/CheckBox.js","../node_modules/@mui/icons-material/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL, getHeaders, mainColor} from \"../../utills/ServiceUrls\";\r\nimport {motion} from \"framer-motion\";\r\nimport {toast} from \"react-toastify\";\r\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\r\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport {TextField} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {extrasmall} from \"../../responsiv\";\r\n\r\n\r\n\r\nconst RoleUser = () => {\r\n    const icon = <CheckBoxOutlineBlankIcon fontSize=\"small\"/>;\r\n    const checkedIcon = <CheckBoxIcon fontSize=\"small\"/>;\r\n    const [spinner, setSpinner] = useState(true);\r\n    const [userId, setUserId] = useState(null);\r\n    const [roleId, setRoleId] = useState([]);\r\n    const [roles, setRoles] = useState([]);\r\n    const [userOptions, setUserOptions] = useState([]);\r\n    const {headers} = getHeaders();\r\n    const [selectedRolesArray, setSelectedRolesArray] = useState([]);\r\n    const handleSearch = (event, newInputValue) => {\r\n        if (newInputValue.trim().length > 2) {\r\n\r\n            axios.get(BASE_URL + \"/user/getUsersForUserRole?keyword=\" + newInputValue, {headers})\r\n                .then(res => {\r\n                    const resData = res?.data?.obj\r\n                    const uniqueKeys = new Set(\r\n                        resData.map((item) => JSON.stringify(item)),\r\n                    );\r\n                    const uniqueArray = Array.from(uniqueKeys).map(key => JSON.parse(key));\r\n                    console.log(uniqueArray)\r\n                    setUserOptions(uniqueArray)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (event, newValue) => {\r\n        setUserId(newValue);\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(BASE_URL + \"/role/allRoles\")\r\n            .then(res => {\r\n                // console.log(res)\r\n                setRoles(res.data?.obj);\r\n                setSpinner(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    const onSubmit = () => {\r\n\r\n        if (userId !== null) {\r\n            if (selectedRolesArray.length !== 0) {\r\n                const arrayOfIds = selectedRolesArray.map(obj => obj.id)\r\n                axios.post(BASE_URL + \"/user/userRole\", {userId: userId?.value, roleId: arrayOfIds}, {headers})\r\n                    .then(res => {\r\n                        if (res.status === 201) {\r\n                            toast.success(\"Successfully changed roles of user..\")\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                    })\r\n            } else {\r\n                alert(\"Error.. Empty role...\")\r\n            }\r\n        } else {\r\n            alert(\"Error.. Please, select user..\")\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Wrapper>\r\n                <Autocomplete\r\n                    disablePortal\r\n                    id=\"combo-box-demo\"\r\n                    options={userOptions}\r\n                    isOptionEqualToValue={(option, value) => option.value === value.value}\r\n                    getOptionLabel={option => option.label}\r\n                    onChange={onChangeHandler}\r\n                    onInputChange={handleSearch}\r\n                    fullWidth\r\n                    size={'small'}\r\n                    renderInput={(params) => <TextField {...params} label=\"Select user\" placeholder={'user'}/>}\r\n                />\r\n\r\n                <Autocomplete\r\n                    multiple\r\n                    id=\"checkboxes-tags-demo1\"\r\n                    options={roles}\r\n                    disableCloseOnSelect\r\n                    isOptionEqualToValue={(option, value) => option.id === value.id}\r\n                    getOptionLabel={(option) => option.roleName.startsWith(\"ROLE_\") ? option.roleName.substring(5).toUpperCase() : option.roleName.toUpperCase()}\r\n                    onChange={(event, newValue) => {\r\n                        setSelectedRolesArray(newValue)\r\n                    }}\r\n                    size={'small'}\r\n                    renderOption={(props, option, {selected}) => (\r\n                        <li {...props}>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{marginRight: 8}}\r\n                                checked={selected}\r\n                            />\r\n                            {option.roleName.startsWith(\"ROLE_\") ? option.roleName.substring(5).toUpperCase() : option.roleName.toUpperCase()}\r\n                        </li>\r\n                    )}\r\n                    fullWidth\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} label=\"Select roles\" placeholder=\"roles\"/>\r\n                    )}\r\n                />\r\n                <Button sx={{alignSelf: \"start\", width: \"200px\", margin: \"0 auto\"}} variant={'contained'}\r\n                        onClick={onSubmit}>save</Button>\r\n            </Wrapper>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    gap: 20px;\r\n    ${extrasmall({\r\n        gridTemplateColumns: \"1fr\",\r\n    })}\r\n`;\r\n\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    padding: 1rem;\r\n`;\r\n\r\nexport default RoleUser;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');\nexports.default = _default;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["Wrapper","styled","extrasmall","gridTemplateColumns","Container","icon","fontSize","checkedIcon","useState","setSpinner","userId","setUserId","roles","setRoles","userOptions","setUserOptions","headers","getHeaders","selectedRolesArray","setSelectedRolesArray","useEffect","axios","BASE_URL","then","res","data","obj","catch","err","console","log","disablePortal","id","options","isOptionEqualToValue","option","value","getOptionLabel","label","onChange","event","newValue","onInputChange","newInputValue","trim","length","resData","uniqueKeys","Set","map","item","JSON","stringify","uniqueArray","Array","from","key","parse","fullWidth","size","renderInput","params","placeholder","multiple","disableCloseOnSelect","roleName","startsWith","substring","toUpperCase","renderOption","props","selected","style","marginRight","checked","sx","alignSelf","width","margin","variant","onClick","arrayOfIds","roleId","status","toast","alert","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon","_jsx","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","styles","ownerState","root","indeterminate","color","capitalize","theme","_extends","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","primary","mainChannel","hoverOpacity","alpha","active","main","checkboxClasses","disabled","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","type","clsx","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","padding","borderRadius","edge","marginLeft","SwitchBaseInput","cursor","position","opacity","height","top","left","zIndex","autoFocus","checkedProp","defaultChecked","disabledProp","disableFocusRipple","inputRef","onBlur","onFocus","readOnly","required","tabIndex","useControlled","controlled","Boolean","state","setCheckedState","muiFormControl","useFormControl","hasLabelFor","input","_jsxs","component","centerRipple","focusRipple","role","undefined","children","nativeEvent","defaultPrevented","newChecked","target"],"sourceRoot":""}