{"version":3,"file":"static/js/2753.b5a5f0cb.chunk.js","mappings":"oSA2EMA,EAAOC,EAAAA,GAAAA,IAAH,wKASJC,EAAQD,EAAAA,GAAAA,GAAH,0EACAE,EAAAA,IAEPC,EAAAA,EAAAA,IAAW,CACXC,UAAU,SACVC,WAAW,KAITC,EAAYN,EAAAA,GAAAA,IAAH,yDAIf,UAzFa,WAEX,OAA6BO,EAAAA,EAAAA,WAAS,GAAtC,eAAOC,EAAP,KAAeC,EAAf,KAYA,GAAuBF,EAAAA,EAAAA,UAAS,CAC9B,CAAEG,GAAI,EAAGC,SAAU,eAAgBC,OAAQ,SAAUC,QAAS,IAAIC,KAAOC,SAAU,IAAID,KAAOE,YAAY,aAC1G,CAAEN,GAAI,EAAGC,SAAU,eAAgBC,OAAQ,SAAUC,QAAS,IAAIC,KAAOC,SAAU,IAAID,KAAOG,MAAM,SAASD,YAAa,eAF5H,eAAOE,EAAP,KAAYC,EAAZ,KAsBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAOC,GAAWC,EAAAA,EAAAA,MAAXD,QACPE,EAAAA,EAAAA,IAAUC,EAAAA,GAASC,EAAAA,GAAAA,KAAW,CAAEJ,QAAAA,IAC7BK,MAAK,SAAAC,GAAQ,IAAD,EACX,UAAAA,EAAIT,YAAJ,SAAUU,IAAV,mCAAe,WAAOC,GAAP,wEACI,OAAdA,EAAKC,OACND,EAAKC,KAAO,IAAIhB,KAAKe,EAAKC,OAFf,kBAGND,GAHM,2CAAf,uDAKAV,EAAQQ,EAAIT,MACZT,GAAW,MAEZsB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAE5B,KAIE,UAAC1B,EAAD,YACE,SAACL,EAAD,gCACA,SAACF,EAAD,UAEIS,GAAU,SAAC,IAAD,KAAc,SAAC,IAAD,CACpB2B,mBAAiB,EACjBC,MAAO,CAACC,MAAM,QAAQC,UAAU,mBAChCC,QAxCE,CACd,CAAEC,MAAO,KAAMC,WAAY,KAAMJ,MAAO,GAAIK,UAAU,GACtD,CAAEF,MAAO,WAAYC,WAAY,YAAYE,KAAM,WAAYN,MAAO,IAAKK,UAAU,GACrF,CAAEF,MAAO,SAAUC,WAAY,SAASE,KAAM,SAAUN,MAAO,IAAKK,UAAU,GAC9E,CAAEF,MAAO,OAAQC,WAAY,OAAOE,KAAM,SAAUN,MAAO,IAAKK,UAAU,GAC1E,CAAEF,MAAO,OAAQC,WAAY,OAAOE,KAAM,WAAYN,MAAO,IAAKK,UAAU,GAC5E,CAAEF,MAAO,WAAYC,WAAY,WAAWE,KAAM,SAAUN,MAAO,IAAKK,UAAU,GAClF,CAAEF,MAAO,OAAQC,WAAY,OAAOE,KAAM,SAAUN,MAAO,IAAKK,UAAU,GAC1E,CAAEF,MAAO,QAASC,WAAY,QAAQE,KAAM,SAAUN,MAAO,IAAKK,UAAU,IAiChEE,KAAO1B,EACP2B,WAAY,CAAEC,QAASC,EAAAA,GACvBC,YAAU,EACVC,SAAU,GACVC,cAAY,kBACPhC,EAAKgC,cADE,IAEVX,QAAS,CACPY,sBAAuB,CACrBzC,IAAI,EACJ0C,OAAO,EACPC,MAAK,EACLC,UAAS","sources":["components/admin/menu/Menu.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {DataGrid, GridToolbar} from '@mui/x-data-grid';\r\nimport Spinner from \"../../spinner/Spinner\";\r\nimport {ADMIN, BASE_URL, getHeaders, mainColor} from \"../../../utills/ServiceUrls\";\r\nimport axios from \"axios\";\r\nimport {extrasmall} from \"../../../responsiv\";\r\n\r\nconst Menu = () => {\r\n\r\n  const [spinner,setSpinner] = useState(true);\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 40, editable: false },\r\n    { field: 'fullName', headerName: 'Full Name',type: 'dateTime', width: 300, editable: false, },\r\n    { field: 'device', headerName: 'Device',type: 'string', width: 180, editable: false, },\r\n    { field: 'room', headerName: 'Room',type: 'string', width: 140, editable: false, },\r\n    { field: 'time', headerName: 'Time',type: 'dateTime', width: 300, editable: false, },\r\n    { field: 'passport', headerName: 'Passport',type: 'string', width: 150, editable: false, },\r\n    { field: 'card', headerName: 'Card',type: 'string', width: 150, editable: false, },\r\n    { field: 'login', headerName: 'Login',type: 'string', width: 150, editable: false, },\r\n  ];\r\n  const [data,setData] = useState([\r\n    { id: 1, fullName: \"Tohir Asadov\", cardNo: \"123456\", dateAsc: new Date(),dateDesc: new Date(),phoneNumber:\"993361603\"},\r\n    { id: 2, fullName: \"Tohir Asadov\", cardNo: \"123456\", dateAsc: new Date(),dateDesc: new Date(),Print:\"OK See\",phoneNumber: \"993361603\"},\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const {headers} = getHeaders();\r\n    axios.get(BASE_URL+ADMIN.MENU,{ headers })\r\n      .then(res => {\r\n        res.data?.map( async (user) => {\r\n          if(user.time !== null)\r\n            user.time = new Date(user.time);\r\n          return user;\r\n        });\r\n        setData(res.data);\r\n        setSpinner(false);\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n  },[])\r\n\r\n\r\n  return (\r\n      <Container>\r\n        <Title>Statistics Table</Title>\r\n        <Body>\r\n          {\r\n            spinner ? <Spinner /> : <DataGrid\r\n                checkboxSelection\r\n                style={{width:\"900px\",minHeight:\"300px!important\"}}\r\n                columns={columns}\r\n                rows={ data }\r\n                components={{ Toolbar: GridToolbar }}/*** print and excel ****/\r\n                autoHeight\r\n                pageSize={50}\r\n                initialState={{ // hide items\r\n                  ...data.initialState,\r\n                  columns: {\r\n                    columnVisibilityModel: {\r\n                      id: false,\r\n                      login: false,\r\n                      card:false,\r\n                      passport:false\r\n                    },\r\n                  },\r\n                }}\r\n            />\r\n          }\r\n        </Body>\r\n      </Container>\r\n  );\r\n};\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  color: ${mainColor};\r\n  margin: 10px 0 20px 20px;\r\n  ${extrasmall({\r\n    textAlign:\"center\",\r\n    marginLeft:0,\r\n  })}\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 5px 10px!important; \r\n`;\r\n\r\nexport default Menu;"],"names":["Body","styled","Title","mainColor","extrasmall","textAlign","marginLeft","Container","useState","spinner","setSpinner","id","fullName","cardNo","dateAsc","Date","dateDesc","phoneNumber","Print","data","setData","useEffect","headers","getHeaders","axios","BASE_URL","ADMIN","then","res","map","user","time","catch","err","console","log","checkboxSelection","style","width","minHeight","columns","field","headerName","editable","type","rows","components","Toolbar","GridToolbar","autoHeight","pageSize","initialState","columnVisibilityModel","login","card","passport"],"sourceRoot":""}