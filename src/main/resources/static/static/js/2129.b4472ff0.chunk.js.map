{"version":3,"file":"static/js/2129.b4472ff0.chunk.js","mappings":"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","sources":["components/dekan/journal/Results.jsx","components/dekan/journal/DekanJournal.jsx"],"sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {mainColor} from \"../../../utills/ServiceUrls\";\r\n\r\nconst Results = ({data}) => {\r\n    const {studentResults, studentName} = data\r\n\r\n    const allGrade = (percentage) => {\r\n        const grade = [\r\n            {\r\n                alph: \"A+\",\r\n                Min: 95,\r\n                Max: 100,\r\n            },\r\n            {\r\n                alph: \"A\",\r\n                Min: 90,\r\n                Max: 94,\r\n            },\r\n            {\r\n                alph: \"B+\",\r\n                Min: 85,\r\n                Max: 89,\r\n            },\r\n            {\r\n                alph: \"B\",\r\n                Min: 80,\r\n                Max: 84,\r\n            },\r\n            {\r\n                alph: \"C+\",\r\n                Min: 75,\r\n                Max: 79,\r\n            },\r\n            {\r\n                alph: \"C\",\r\n                Min: 70,\r\n                Max: 74,\r\n            },\r\n            {\r\n                alph: \"D+\",\r\n                Min: 65,\r\n                Max: 69,\r\n            },\r\n            {\r\n                alph: \"D\",\r\n                Min: 60,\r\n                Max: 64,\r\n            },\r\n            {\r\n                alph: \"F\",\r\n                Min: 0,\r\n                Max: 59,\r\n            },\r\n            {\r\n                alph: \"FA\",\r\n                Min: 0,\r\n                Max: 0,\r\n            },\r\n        ]\r\n\r\n        if (percentage !== 0) {\r\n            return grade.find(item => item.Min <= percentage)\r\n        }\r\n        return grade.find(item => item.Min <= percentage && item.Max <= percentage)\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <TitleModal>\r\n                {studentName}\r\n            </TitleModal>\r\n            <Bodybox>\r\n                <TableResult>\r\n                    {/*header*/}\r\n                    <TableResultRow fw={\"bold\"} bg={\"#f3efef\"}>\r\n                        <TableResultCol >\r\n                            Year\r\n                        </TableResultCol>\r\n                        <TableResultCol >\r\n                            Semester\r\n                        </TableResultCol>\r\n                        <TableResultCol >\r\n                            Subject\r\n                        </TableResultCol>\r\n                        <TableResultCol >\r\n                            Credit\r\n                        </TableResultCol>\r\n                        <TableResultCol >\r\n                            Score\r\n                        </TableResultCol>\r\n                        <TableResultCol >\r\n                            Grade\r\n                        </TableResultCol>\r\n                    </TableResultRow>\r\n                    {/* body */}\r\n                    {studentResults.map((item,key)=>(\r\n                        <TableResultRow key={key} bg={item.allScore<=59 && \"red\"}>\r\n                            <TableResultCol>\r\n                                {item.year}\r\n                            </TableResultCol>\r\n                            <TableResultCol>\r\n                                {item.semestr}\r\n                            </TableResultCol>\r\n                            <TableResultCol>\r\n                                {item.subject}\r\n                            </TableResultCol>\r\n                            <TableResultCol>\r\n                                {item.credit}\r\n                            </TableResultCol>\r\n                            <TableResultCol>\r\n                                {item.allScore}%\r\n                            </TableResultCol>\r\n                            <TableResultCol>\r\n                                {allGrade(item.allScore).alph}\r\n                            </TableResultCol>\r\n                        </TableResultRow>\r\n                    ))}\r\n                </TableResult>\r\n            </Bodybox>\r\n        </Container>\r\n    );\r\n};\r\nconst TableResultCol = styled.div`\r\n  width: 100%;\r\n  padding: 5px;\r\n  border: 1px solid #cebfbf;\r\n  text-align: center;\r\n`;\r\n\r\nconst TableResultRow = styled.div`\r\n  background: ${props => props.bg || \"#FFF\"};\r\n  color: ${props => props.bg===\"red\"? \"#FFF\":\"#000\"};\r\n  display: grid;\r\n  font-weight:  ${props => props.fw || \"normal\"};\r\n  grid-template-columns: 0.5fr 0.3fr 0.9fr 0.3fr 0.3fr 0.3fr;\r\n`\r\nconst TableResult = styled.div`\r\n\r\n`\r\n\r\nconst Bodybox = styled.div`\r\n  margin-top: 50px;\r\n  padding: 10px;\r\n  min-height: 300px;\r\n  max-height: 350px;\r\n  overflow-y: scroll;\r\n`\r\nconst TitleModal = styled.div`\r\n  position: absolute;\r\n  font-size: 20px;\r\n  color: #ffffff;\r\n  background-color: ${mainColor};\r\n  width: 100%;\r\n  top: -1px;\r\n  border-radius: 8px 8px 0 0;\r\n  padding: 10px;\r\n  z-index: 9;\r\n`\r\nconst Container = styled.div`\r\n`\r\n\r\nexport default Results;","import React, {useEffect, useState} from 'react';\r\nimport Box from \"@mui/material/Box\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport {RiCloseLine} from \"react-icons/ri\";\r\nimport OneSciencesdata from \"../../student/sciences/OneSciencesdata\";\r\nimport styled from \"styled-components\";\r\nimport {extrasmall} from \"../../../responsiv\";\r\nimport {BASE_URL, getHeaders, mainColor} from \"../../../utills/ServiceUrls\";\r\nimport Results from \"./Results\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {fetchEducationYear} from \"../../../redux/actions/educationYear/education_year_actions\";\r\nimport {\r\n    educationYearStatisticsFetched,\r\n    educationYearStatisticsFetching\r\n} from \"../../../redux/slice/educationYear/education_year_statistics_slice\";\r\nimport moment from \"moment\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport {AiFillCheckCircle, AiFillCloseCircle, AiFillInfoCircle} from \"react-icons/ai\";\r\nimport {Card, CardContent, FormGroup, Menu, Skeleton} from \"@mui/material\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport {BsThreeDotsVertical} from \"react-icons/bs\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport EmptyDataImg from \"../../emptyDataImg/EmptyDataImg\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport SubjectInfo from \"./SubjectInfo\";\r\n\r\nconst DekanJournal = () => {\r\n\r\n    const [scien, setScien] = useState(\"\");\r\n    const [groupSelect, setGroupSelect] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [open2, setOpen2] = useState(false);\r\n    const [open3, setOpen3] = useState(false);\r\n    const [oneSciencesNb, setOneSciencesNb] = useState([]);\r\n    const educationYear = useSelector(state => state?.educationYear?.educationYear) || null;\r\n    const [eduYears, setEduYears] = useState([]);\r\n    const [groups, setGroups] = useState([]);\r\n    const [valueDate, setValueDate] = useState(moment().format(''));\r\n    const [statistics, setStatistics] = useState([]);\r\n    const dekanat = useSelector(state => state?.dekanat?.dekanat) || null;\r\n    const loadingStatistics = useSelector(state => state?.educationYearStatistics?.educationYearStatisticsLoadingStatus);\r\n    const educationStatistics = useSelector(state => state?.educationYearStatistics?.educationYearStatistics) || [];\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const openTableSetting = Boolean(anchorEl);\r\n    const [showAttendanceData, setShowAttendanceData] = useState([])\r\n    const [subjectInfo, setSubjectInfo] = useState(null)\r\n    const [showAttendance, setShowAttendance] = useState(false)\r\n    const [showAttendanceLoad, setShowAttendanceLoad] = useState(true)\r\n    const {headers} = getHeaders();\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const handleClickTableSetting = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleCloseTableSetting = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleShowAttendance = (event) => {\r\n        setShowAttendance(event.target.checked)\r\n    }\r\n    const handleChange3 = (event) => {\r\n        event.target.value !== educationYear?.name && dispatch(educationYearStatisticsFetching())\r\n        dispatch(fetchEducationYear(eduYears?.find(i => i?.name === event.target.value)))\r\n    };\r\n    const handleOpen = (data) => {\r\n        setOneSciencesNb(data)\r\n        setOpen(true)\r\n    };\r\n\r\n    const handleClose = () => setOpen(false);\r\n    const handleClose2 = () => setOpen2(false);\r\n\r\n    const handleChange1 = (event) => {\r\n        setScien(event.target.value);\r\n    };\r\n    const handleChange2 = (event) => {\r\n        setGroupSelect(event.target.value);\r\n        setShowAttendance(false)\r\n        setShowAttendanceLoad(true)\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchEducationYears();\r\n    }, [])\r\n\r\n    const fetchEducationYears = async () => {\r\n\r\n        await axios.get(BASE_URL + '/education/educationYearsForSelected', {headers})\r\n            .then(res => {\r\n                setEduYears(res?.data?.obj);\r\n                dispatch(fetchEducationYear(res?.data?.obj?.[0]))\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        scien && axios.get(BASE_URL + `/dekan/getGroupsNamesForDekanByFacultyId/${dekanat?.faculties?.find(faculty => faculty.shortName === scien)?.id}`, {headers})\r\n            .then(response => {\r\n                setGroups(response?.data?.sort(function (o1, o2) {\r\n                    if (o1?.name > o2?.name) return 1;\r\n                    else if (o1?.name < o2?.name) return -1;\r\n                    else return 0;\r\n                }))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [scien])\r\n\r\n    function compareFullNames(a, b) {\r\n        const nameA = a?.fullName.toUpperCase();\r\n        const nameB = b?.fullName.toUpperCase();\r\n\r\n        if (nameA < nameB) {\r\n            return -1;\r\n        }\r\n        if (nameA > nameB) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (showAttendance) {\r\n            setShowAttendanceLoad(true)\r\n\r\n            groupSelect && axios.get(BASE_URL + `/education/getStudentsStatisticsForDean?educationYearId=${educationYear?.id}&group=${groupSelect}`, {headers})\r\n                .then(response => {\r\n                    const resData = response?.data?.obj\r\n\r\n                    const mergeArray = educationStatistics.map(item1 => {\r\n                        const item2 = resData.find(item => item.student === item1.fullName);\r\n                        if (item2) {\r\n                            return {...item1, ...item2};\r\n                        }\r\n                        return item1;\r\n                    });\r\n                    setShowAttendanceData(mergeArray)\r\n                    setShowAttendanceLoad(false)\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    setShowAttendanceLoad(false)\r\n                });\r\n\r\n        } else {\r\n            groupSelect && dispatch(educationYearStatisticsFetching())\r\n            const dateConfig = moment(valueDate)\r\n\r\n            groupSelect && axios.get(BASE_URL + `/group/getStudentStatisticsForDeanOneWeek/${groups.find(i => i.name === groupSelect)?.id}?educationYearId=${educationYear?.id}&weekday=${dateConfig.day()}&week=${dateConfig.isoWeek()}&year=${dateConfig.year()}`, {headers})\r\n                .then(response => {\r\n                    dispatch(educationYearStatisticsFetched(response?.data?.obj.sort(compareFullNames)))\r\n                    setShowAttendanceLoad(true)\r\n\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    setShowAttendanceLoad(true)\r\n\r\n                });\r\n        }\r\n\r\n\r\n    }, [groupSelect, showAttendance, valueDate])\r\n\r\n\r\n\r\n    function groupObjectsByName(arr) {\r\n        return arr?.reduce((groupedObjects, obj) => {\r\n            const name = obj?.subject;\r\n\r\n            if (groupedObjects[name]) {\r\n                groupedObjects[name].push(obj);\r\n            } else {\r\n                groupedObjects[name] = [obj];\r\n            }\r\n\r\n            return groupedObjects;\r\n        }, {});\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <CardInput>\r\n                <Box sx={{width: 200}}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"semestr\">Semestr</InputLabel>\r\n                        <Select\r\n                            labelId=\"semestr\"\r\n                            id=\"demo-simple-select\"\r\n                            value={educationYear?.name}\r\n                            label=\"Semistr\"\r\n                            onChange={handleChange3}\r\n                        >\r\n                            {eduYears.map((item, key) => (\r\n                                <MenuItem key={item?.id} value={item?.name}>{item?.name}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n                <Box sx={{width: 200}}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Yo'nalish</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={scien}\r\n                            label=\"Yo'nalish\"\r\n                            onChange={handleChange1}\r\n                        >\r\n                            {dekanat?.faculties?.map((item, key) => (\r\n                                <MenuItem key={item?.id} value={item?.shortName}>{item?.shortName}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n                <Box sx={{width: 200}}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label1\">Group</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label1\"\r\n                            id=\"demo-simple-select1\"\r\n                            value={groupSelect}\r\n                            label=\"Group\"\r\n                            onChange={handleChange2}\r\n                        >\r\n                            {groups?.map((item, key) => (\r\n                                <MenuItem key={item?.id} value={item?.name}>{item?.name}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n                <Box sx={{width: 200}}>\r\n                    <FormControl fullWidth>\r\n                        <TextField\r\n                            label=\"Date\"\r\n                            InputLabelProps={{shrink: true,}}\r\n                            type='date'\r\n                            InputProps={{ inputProps: {max:moment().format('YYYY-MM-DD')} }}\r\n                            defaultValue={moment().format('YYYY-MM-DD')}\r\n                            onChange={(e) => setValueDate(e.target.value)}/>\r\n                    </FormControl>\r\n                </Box>\r\n            </CardInput>\r\n            <Box my={2} display={'flex'} justifyContent={'end'}>\r\n                <Button\r\n                    onClick={() => navigate('results')}\r\n                    variant={'contained'}>\r\n                    Subject results\r\n                </Button>\r\n            </Box>\r\n            <Card>\r\n                <CardContent>\r\n                    <Box display={'flex'} justifyContent={'end'}>\r\n                        <Tooltip title=\"Settings\">\r\n                            <IconButton\r\n                                onClick={handleClickTableSetting}\r\n                                size=\"medium\"\r\n                                sx={{ml: 2}}\r\n                                aria-controls={openTableSetting ? 'account-menu' : undefined}\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded={openTableSetting ? 'true' : undefined}\r\n                            >\r\n                                <BsThreeDotsVertical/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Box>\r\n                    <Bodybox>\r\n                        <table>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>№</th>\r\n                                <th>\r\n                                    <Box display='flex' gap={\"8px\"} alignItems={'center'} justifyContent={'center'}>\r\n                                        <p>Full name</p>\r\n                                    </Box>\r\n                                </th>\r\n                                {showAttendanceLoad && educationStatistics[0]?.subjects?.slice().sort((a, b) => {\r\n                                    if (a?.section < b?.section) return -1;\r\n                                    if (a?.section > b?.section) return 1;\r\n                                    return 0;\r\n                                }).map((item, index) => (\r\n                                    <Tooltip onClick={()=> {\r\n                                        setSubjectInfo(item)\r\n                                        setOpen3(true)\r\n                                    }}  key={index} title={<h6>{item?.lesson}</h6>} arrow placement={'top'}>\r\n                                        <th>{index + 1}</th>\r\n                                    </Tooltip>\r\n                                ))}\r\n                                <th>Enter</th>\r\n\r\n                                {showAttendance &&\r\n                                    <th><Box display='flex' gap={\"8px\"} alignItems={'center'} justifyContent={'center'}>\r\n                                        <p>Attendance</p>\r\n                                    </Box></th>}\r\n\r\n                                <th>Info</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                            {loadingStatistics !== 'loading' && showAttendanceLoad ? educationStatistics?.map((item, key) => {\r\n\r\n                                return (\r\n                                    <tr key={key}>\r\n                                        <td style={{textAlign: \"center\"}}>{key + 1}</td>\r\n                                        <td>{item?.fullName}</td>\r\n\r\n                                        {item?.subjects?.slice().sort((a, b) => {\r\n                                            if (a?.section < b?.section) return -1;\r\n                                            if (a?.section > b?.section) return 1;\r\n                                            return 0;\r\n                                        }).map((item2, index) => {\r\n                                            const isEnterClass = item2.statistics?.length > 0\r\n                                            return <td key={index}>\r\n                                                <BoxNb  color={isEnterClass ? \"green\" : \"red\"}>\r\n                                                    {!isEnterClass ? <AiFillCloseCircle/> : <AiFillCheckCircle/>}\r\n                                                </BoxNb>\r\n                                            </td>\r\n                                        })}\r\n                                        <td>\r\n                                            <BoxNb color={item.entering ? \"green\" : \"red\"}>\r\n                                                {!item.entering ? <AiFillCloseCircle/> : <AiFillCheckCircle/>}\r\n                                            </BoxNb>\r\n                                        </td>\r\n\r\n                                        {showAttendance &&\r\n                                            <td>\r\n                                                <Skeleton sx={{margin: \"0 auto\"}} width={\"40px\"} height={\"45px\"}/>\r\n                                            </td>\r\n                                        }\r\n                                        <td>\r\n                                            <BoxNb onClick={() => null}>\r\n                                                <AiFillInfoCircle/>\r\n                                            </BoxNb>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }) : showAttendanceData?.map((item, key) => {\r\n\r\n                                if (showAttendance) {\r\n                                    function addDays(date, days) {\r\n                                        var result = new Date(date);\r\n                                        result.setDate(result.getDate() + (days - 1));\r\n                                        return result;\r\n                                    }\r\n\r\n                                    const done = () => {\r\n                                        let arr = [];\r\n\r\n                                        item?.lessons?.map((lesson) => {\r\n                                            const statistics = item?.statistics?.flat();\r\n\r\n                                            if (statistics) {\r\n                                                const filteredStatistics = statistics.filter((statistic) =>\r\n                                                    statistic?.week === lesson?.sortWeek &&\r\n                                                    statistic?.weekday === lesson?.weekDay &&\r\n                                                    statistic?.section === lesson?.section\r\n                                                );\r\n\r\n                                                if (filteredStatistics.length === 0) {\r\n                                                    arr.push({\r\n                                                        time: addDays(lesson?.start, lesson?.weekDay),\r\n                                                        date: moment(addDays(lesson?.start, lesson?.weekDay)).format(\"DD.MM.YYYY\"),\r\n                                                        para: lesson?.section,\r\n                                                    });\r\n                                                }\r\n                                            }\r\n                                        });\r\n\r\n                                        return arr;\r\n                                    }\r\n\r\n                                    const done2 = () => {\r\n                                        let arr = [];\r\n\r\n                                        const groupedLessons = groupObjectsByName(item?.lessons);\r\n                                        const statistics = item?.statistics?.flat();\r\n\r\n                                        if (groupedLessons && statistics) {\r\n                                            Object.values(groupedLessons)?.map((lesson) => {\r\n                                                lesson?.map((les) => {\r\n                                                    const filteredStatistics = statistics.filter((statistic) =>\r\n                                                        statistic?.week === les?.sortWeek &&\r\n                                                        statistic?.weekday === les?.weekDay &&\r\n                                                        statistic?.section === les?.section\r\n                                                    );\r\n\r\n                                                    if (filteredStatistics.length === 0) {\r\n                                                        arr.push({\r\n                                                            time: addDays(les?.start, les?.weekDay),\r\n                                                            date: moment(addDays(les?.start, les?.weekDay)).format(\"DD.MM.YYYY\"),\r\n                                                            para: les?.section,\r\n                                                            name: les?.lessonName\r\n                                                        });\r\n                                                    }\r\n                                                });\r\n                                            });\r\n                                        }\r\n\r\n                                        return arr;\r\n                                    }\r\n\r\n                                    return {\r\n                                        studentName: item?.fullName,\r\n                                        login: item?.login,\r\n                                        nb: done(),\r\n                                        nb2: done2()\r\n                                    }\r\n                                }\r\n\r\n                                return item;\r\n\r\n                            })?.map((item, key) => {\r\n\r\n                                return (\r\n                                    <tr key={key}>\r\n                                        <td style={{textAlign: \"center\"}}>{key + 1}</td>\r\n                                        <td>{item?.fullName || item?.studentName}</td>\r\n                                        <td>\r\n                                            <BoxNb color={item?.entering ? \"green\" : \"red\"}>\r\n                                                {!item?.entering ? <AiFillCloseCircle/> : <AiFillCheckCircle/>}\r\n                                            </BoxNb>\r\n                                        </td>\r\n\r\n                                        {showAttendance && <td><BoxNb onClick={() => handleOpen(item)}>\r\n                                            {item?.nb2?.filter(i => i?.date <= moment().format('DD.MM.YYYY'))?.length}\r\n                                        </BoxNb></td>}\r\n\r\n                                        <td>\r\n                                            <BoxNb onClick={() => null}>\r\n                                                <AiFillInfoCircle/>\r\n                                            </BoxNb>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            }\r\n                            </tbody>\r\n\r\n                        </table>\r\n\r\n                    </Bodybox>\r\n                    {loadingStatistics === 'loading' &&\r\n                        <Box sx={{width: '100%'}}>\r\n                            <LinearProgress/>\r\n                        </Box>\r\n                    }\r\n                    {\r\n                        loadingStatistics !== 'loading' && educationStatistics.length === 0 && <Box>\r\n                            <EmptyDataImg w={200} h={180}/>\r\n                        </Box>\r\n                    }\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {/* NB modal */}\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={stylenb} component={stylenb2}>\r\n                    <CloseMyButtonForChild\r\n                        onClick={handleClose}\r\n                    ><RiCloseLine/></CloseMyButtonForChild>\r\n                    <OneSciencesdata data={oneSciencesNb}/>\r\n                </Box>\r\n            </Modal>\r\n\r\n            {/* Results */}\r\n            <Modal\r\n                open={open2}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={styleRes} component={stylenb2}>\r\n                    <CloseMyButtonForChild\r\n                        onClick={handleClose2}\r\n                    ><RiCloseLine/></CloseMyButtonForChild>\r\n                    <Results data={oneSciencesNb}/>\r\n                </Box>\r\n            </Modal>\r\n\r\n  {/* info subjects */}\r\n            <Modal\r\n                open={open3}\r\n                onClose={()=>setOpen3(false)}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={styleSubjectInfo} component={stylenb2}>\r\n                    <CloseMyButtonForChild\r\n                        onClick={()=>setOpen3(false)}\r\n                    ><RiCloseLine/></CloseMyButtonForChild>\r\n                   <SubjectInfo subjectInfo={subjectInfo}/>\r\n                </Box>\r\n            </Modal>\r\n\r\n            {/*menu table setting*/}\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                id=\"account-menu\"\r\n                open={openTableSetting}\r\n                onClose={handleCloseTableSetting}\r\n                PaperProps={{\r\n                    elevation: 0,\r\n                    sx: {\r\n                        p: 1,\r\n                        width: \"225px\",\r\n                        overflow: 'visible',\r\n                        filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                        mt: 1.5,\r\n                        '&:before': {\r\n                            content: '\"\"',\r\n                            display: 'block',\r\n                            position: 'absolute',\r\n                            top: 0,\r\n                            right: 14,\r\n                            width: 10,\r\n                            height: 10,\r\n                            bgcolor: 'background.paper',\r\n                            transform: 'translateY(-50%) rotate(45deg)',\r\n                            zIndex: 0,\r\n                        },\r\n                    },\r\n                }}\r\n                transformOrigin={{horizontal: 'right', vertical: 'top'}}\r\n                anchorOrigin={{horizontal: 'right', vertical: 'bottom'}}\r\n            >\r\n                <FormGroup>\r\n                    <FormControlLabel control={<Switch checked={showAttendance} onChange={handleShowAttendance}/>}\r\n                                      label=\"Show attendance\"/>\r\n                </FormGroup>\r\n\r\n            </Menu>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nconst Bodybox = styled.div`\r\n  margin-top: 25px;\r\n  width: 100%;\r\n  overflow-x: scroll;\r\n\r\n  table {\r\n    min-width: 700px;\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    overflow: hidden;\r\n\r\n    td, th {\r\n      border: 1px solid #ddd;\r\n      padding: 8px;\r\n      font-size: 15px;\r\n    }\r\n\r\n    th {\r\n      text-align: center;\r\n    }\r\n\r\n    tr {\r\n      &:nth-child(even) {\r\n        background-color: #fcf9f9;\r\n      }\r\n    }\r\n\r\n    th {\r\n      background-color: ${mainColor};\r\n      color: white;\r\n    }\r\n  }\r\n\r\n`;\r\nconst styleRes = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: \"60vw\",\r\n    bgcolor: 'background.paper',\r\n    border: \"none\",\r\n    borderRadius: 2,\r\n    boxShadow: 24,\r\n};\r\nconst styleSubjectInfo = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    overflow: 'hidden',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: \"350px\",\r\n    bgcolor: 'background.paper',\r\n    border: \"none\",\r\n    borderRadius: 2,\r\n    boxShadow: 24,\r\n};\r\nconst stylenb = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 500,\r\n    bgcolor: 'background.paper',\r\n    border: \"none\",\r\n    borderRadius: 2,\r\n    boxShadow: 24,\r\n};\r\nconst stylenb2 = styled.div`\r\n  ${extrasmall({\r\n    width: \"97% !important\"\r\n  })}\r\n`\r\nconst CloseMyButtonForChild = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #ffffff;\r\n  border-radius: 50%;\r\n  color: ${mainColor};\r\n  font-size: 26px;\r\n  border: none;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  z-index: 10;\r\n`;\r\n\r\nconst BoxNb = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 5px;\r\n  border: 1px solid #a6a6e0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  margin: 0 auto;\r\n  color: ${props => props.color ? props.color : \"#000\"};\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nconst CardInput = styled.div`\r\n  margin-top: 15px;\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 30px;\r\n  ${extrasmall({\r\n    justifyContent: \"center\"\r\n  })}\r\n`\r\n\r\nconst Container = styled.div`\r\n  padding: 10px;\r\n`\r\n\r\nexport default DekanJournal;"],"names":["TableResultCol","styled","TableResultRow","props","bg","fw","TableResult","Bodybox","TitleModal","mainColor","Container","data","studentResults","studentName","allGrade","percentage","grade","alph","Min","Max","find","item","map","key","allScore","year","semestr","subject","credit","styleRes","position","top","left","transform","width","bgcolor","border","borderRadius","boxShadow","styleSubjectInfo","overflow","stylenb","stylenb2","extrasmall","CloseMyButtonForChild","BoxNb","color","CardInput","justifyContent","useState","scien","setScien","groupSelect","setGroupSelect","open","setOpen","open2","setOpen2","open3","setOpen3","oneSciencesNb","setOneSciencesNb","educationYear","useSelector","state","eduYears","setEduYears","groups","setGroups","moment","format","valueDate","setValueDate","dekanat","loadingStatistics","educationYearStatistics","educationYearStatisticsLoadingStatus","educationStatistics","React","anchorEl","setAnchorEl","openTableSetting","Boolean","showAttendanceData","setShowAttendanceData","subjectInfo","setSubjectInfo","showAttendance","setShowAttendance","showAttendanceLoad","setShowAttendanceLoad","headers","getHeaders","dispatch","useDispatch","navigate","useNavigate","handleClose","useEffect","fetchEducationYears","axios","BASE_URL","then","res","obj","fetchEducationYear","catch","err","console","log","compareFullNames","a","b","nameA","fullName","toUpperCase","nameB","faculties","faculty","shortName","id","response","sort","o1","o2","name","resData","mergeArray","item1","item2","student","e","educationYearStatisticsFetching","dateConfig","i","day","isoWeek","educationYearStatisticsFetched","Box","sx","FormControl","fullWidth","InputLabel","Select","labelId","value","label","onChange","event","target","MenuItem","TextField","InputLabelProps","shrink","type","InputProps","inputProps","max","defaultValue","my","display","Button","onClick","variant","Card","CardContent","Tooltip","title","IconButton","currentTarget","size","ml","undefined","gap","alignItems","subjects","slice","section","index","lesson","arrow","placement","style","textAlign","isEnterClass","statistics","length","entering","Skeleton","margin","height","addDays","date","days","result","Date","setDate","getDate","login","nb","arr","lessons","flat","filter","statistic","week","sortWeek","weekday","weekDay","push","time","start","para","done","nb2","groupedLessons","reduce","groupedObjects","groupObjectsByName","Object","values","les","lessonName","done2","LinearProgress","EmptyDataImg","w","h","Modal","onClose","component","OneSciencesdata","SubjectInfo","Menu","PaperProps","elevation","p","mt","content","right","zIndex","transformOrigin","horizontal","vertical","anchorOrigin","FormGroup","FormControlLabel","control","Switch","checked"],"sourceRoot":""}