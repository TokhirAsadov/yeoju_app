{"version":3,"file":"static/js/6259.a0a8987c.chunk.js","mappings":"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","sources":["components/uquvbulimi/addStudent/ButtonFile.jsx","components/uquvbulimi/addStudent/AddStudents.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {AiOutlineCloudUpload} from \"react-icons/ai\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport {toast} from \"react-toastify\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport {Stack} from \"@mui/material\";\r\nimport {BASE_URL, mainColor, TOKEN, TokenType} from \"../../../utills/ServiceUrls\";\r\n\r\nconst ButtonFile = ({saveFileUrl, urlBase, getHistoryUploadFile}) => {\r\n    const [openBg, setOpenBg] = useState(false);\r\n    const [progress, setProgress] = useState(0)\r\n\r\n\r\n    const handleSendFiles = (e) => {\r\n        setOpenBg(true)\r\n        const file = e.target.files[0];\r\n        const url = BASE_URL + saveFileUrl;\r\n        const token = localStorage.getItem(TOKEN)\r\n        const formData = new FormData();\r\n        formData.append('file', file)\r\n        console.log(file)\r\n\r\n        axios.post(url, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                'Authorization': TokenType + token,\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            onUploadProgress: (event) => {\r\n                console.log(event)\r\n                const percentCompleted = Math.round((event.loaded * 100) / event.total)\r\n                console.log(`${event.loaded}kb | ${event.total}kb | ${percentCompleted}%`)\r\n                if (percentCompleted < 100) {\r\n                    setProgress(percentCompleted)\r\n                }\r\n            }\r\n\r\n        })\r\n            .then(res => {\r\n                setTimeout(() => {\r\n                    console.log(res)\r\n                    toast.success('Uploaded file successfully')\r\n                    getHistoryUploadFile()\r\n                    setProgress(100)\r\n                }, 1000)\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                toast.error('Upload failed')\r\n            })\r\n            .finally(() => setOpenBg(false))\r\n        //reset\r\n        e.target.value = null;\r\n\r\n    }\r\n    const downloadDecodedFile = () => {\r\n        const base64Data = urlBase;\r\n        const decodedData = atob(base64Data);\r\n        const uint8Array = new Uint8Array(decodedData.length);\r\n        for (let i = 0; i < decodedData.length; ++i) {\r\n            uint8Array[i] = decodedData.charCodeAt(i);\r\n        }\r\n        const blob = new Blob([uint8Array], {type: 'application/xlsx'});\r\n        const link = document.createElement('a');\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = 'file.xlsx';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n    console.log(progress)\r\n    return (\r\n        <Box display={'flex'} justifyContent={'end'}>\r\n\r\n            <Stack direction={'row'} spacing={2}>\r\n                <Button\r\n                    startIcon={<AiOutlineCloudUpload/>}\r\n                    variant={'contained'}\r\n                    component={'label'}\r\n                    onChange={handleSendFiles}\r\n                >\r\n                    import student file\r\n                    <input\r\n                        accept={\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"}\r\n                        type={'file'}\r\n                        hidden\r\n                    />\r\n                </Button>\r\n\r\n                <Button variant={'contained'} onClick={downloadDecodedFile}>\r\n                    example file\r\n                </Button>\r\n            </Stack>\r\n\r\n            <Backdrop\r\n                sx={{color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1}}\r\n                open={openBg}\r\n            >\r\n                <BackDropMain>\r\n                    <Box display={'flex'} justifyContent={'center'}>\r\n                        <CircularProgress color=\"inherit\"/>\r\n                    </Box>\r\n                </BackDropMain>\r\n            </Backdrop>\r\n        </Box>\r\n    );\r\n};\r\nconst BackDropMain = styled.div`\r\n    position: relative;\r\n    width: 95%;\r\n    height: 30px;\r\n    //background-color: #ccc;\r\n    border-radius: 7px;\r\n    overflow: hidden;\r\n\r\n    .progress-bar {\r\n        background-color: ${mainColor};\r\n        color: #fff;\r\n        text-align: center;\r\n        line-height: 30px;\r\n        width: 0;\r\n        position: absolute;\r\n        transition: width 0.1s;\r\n    }\r\n`\r\nexport default ButtonFile;","import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {STUDENT_UPLOAD_EXAMPLE} from \"../../../utills/fileBase64\";\r\nimport ButtonFile from \"./ButtonFile\";\r\nimport {BASE_URL, mainColor} from \"../../../utills/ServiceUrls\";\r\nimport axios from \"axios\";\r\n\r\nconst AddStudents = () => {\r\n    const saveFileUrl = '/student/uploadStudent'\r\n    const exampleFile = STUDENT_UPLOAD_EXAMPLE;\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const getHistoryUploadFile = () => {\r\n        setIsLoading(true)\r\n        axios.get(BASE_URL + '/getHistoryUploadFile')\r\n            .then(res => {\r\n                console.log(res.data)\r\n                setData([])\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        getHistoryUploadFile()\r\n    }, []);\r\n    return (\r\n        <Container>\r\n            <ButtonFile getHistoryUploadFile={getHistoryUploadFile} saveFileUrl={saveFileUrl} urlBase={exampleFile}/>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    padding: 1rem;\r\n\r\n    .MuiDataGrid-columnHeaderTitleContainer {\r\n        justify-content: center;\r\n    }\r\n`;\r\nexport default AddStudents;"],"names":["BackDropMain","styled","mainColor","saveFileUrl","urlBase","getHistoryUploadFile","useState","openBg","setOpenBg","progress","setProgress","console","log","Box","display","justifyContent","Stack","direction","spacing","Button","startIcon","variant","component","onChange","e","file","target","files","url","BASE_URL","token","localStorage","getItem","TOKEN","formData","FormData","append","axios","headers","TokenType","onUploadProgress","event","percentCompleted","Math","round","loaded","total","then","res","setTimeout","toast","catch","err","finally","value","accept","type","hidden","onClick","decodedData","atob","uint8Array","Uint8Array","length","i","charCodeAt","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","Backdrop","sx","color","zIndex","theme","drawer","open","CircularProgress","Container","exampleFile","STUDENT_UPLOAD_EXAMPLE","setIsLoading","setData","data","useEffect"],"sourceRoot":""}