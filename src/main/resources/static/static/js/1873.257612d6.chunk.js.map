{"version":3,"file":"static/js/1873.257612d6.chunk.js","mappings":"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","sources":["components/admin/building/Buildings.jsx","components/form/FormForItem.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {ADMIN, BASE_URL, getHeaders, mainColor} from \"../../../utills/ServiceUrls\";\r\nimport Spinner from \"../../spinner/Spinner\";\r\nimport {DataGrid, GridToolbar} from \"@mui/x-data-grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {RiCloseLine} from \"react-icons/ri\";\r\nimport FormForItem from \"../../form/FormForItem\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport ButtonMui from \"@mui/material/Button\";\r\nimport {BsBuildingAdd} from \"react-icons/bs\";\r\nimport {FaEdit, FaListUl} from \"react-icons/fa\";\r\nimport {MdDelete} from \"react-icons/md\";\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 365,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n    borderRadius:2,\r\n  p: 4,\r\n};\r\n\r\nconst Buildings = () => {\r\n\r\n  const [spinner,setSpinner] = useState(true);\r\n  const [updateItem,setUpdateItem] = useState({})\r\n\r\n  const columns = [\r\n    { field: 'id', headerName: 'ID', width: 40, editable: false },\r\n    { field: 'name', headerName: 'Name',type: 'string', width: 300, editable: false, },\r\n    { field: 'state', headerName: 'State',type: 'string', width: 240, editable: false,\r\n      renderCell: (cellValues) => {\r\n        return (\r\n          <Wrapper>\r\n            <ButtonMui\r\n                size={'small'}\r\n              startIcon={<FaEdit size={17}/>}\r\n              variant=\"contained\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                getUpdateItem(cellValues.id);\r\n              }}\r\n            >\r\n              Update\r\n            </ButtonMui>\r\n\r\n            <ButtonMui\r\n                size={'small'}\r\n                startIcon={<MdDelete size={17}/> }\r\n              variant=\"contained\"\r\n              color=\"error\"\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                checkDelete(cellValues.id);\r\n              }}\r\n            >\r\n              Delete\r\n            </ButtonMui>\r\n          </Wrapper>\r\n        );\r\n      }},\r\n  ];\r\n  const [data,setData] = useState([\r\n    { id: 1, name: \"Tohir Asadov\", state: \"123456\",},\r\n    { id: 2, name: \"Tohir Asadov\", state: \"123456\",},\r\n  ])\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  }\r\n  const { headers } = getHeaders();\r\n\r\n  const addModalOpen = () => {\r\n    setUpdateItem({...updateItem,id:null,name:null})\r\n    handleOpen();\r\n  }\r\n\r\n  const saveBuilding = (form) => {\r\n    if (form?.id===\"\"){\r\n      form.id = null\r\n    }\r\n\r\n    axios.post(BASE_URL+ADMIN.BUILDING_SAVE, form,{ headers })\r\n      .then(response => {\r\n        toast.success(\"Building success saved\");\r\n        getAllBuildings();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        toast.error(err.message);\r\n      });\r\n  }\r\n\r\n\r\n\r\n  const checkDelete = (id) => {\r\n    axios.get(BASE_URL+ADMIN.BUILDING_GET_ELEMENT_BY_ID+id, { headers })\r\n      .then(res => {\r\n        if (res.status===200){\r\n          if (window.confirm(\"Do you agree to delete \"+res.data?.obj?.name+\" building?\")){\r\n                                    onDelete(id);\r\n                                }\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const onDelete = (id) => {\r\n    axios.delete(BASE_URL+ADMIN.BUILDING_DELETE+id,{ headers })\r\n      .then(res => {\r\n        if (res.status === 204){\r\n          toast.success(\"Deleted building successfully!...\")\r\n          setData(data.filter(item => item.id!==id));\r\n          getAllBuildings();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  const getUpdateItem = (id) => {\r\n    axios.get(BASE_URL+ADMIN.BUILDING_GET_ELEMENT_BY_ID+id, { headers })\r\n      .then(res => {\r\n        setUpdateItem(res.data.obj);\r\n        if (res.data?.obj!==null){\r\n          handleOpen();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const onUpdate = (building) => {\r\n    axios.put(BASE_URL+ADMIN.BUILDING_UPDATE, building,{ headers })\r\n      .then(res => {\r\n        if (res.status===202) toast.success(\"Building updated successfully!...\")\r\n        getAllBuildings();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllBuildings()\r\n  },[])\r\n\r\n  const getAllBuildings = () => {\r\n    axios.get( BASE_URL+ADMIN.ALL_BUILDINGS,{headers})\r\n      .then(res => {\r\n        let item = res.data.obj.sort((a,b) => a.name > b.name ? 1 : -1);\r\n        setSpinner(false);\r\n        setData(item);\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n\r\n  return (\r\n    <Container>\r\n        <Box\r\n        sx={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center'\r\n        }}\r\n        >\r\n            <Title><FaListUl size={22}/> Table of Buildings</Title>\r\n            <ButtonMui\r\n                sx={{\r\n                    margin:'0 0 0 auto',\r\n                }}\r\n                variant={'contained'}\r\n                color={'success'}\r\n                onClick={addModalOpen}\r\n                endIcon={<BsBuildingAdd/>}\r\n            > Add Building</ButtonMui>\r\n        </Box>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"keep-mounted-modal-title\"\r\n        aria-describedby=\"keep-mounted-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <CloseButtonForChild onClick={handleClose}><RiCloseLine /></CloseButtonForChild>\r\n          <FormForItem\r\n            title={updateItem?.id!==null ? \"UPDATE BUILDING\" : \"ADD BUILDING\"}\r\n            formArr={[\r\n              {\r\n                label: \"id\",\r\n                name: \"id\",\r\n                placeholder:\"Enter id of build\",\r\n                type: \"text\",\r\n              },\r\n              {\r\n                label: \"add build\",\r\n                name: \"name\",\r\n                placeholder:\"Enter name of build\",\r\n                type: \"text\",\r\n              }\r\n            ]}\r\n            submitBtn={updateItem?.id!==null ? \"Update\":\"Save\"}\r\n            onSubmit={ (form)=> updateItem?.id!==null ? onUpdate(form) : saveBuilding(form)}\r\n            updateItem={updateItem}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n      <Body>\r\n        {\r\n          spinner ? <Spinner /> : <DataGrid\r\n            checkboxSelection\r\n            style={{width:\"500px!important\",minHeight:\"300px!important\"}}\r\n            columns={columns}\r\n            rows={ data }\r\n            components={{ Toolbar: GridToolbar }}/*** print and excel ****/\r\n            autoHeight\r\n            pageSize={50}\r\n            initialState={{ // hide items\r\n              ...data.initialState,\r\n              columns: {\r\n                columnVisibilityModel: {\r\n                  id: false,\r\n                  login: false,\r\n                  card:false,\r\n                  passport:false\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        }\r\n      </Body>\r\n    </Container>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst CloseButtonForChild = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center; \r\n  background-color: rgba(255,255,255,0.6);\r\n  border-radius: 50%;\r\n  color: ${mainColor};\r\n  font-size: 26px;\r\n  border: none;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n`;\r\n\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  gap: 10px;\r\n  margin: 5px!important;\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n  margin-top: 5px;\r\n  float: ${props => props.float};\r\n  width: ${props => props.width ? props.width : \"100%\"};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  color: #ffffff;\r\n  gap: 10px;\r\n  background-color: ${props => props.bg};\r\n  padding: ${props => props.padding ? props.padding : \"5px 10px\" };\r\n  font-size: 16px; \r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease; \r\n  letter-spacing: 1.2px;\r\n  \r\n  &:focus{\r\n    transform: scale(0.95);\r\n  }\r\n`;\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  margin: 10px 15px 20px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nconst Container = styled.div`\r\n   padding:10px!important; \r\n`;\r\n\r\n\r\nexport default Buildings;","import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {mainColor} from \"../../utills/ServiceUrls\";\r\nimport {FaEdit, FaSave} from \"react-icons/fa\";\r\n\r\n\r\nconst prepareForm = (formArr) => {\r\n    return formArr.reduce((r,v) => ({...r,[v.name]: \"\"}),{});\r\n}\r\n\r\nconst FormForItem = ({ title,formArr, submitBtn, onSubmit,updateItem, redirect }) => {\r\n    const initialForm = prepareForm(formArr);\r\n    const [form,setForm] = useState(prepareForm(formArr));\r\n\r\n    const onChangeHandler = (e) => setForm(p => ({...p,[e.target.name]: e.target.value}));\r\n\r\n    const onSubmitHandler = () => onSubmit(form, ()=> {\r\n            setForm(initialForm);\r\n        }\r\n    );\r\n\r\n    useEffect(()=>{\r\n      if (updateItem?.name) setForm({...form,id:updateItem?.id,name:updateItem?.name})\r\n      else  setForm({...form,id:updateItem?.id,nameEn:updateItem?.nameEn,nameRu:updateItem?.nameRu,nameUz:updateItem?.nameUz})\r\n    },[])\r\n\r\n    const hasRedirect = !!redirect;\r\n\r\n    return (\r\n        <SForm >\r\n            <Title>{title}</Title>\r\n                <InputWrapper >\r\n            {formArr?.map(({label,name,placeholder,type,value},index) => (\r\n                    <Input\r\n                      key={index}\r\n                        display={ name === \"id\" }\r\n                        id={name}\r\n                        name={name}\r\n                        type={type}\r\n                        value={form[name]}\r\n                        onChange={(e) => onChangeHandler(e)}\r\n                        placeholder={placeholder}\r\n                    />\r\n            ))}\r\n                </InputWrapper>\r\n            <Button\r\n                onClick={(e) => {\r\n                    e.preventDefault();\r\n                    onSubmitHandler();\r\n                }}\r\n            >{title.startsWith(\"UPDATE\") ? <FaEdit/> : <FaSave/>}\r\n                {submitBtn}\r\n            </Button>\r\n            { hasRedirect && (\r\n                <Redirect>\r\n                    <RedirectLabel>{redirect.label}&nbsp;</RedirectLabel>\r\n                    <RedirectLink to={redirect.link.to}>{redirect.link.label}</RedirectLink>\r\n                </Redirect>\r\n            )}\r\n        </SForm>\r\n    );\r\n};\r\n\r\nconst SForm = styled.form`\r\n  width: 100%;\r\n  color: ${mainColor};\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 1px solid ${mainColor};\r\n  margin: 0 auto;\r\n  height: 40px;\r\n  width: 200px;\r\n  padding-left: 10px!important;\r\n  border-radius: 5px;\r\n  display: ${props => props.display ? \"none\" : \"\"};\r\n  \r\n  &::placeholder{\r\n    font-size: 14px;\r\n    letter-spacing: 1.1px;\r\n    color: ${mainColor};\r\n  }\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n  width: 200px;\r\n  margin: 0 auto;\r\n  height: 30px;\r\n  margin-top: 30px!important;\r\n  background-color: ${mainColor};\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  font-size: 16px;\r\n  letter-spacing: 0.7px;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: all ease 0.4s;\r\n  border: none;\r\n  border-radius: 5px;\r\n  \r\n  &:focus{\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n\r\nconst Redirect = styled.div`\r\n  font-size: 12px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 10px!important;\r\n`;\r\n\r\nconst RedirectLabel = styled.span`\r\n\r\n`;\r\nconst Title = styled.h3`\r\n  font-size: 18px;\r\n  color: ${mainColor};\r\n  margin-bottom: 20px!important;\r\n`;\r\n\r\nconst RedirectLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: blue;\r\n`;\r\n\r\n\r\n\r\nexport default FormForItem;"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","borderRadius","p","CloseButtonForChild","styled","mainColor","Wrapper","Body","props","float","bg","padding","Title","Container","useState","spinner","setSpinner","updateItem","setUpdateItem","columns","field","headerName","editable","type","renderCell","cellValues","size","startIcon","variant","onClick","e","preventDefault","getUpdateItem","id","color","checkDelete","name","state","data","setData","React","open","setOpen","handleOpen","handleClose","headers","getHeaders","axios","BASE_URL","ADMIN","then","res","status","window","confirm","obj","onDelete","catch","err","console","log","toast","filter","item","getAllBuildings","useEffect","sort","a","b","sx","display","justifyContent","alignItems","margin","endIcon","onClose","title","formArr","label","placeholder","submitBtn","onSubmit","form","building","response","message","saveBuilding","checkboxSelection","minHeight","rows","components","Toolbar","GridToolbar","autoHeight","pageSize","initialState","columnVisibilityModel","login","card","passport","prepareForm","reduce","r","v","SForm","InputWrapper","Input","Button","Redirect","RedirectLabel","RedirectLink","Link","redirect","initialForm","setForm","nameEn","nameRu","nameUz","hasRedirect","map","index","value","onChange","target","onChangeHandler","startsWith","to","link"],"sourceRoot":""}