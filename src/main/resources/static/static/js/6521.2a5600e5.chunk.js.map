{"version":3,"file":"static/js/6521.2a5600e5.chunk.js","mappings":"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","sources":["components/form/SaveStaffForm.jsx","components/userStatistics/EnterAndOutTimesOfTeacher.jsx","components/userStatistics/UserStatistics.jsx","components/userStatistics/UsersMonthStatistics.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {BASE_URL, getHeaders, mainColor} from \"../../utills/ServiceUrls\";\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport axios from \"axios\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport {useSelector} from \"react-redux\";\r\nimport ButtonMui from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {extrasmall} from \"../../responsiv\";\r\nimport {FaEdit, FaSave} from \"react-icons/fa\";\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst prepareForm = (formArr) => {\r\n    return formArr.reduce((r,v) => v.name!==\"lessonDtos\" ? ({...r,[v.name]: \"\"}) : ({...r,[v.name]: []}),{});\r\n}\r\n\r\n\r\nconst SaveStaffForm = ({ title,formArr, submitBtn, onSubmit,updateItem, redirect,isSection }) => {\r\n\r\n  const user = useSelector(state => state?.user?.user);\r\n\r\n  const [userOptions,setUserOptions] = useState([])\r\n  const [positions,setPositions] = useState([])\r\n  const [spinner,setSpinner] = useState(true)\r\n\r\n  const initialForm = prepareForm(formArr);\r\n  const [form,setForm] = useState(prepareForm(formArr));\r\n\r\n  const onChangeHandler = (e,name) => setForm(p => ({...p,[name]: e}));\r\n\r\n\r\n  const onSubmitHandler = () => {\r\n    onSubmit(preForm(form));\r\n  }\r\n\r\n  const { headers } = getHeaders();\r\n\r\n  useEffect(()=>{\r\n\r\n    console.log(updateItem,\"item up\")\r\n\r\n    setForm({...form,id:updateItem?.id,userId:updateItem?.userId,sectionId:updateItem?.sectionId});\r\n    axios.get(BASE_URL+\"/dekanat/getUserForDekanSave?bool=\"+isSection,{ headers })\r\n      .then(res => {\r\n        console.log(res?.data,\"12\")\r\n        setUserOptions(res?.data?.obj?.users)\r\n        setPositions(res?.data?.obj?.positions)\r\n\r\n        if (updateItem?.positionId!==null && updateItem?.positionId!==\"\"){\r\n          setForm(prev => ({...prev,positionId: res?.data?.obj?.positions.find(item => item?.label===updateItem?.positionId)}))\r\n        }\r\n\r\n        setSpinner(false)\r\n        console.log(res?.data?.obj?.positions)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  },[])\r\n\r\n  const hasRedirect = !!redirect;\r\n\r\n  const handleSearch = (e,name) => {\r\n\r\n    if (e.length>2 && name===\"userId\") {\r\n      axios.get(BASE_URL + \"/user/getUserForTeacherSavingSearch?keyword=\" + e, {headers})\r\n        .then(res => {\r\n          setUserOptions(res?.data?.obj)\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n  const preForm = (formArr) => {\r\n\r\n\r\n    return {\r\n      id: formArr?.id,\r\n      sectionId: formArr?.sectionId,\r\n      userId: formArr?.userId?.value,\r\n      positionId: formArr?.positionId?.value\r\n    }\r\n  }\r\n\r\n  return (\r\n      <SForm >\r\n        {\r\n          spinner ? <Spinner /> :\r\n            <>\r\n              <Title>{title}</Title>\r\n                   <InputWrapper >\r\n                      {formArr?.map(({label,name,placeholder,type,value},index) => {\r\n                        if (type !== \"select\") {\r\n                          return <>\r\n                            <Input\r\n                            key={index}\r\n                            display={name === \"id\"}\r\n                            id={name}\r\n                            name={name}\r\n                            type={type}\r\n                            value={form[name]}\r\n                            onChange={(e) => onChangeHandler(e,name)}\r\n                            placeholder={placeholder}\r\n                          />\r\n                          </>\r\n                        } else {\r\n                          return <Wrapper>\r\n                            <Label htmlFor={name}>{label}</Label>\r\n                             <Select\r\n                                width='300px'\r\n                                closeMenuOnSelect={true}\r\n                                components={animatedComponents}\r\n                                isMulti={false}\r\n                                options={ name===\"userId\" ? userOptions : positions}\r\n                                onChange={e => onChangeHandler(e,name)}\r\n                                value={form[name]}\r\n                                name={name}\r\n                                isClearable={true}\r\n                                onInputChange={e => handleSearch(e,name)}\r\n                                isDisabled={user?.id===updateItem?.userId?.value && name===\"userId\"}\r\n                             />\r\n\r\n                          </Wrapper>\r\n                        }\r\n                      })}\r\n                  </InputWrapper>\r\n             <Box\r\n             sx={{mt:'20px',display: 'flex', justifyContent:'end'}}\r\n             >\r\n                 <ButtonMui\r\n                     variant={'contained'}\r\n                     onClick={(e) => {\r\n                         e.preventDefault();\r\n                         onSubmitHandler();\r\n                     }}\r\n                 >{submitBtn.startsWith(\"Update\") ? <FaEdit style={{ marginRight:\"10px\" }}/> : <FaSave style={{ marginRight:\"10px\" }}/>}\r\n                     {submitBtn}\r\n                 </ButtonMui>\r\n             </Box>\r\n              { hasRedirect && (\r\n                  <Redirect>\r\n                      <RedirectLabel>{redirect.label}&nbsp;</RedirectLabel>\r\n                      <RedirectLink to={redirect.link.to}>{redirect.link.label}</RedirectLink>\r\n                  </Redirect>\r\n              )}\r\n            </>\r\n        }\r\n      </SForm>\r\n  );\r\n};\r\n\r\nconst SForm = styled.form`\r\n  width: 100%;\r\n  border-radius: 10px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  gap: 20px;\r\n  \r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  & > div{\r\n    width: 250px!important;\r\n  }\r\n  ${extrasmall({\r\n    flexDirection: 'column',\r\n  })}\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 1px solid ${mainColor};\r\n  height: 40px;\r\n  width: 200px;\r\n  padding-left: 10px!important;\r\n  border-radius: 5px;\r\n  display: ${props => props.display ? \"none\" : \"block\"};\r\n\r\n  &::placeholder{\r\n    font-size: 14px;\r\n    letter-spacing: 1.1px;\r\n    color: ${mainColor};\r\n  }\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n\r\n\r\nconst Label = styled.label`\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Redirect = styled.div`\r\n  font-size: 12px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 10px!important;\r\n`;\r\n\r\nconst RedirectLabel = styled.span`\r\n\r\n`;\r\nconst Title = styled.h3`\r\n  color: ${mainColor};\r\n  margin-bottom: 20px!important;\r\n  text-align: start;\r\n`;\r\n\r\nconst RedirectLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: blue;\r\n`;\r\n\r\nexport default SaveStaffForm;","import React, {memo} from 'react';\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport {mainColor} from \"../../utills/ServiceUrls\";\r\nimport error from '../../utills/images/error.jpg'\r\n\r\nconst EnterAndOutTimesOfTeacher = ({time,item}) => {\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Dated>{moment(time).format(\" MMMM Do YYYY\")}</Dated>\r\n        <WeekDay>{moment(time).format(\" dddd\")}</WeekDay>\r\n      </Header>\r\n      <hr style={{background: mainColor,minHeight:\"2.5px\"}}/>\r\n      <Body>\r\n        {\r\n          item?.timeAsc ? <BodyWrapper>\r\n                  <BodyItemsWrapper>\r\n                    <BodyItem>Enter</BodyItem>\r\n                    <BodyItem>Out</BodyItem>\r\n                  </BodyItemsWrapper>\r\n                  <BodyItemsWrapper>\r\n                    <BodyItem>{moment(new Date(item?.timeAsc)?.toLocaleString('en-US', { timeZone: 'Asia/Tashkent' })).format(\"MMMM Do YYYY, HH:mm:ss\")}</BodyItem>\r\n                    <BodyItem>{moment(new Date(item?.timeDesc)?.toLocaleString('en-US', { timeZone: 'Asia/Tashkent' })).format(\"MMMM Do YYYY, HH:mm:ss\")}</BodyItem>\r\n                  </BodyItemsWrapper>\r\n                </BodyWrapper>\r\n            :\r\n            <BodyError>\r\n              <img src={error} alt=\"error\" width={\"300px\"} height={\"300px\"}/>\r\n            </BodyError>\r\n        }\r\n      </Body>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst BodyError = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  \r\n  &>h4{\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nconst BodyItem = styled.div`\r\n  flex: 1;\r\n  min-height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 1px solid ${mainColor};\r\n`;\r\n\r\nconst BodyItemsWrapper= styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n`;\r\n\r\nconst BodyWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Dated = styled.div`\r\n  font-size: 24px;\r\n`;\r\n\r\nconst WeekDay = styled.div`\r\n`\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 5px 10px!important;\r\n`;\r\n\r\nexport default memo(EnterAndOutTimesOfTeacher);","import React, {useEffect, useState} from 'react';\r\nimport moment from \"moment\";\r\nimport styled from \"styled-components\";\r\nimport {BASE_URL, getHeaders, mainColor} from \"../../utills/ServiceUrls\";\r\nimport Button from \"@mui/material/Button\"\r\nimport {GrFormNext, GrFormPrevious} from \"react-icons/gr\";\r\nimport axios from \"axios\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {Skeleton} from \"@mui/material\";\r\nimport {RiCloseLine} from \"react-icons/ri\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport EnterAndOutTimesOfTeacher from \"./EnterAndOutTimesOfTeacher\";\r\nimport {extrasmall, medium, small} from \"../../responsiv\";\r\nimport NoImage from '../../utills/images/no-picture.jpg'\r\nimport {FaCircleCheck, FaCircleXmark} from \"react-icons/fa6\";\r\n\r\nconst UserStatistics = ({userName, userId, date, photo, forUser}) => {\r\n\r\n    const [time, setTime] = useState(date);\r\n    const [days, setDays] = useState([]);\r\n\r\n    const [data, setData] = useState(null);\r\n    const [getItems, setGetItems] = useState(false);\r\n\r\n    const [timeModal, setTimeModal] = useState(null);\r\n    const [timeModalItem, setTimeModalItem] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = (item) => {\r\n        setTimeModal(new Date(time.getFullYear(), time.getMonth(), item))\r\n        setTimeModalItem(data[item]);\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const {headers} = getHeaders();\r\n\r\n    const getDay = (date) => {\r\n        return date.getFullYear() + \".\" + (date.getMonth() + 1) + \".\" + date.getDate()\r\n    }\r\n\r\n\r\n\r\n    const prevMonth = () => {\r\n        setGetItems(false);\r\n        setTime(new Date(time.getFullYear(), time.getMonth() - 1))\r\n    }\r\n\r\n    const nextMonth = () => {\r\n        setGetItems(false);\r\n        setTime(new Date(time.getFullYear(), time.getMonth() + 1))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDays(() => Array.from(Array(moment(time).daysInMonth()).keys()).map(i => i + 1))\r\n        getData();\r\n    }, [time])\r\n\r\n    const counter = () => {\r\n        let count = 0;\r\n        data && days?.map(item => {\r\n            if (data[item] != null) {\r\n                count++;\r\n            }\r\n        })\r\n        return count;\r\n    }\r\n\r\n    const getData = async () => {\r\n        // console.log(getDay(time), \"axios\")\r\n        await axios.get(`${BASE_URL}/kafera-mudiri/getStatisticss?userId=${userId}&date=${getDay(time)}`, {headers})\r\n            .then(res => {\r\n                setData(res?.data?.obj);\r\n                setGetItems(true);\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container style={{width: `${forUser ? forUser : \"100%\"}`}}>\r\n                <ImageWrapper>\r\n                    <Imgbox>\r\n                        <img\r\n                            src={photo ? BASE_URL + \"/attachment/download/\" + photo : NoImage}\r\n                            style={{width: \"100%\"}}\r\n                            alt={userName}\r\n                        />\r\n                    </Imgbox>\r\n\r\n                    <UserName>{userName}</UserName>\r\n                </ImageWrapper>\r\n                <hr/>\r\n                <Wrapper>\r\n                    <Month>\r\n                        <Button style={buttonStyles} onClick={prevMonth}><GrFormPrevious/></Button>\r\n                        <input type=\"month\" id=\"start\" name=\"start\"\r\n                               min=\"2022-04\"\r\n                               value={moment(time).format(\"YYYY-MM\")}\r\n                               onChange={e => setTime(new Date(e.target.value))}\r\n                               style={monthInput}\r\n                        />\r\n                        <Button style={buttonStyles} onClick={nextMonth}><GrFormNext/></Button>\r\n                    </Month>\r\n                    {\r\n                        getItems ?\r\n                            <Tablebox>\r\n                                <WrapperDay>\r\n                                    {\r\n                                        days?.map(item => {\r\n                                            return <Day key={item}>\r\n                                                <NumberDay>\r\n                                                    {item}\r\n                                                    <WeekDay>{moment(new Date(time.getFullYear(), time.getMonth(), item)).format(\"ddd\")}</WeekDay>\r\n                                                </NumberDay>\r\n                                                <StatisticBox color={data[item]} onClick={() => handleOpen(item)}>\r\n                                                    {\r\n                                                        new Date(time.getFullYear(), time.getMonth(), item) <= new Date() ?\r\n                                                            data[item] ? <FaCircleCheck /> : <FaCircleXmark /> : \"\"\r\n                                                    }\r\n                                                </StatisticBox>\r\n                                            </Day>\r\n                                        })\r\n                                    }\r\n                                    <Day>\r\n                                        <NumberDay>\r\n                                            {'\\u2211'}\r\n                                        </NumberDay>\r\n                                        <StatisticBox color={counter() !== 0} bg={counter() !== 0 ? \"green\" : \"red\"}>\r\n                                            {counter()}\r\n                                        </StatisticBox>\r\n                                    </Day>\r\n                                </WrapperDay>\r\n                            </Tablebox>\r\n                            : <Skeleton animation=\"wave\" width={\"100%\"} height={120}/>\r\n                    }\r\n                </Wrapper>\r\n\r\n                <Modal\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"keep-mounted-modal-title\"\r\n                    aria-describedby=\"keep-mounted-modal-description\"\r\n                >\r\n                    <Box sx={styleTable} component={Stylemodal}>\r\n                        <CloseMyButtonForChild onClick={handleClose}><RiCloseLine/></CloseMyButtonForChild>\r\n                        <EnterAndOutTimesOfTeacher time={timeModal} item={timeModalItem}/>\r\n                    </Box>\r\n                </Modal>\r\n\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nconst CloseMyButtonForChild = styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    border-radius: 50%;\r\n    color: ${mainColor};\r\n    font-size: 26px;\r\n    border: none;\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n`;\r\nconst Imgbox = styled.div`\r\n    width: 70px;\r\n    height: 70px;\r\n    overflow: hidden;\r\n    border-radius: 100%;\r\n    ${extrasmall({\r\n        width: \"60px\",\r\n        height: \"60px\"\r\n    })}\r\n`\r\nconst UserName = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 26px;\r\n    color: ${mainColor};\r\n    ${extrasmall({\r\n        fontSize: 15,\r\n    })}\r\n`\r\n\r\nconst ImageWrapper = styled.div`\r\n    display: flex;\r\n    gap: 20px;\r\n`;\r\n\r\nconst StatisticBox = styled.button`\r\n    width: 100%;\r\n    min-height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    border: 1px solid ${mainColor};\r\n    color: ${props => props.bg ? '#fff' : props.color ? 'green' : 'red'};\r\n    background-color: ${props => props.bg ? props.bg : \"#fff\"};\r\n    transition: 0.1s all ease-in;\r\n\r\n    &:hover {\r\n        filter: brightness(.7);\r\n    }\r\n\r\n    &:focus {\r\n        transform: scale(0.95);\r\n    }\r\n`;\r\nconst Tablebox = styled.div`\r\n    width: 100%;\r\n    overflow-x: scroll;\r\n`\r\nconst WeekDay = styled.span`\r\n    font-size: 12px;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst NumberDay = styled.div`\r\n    width: 100%;\r\n    min-height: 40px;\r\n    border: 1px solid ${mainColor};\r\n    display: flex;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst Day = styled.div`\r\n    width: 50px;\r\n    height: 80px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst WrapperDay = styled.div`\r\n    display: flex;\r\n    width: 1200px;\r\n    //justify-content: center;\r\n    margin: 30px auto;\r\n`;\r\n\r\nconst Month = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 10px;\r\n    font-size: 24px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    margin-top: 50px !important;\r\n`\r\n\r\nconst Container = styled.div`\r\n    width: 100% !important;\r\n    padding: 5px 10px;\r\n    ${extrasmall({\r\n        padding: 0,\r\n    })}\r\n`;\r\n\r\nconst buttonStyles = {\r\n    width: \"40px!important\",\r\n    height: \"40px!important\",\r\n    fontSize: \"24px\",\r\n}\r\n\r\nconst monthInput = {\r\n    border: \"none\",\r\n    background: \"transparent\"\r\n}\r\n\r\nconst styleTable = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: \"50vw\",\r\n    minHeight: \"50vh\",\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    borderRadius: 3,\r\n    p: 4,\r\n};\r\n\r\nconst Stylemodal = styled.div`\r\n    ${medium({\r\n        width: \"70vw !important\",\r\n    })}\r\n    ${small({\r\n        width: \"70vw !important\",\r\n    })}\r\n    ${extrasmall({\r\n        width: \"90vw !important\",\r\n        minHeight: \"70vh !important\",\r\n    })}\r\n`\r\nexport default UserStatistics;","import React, {useEffect, useState} from 'react';\r\nimport moment from \"moment\";\r\nimport styled from \"styled-components\";\r\nimport {BASE_URL, getHeaders, mainColor} from \"../../utills/ServiceUrls\";\r\nimport Button from \"@mui/material/Button\"\r\nimport {GrFormNext, GrFormPrevious} from \"react-icons/gr\";\r\nimport axios from \"axios\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {Skeleton} from \"@mui/material\";\r\nimport {RiCloseLine} from \"react-icons/ri\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport EnterAndOutTimesOfTeacher from \"./EnterAndOutTimesOfTeacher\";\r\nimport {useSelector} from \"react-redux\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport {motion as m} from 'framer-motion'\r\nimport {extrasmall, small} from \"../../responsiv\";\r\nimport * as XLSX from 'xlsx'\r\nimport {FaCircleCheck, FaCircleXmark} from \"react-icons/fa6\";\r\n\r\nconst UsersMonthStatistics = ({userName, kafedraId, date, forUser, url, isTeacher, colName}) => {\r\n\r\n    const [time, setTime] = useState(date);\r\n    const [days, setDays] = useState([]);\r\n\r\n    const [data, setData] = useState(null);\r\n\r\n    const [timeModal, setTimeModal] = useState(null);\r\n    const [timeModalItem, setTimeModalItem] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = (item, index) => {\r\n        setTimeModal(new Date(time.getFullYear(), time.getMonth(), item))\r\n        setTimeModalItem(data[index]?.monthly[item]);\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const {headers} = getHeaders();\r\n\r\n    const getDay = (date) => {\r\n        return date.getFullYear() + \".\" + (date.getMonth() + 1) + \".\" + date.getDate()\r\n    }\r\n\r\n    const toDate = (date) => {\r\n        return new Date(date);\r\n    }\r\n\r\n    const prevMonth = () => {\r\n        setTime(new Date(time.getFullYear(), time.getMonth() - 1))\r\n    }\r\n\r\n    const nextMonth = () => {\r\n        setTime(new Date(time.getFullYear(), time.getMonth() + 1))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDays(() => Array.from(Array(moment(time).daysInMonth()).keys()).map(i => i + 1))\r\n        getData();\r\n    }, [time])\r\n\r\n    const [counts, setCounts] = useState([])\r\n\r\n    const counter = () => {\r\n        data?.map(i => {\r\n            let count = 0;\r\n            days?.map(item => {\r\n                if (i?.monthly[item] != null) {\r\n                    count++;\r\n                }\r\n            })\r\n            setCounts(prevState => [...prevState, count])\r\n            return i\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setData(isTeacher ? teachers : staffs);\r\n    }, [])\r\n\r\n    const [check, setCheck] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setCounts([]);\r\n        counter();\r\n    }, [check])\r\n\r\n    const [spinner, setSpinner] = useState(true);\r\n    const getData = async () => {\r\n        setSpinner(true)\r\n        await axios.get(`${BASE_URL + url + kafedraId}&date=${getDay(time)}`, {headers})\r\n            .then(res => {\r\n                setData(res?.data?.obj?.all);\r\n                setSpinner(false)\r\n                setCheck(p => !p)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const teachers = useSelector(state => state?.rektorTeachers?.rektorTeachers?.allTeachers)\r\n    const staffs = useSelector(state => state?.rektorStaffs?.rektorStaffs?.allStaffs)\r\n\r\n    const exportToExcel = () => {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        const exportData = [\r\n            [colName, ...days.map(day => day.toString()), 'Total'], // Add 'Total' column header\r\n            ...data.map(i => {\r\n                const rowData = [i.fullName];\r\n                let total = 0;\r\n\r\n                days.forEach(item => {\r\n                    const date = new Date(time.getFullYear(), time.getMonth(), item);\r\n                    if (date <= new Date()) {\r\n                        const value = i.monthly[item] ? '1' : '0';\r\n                        rowData.push(value);\r\n                        total += parseInt(value);\r\n                    } else {\r\n                        rowData.push('');\r\n                    }\r\n                });\r\n                rowData.push(total.toString());\r\n                return rowData;\r\n            }),\r\n        ];\r\n\r\n        const ws = XLSX.utils.aoa_to_sheet(exportData);\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n        XLSX.writeFile(wb, 'exported_data.xlsx');\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container style={{width: `${forUser ? forUser : \"100%\"}`}}>\r\n      <ImageWrapper>\r\n        <UserName>{userName}</UserName>\r\n      </ImageWrapper>\r\n      <hr/>\r\n\r\n      <Month>\r\n        <Button style={buttonStyles} onClick={prevMonth}><GrFormPrevious/></Button>\r\n        <input type=\"month\" id=\"start\" name=\"start\"\r\n               min=\"2022-04\"\r\n               value={moment(time).format(\"YYYY-MM\")}\r\n               onChange={e => setTime(new Date(e.target.value))}\r\n               style={monthInput}\r\n        />\r\n        <Button style={buttonStyles} onClick={nextMonth}><GrFormNext /></Button>\r\n      </Month>\r\n\r\n      <Wrapper>\r\n        {\r\n          !spinner\r\n            ?\r\n            <>\r\n              <WrapperDay>\r\n                {\r\n                  days?.map((item,index) => {\r\n                    return <>\r\n                    {item===1 && <Teacher sz={true} key={index}>{colName}</Teacher>}\r\n                    <Day key={item}>\r\n                      <NumberDay>\r\n                        {item}\r\n                        <WeekDay>{moment(new Date(time.getFullYear(), time.getMonth(), item)).format(\"ddd\")}</WeekDay>\r\n                      </NumberDay>\r\n                    </Day>\r\n                    {item===days?.length && <Day>\r\n                      <NumberDay>\r\n                        {'\\u2211'}\r\n                      </NumberDay>\r\n                    </Day>}\r\n                    </>\r\n                  })\r\n                }\r\n              </WrapperDay>\r\n              <SimpleBar style={scrollStyle}>\r\n                {\r\n                  data?.map((i,index) => {\r\n                    return <WrapperDay>\r\n                      <Teacher>{i.fullName}</Teacher>\r\n                      {\r\n                        days?.map(item => {\r\n                          return <>\r\n                          <Day key={item}>\r\n                            <StatisticBox color={i.monthly[item]} onClick={() => handleOpen(item,index)}>\r\n                              {\r\n                                new Date(time.getFullYear(), time.getMonth(), item) <= new Date() ?\r\n                                  i.monthly[item] ? <FaCircleCheck /> : <FaCircleXmark />: \"\"\r\n                              }\r\n                            </StatisticBox>\r\n                          </Day>\r\n                            {item===days?.length && <Day>\r\n                              <StatisticBox color={counts[index] !== 0} bg={counts[index] !== 0 ? \"green\" : \"red\"}>\r\n                                {counts[index]}\r\n                              </StatisticBox>\r\n                            </Day>}\r\n                          </>\r\n                        })\r\n                      }\r\n                    </WrapperDay>\r\n                  })\r\n                }\r\n              </SimpleBar>\r\n            </>\r\n            :\r\n              <Skeleton animation=\"wave\" width={forUser ? forUser:\"100%\"} height={120}/>\r\n        }\r\n      </Wrapper>\r\n      <Box display={'flex'} justifyContent={'end'} mt={1}>\r\n        <Button onClick={exportToExcel} variant={'contained'} >Export</Button>\r\n      </Box>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"keep-mounted-modal-title\"\r\n        aria-describedby=\"keep-mounted-modal-description\"\r\n      >\r\n        <Box sx={styleTable} component={stylecomp} >\r\n          <CloseMyButtonForChild onClick={handleClose}\r\n                                 whileHover={{ rotate: 180, scale: 1.1 }}\r\n                                 whileTap={{ scale: 0.9 }}\r\n                                 transition={{ duration: 0.3 }}\r\n          ><RiCloseLine /></CloseMyButtonForChild>\r\n          <EnterAndOutTimesOfTeacher time={timeModal} item={timeModalItem}/>\r\n        </Box>\r\n      </Modal>\r\n\r\n    </Container>\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst scrollStyle = {\r\n    width: \"1200px\",\r\n    maxHeight: 318,\r\n    margin: \"0 auto\"\r\n}\r\n\r\nconst Teacher = styled.div`\r\n  flex: 3;\r\n  display: flex;\r\n  font-size: ${props => props.sz ? \"12px\" : \"8px\"};\r\n  border: 1px solid ${mainColor};\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5px 10px !important;\r\n`\r\n\r\nconst CloseMyButtonForChild = styled(m.button)`\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${mainColor};\r\n  border-radius: 50%;\r\n  color: white;\r\n  font-size: 26px;\r\n  border: none;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n`;\r\n\r\nconst UserName = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 26px;\r\n  color: ${mainColor};\r\n`\r\n\r\nconst ImageWrapper = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n`;\r\n\r\nconst StatisticBox = styled.button`\r\n  width: 100%;\r\n  min-height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  border: 1px solid ${mainColor};\r\n  color: ${props => props.bg ? '#fff' : props.color ? 'green' : 'red'};\r\n  background-color: ${props => props.bg ? props.bg : \"#fff\"};\r\n  transition: 0.1s all ease-in;\r\n\r\n  &:hover {\r\n    filter: brightness(.7);\r\n  }\r\n\r\n  &:focus {\r\n    transform: scale(0.95);\r\n  }\r\n`;\r\n\r\nconst WeekDay = styled.span`\r\n  font-size: 12px;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst NumberDay = styled.div`\r\n  width: 100%;\r\n  min-height: 40px;\r\n  border: 1px solid ${mainColor};\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Day = styled.div`\r\n  flex: 1;\r\n  height: 47px;\r\n  display: flex;\r\n  //flex-direction: column;\r\n`;\r\n\r\nconst WrapperDay = styled.div`\r\n  display: flex;\r\n  width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Month = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  overflow: scroll;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 25px !important;\r\n`\r\n\r\nconst Container = styled.div`\r\n  width: 800px;\r\n  padding: 5px 10px !important;\r\n`;\r\n\r\nconst buttonStyles = {\r\n    width: \"40px!important\",\r\n    height: \"40px!important\",\r\n    fontSize: \"24px\",\r\n}\r\n\r\nconst monthInput = {\r\n    border: \"none\"\r\n}\r\n\r\nconst styleTable = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: \"50vw\",\r\n    minHeight: 500,\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    borderRadius: 3,\r\n    p: 4,\r\n};\r\nconst stylecomp = styled.div`\r\n  ${small({\r\n    width: \"80vw !important\"\r\n  })}\r\n  ${extrasmall({\r\n    width: \"90vw !important\"\r\n  })}\r\n`\r\n\r\n\r\nexport default UsersMonthStatistics;"],"names":["animatedComponents","makeAnimated","prepareForm","formArr","reduce","r","v","name","SForm","styled","mainColor","InputWrapper","Wrapper","extrasmall","flexDirection","Input","props","display","Label","Redirect","RedirectLabel","Title","RedirectLink","Link","title","submitBtn","onSubmit","updateItem","redirect","isSection","user","useSelector","state","useState","userOptions","setUserOptions","positions","setPositions","spinner","setSpinner","form","setForm","onChangeHandler","e","p","headers","getHeaders","useEffect","console","log","id","userId","sectionId","axios","BASE_URL","then","res","data","obj","users","positionId","prev","find","item","label","catch","err","hasRedirect","preForm","value","map","index","placeholder","type","onChange","htmlFor","width","closeMenuOnSelect","components","isMulti","options","isClearable","onInputChange","length","handleSearch","isDisabled","sx","mt","justifyContent","variant","onClick","preventDefault","startsWith","style","marginRight","to","link","EnterAndOutTimesOfTeacher","time","Container","Header","Dated","moment","format","WeekDay","background","minHeight","Body","timeAsc","BodyWrapper","BodyItemsWrapper","BodyItem","Date","toLocaleString","timeZone","timeDesc","BodyError","src","error","alt","height","memo","CloseMyButtonForChild","Imgbox","UserName","fontSize","ImageWrapper","StatisticBox","bg","color","Tablebox","NumberDay","Day","WrapperDay","Month","padding","buttonStyles","monthInput","border","styleTable","position","top","left","transform","bgcolor","boxShadow","borderRadius","Stylemodal","medium","small","userName","date","photo","forUser","setTime","days","setDays","setData","getItems","setGetItems","timeModal","setTimeModal","timeModalItem","setTimeModalItem","open","setOpen","handleClose","getDay","getFullYear","getMonth","getDate","Array","from","daysInMonth","keys","i","getData","counter","count","NoImage","min","target","handleOpen","animation","onClose","component","scrollStyle","maxHeight","margin","Teacher","sz","m","stylecomp","kafedraId","url","isTeacher","colName","counts","setCounts","teachers","staffs","check","setCheck","monthly","prevState","all","rektorTeachers","allTeachers","rektorStaffs","allStaffs","fullName","exportData","day","toString","rowData","total","forEach","push","parseInt","ws","XLSX","wb","whileHover","rotate","scale","whileTap","transition","duration"],"sourceRoot":""}