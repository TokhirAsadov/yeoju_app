{"version":3,"file":"static/js/9858.89d58b69.chunk.js","mappings":"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","sources":["components/super_admin/faculty/FacultyService.jsx","../node_modules/@mui/icons-material/CheckBox.js","../node_modules/@mui/icons-material/CheckBoxOutlineBlank.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {BASE_URL, getHeaders, mainColor} from \"../../../utills/ServiceUrls\";\r\nimport axios from \"axios\";\r\nimport {FiEdit} from \"react-icons/fi\";\r\nimport {BsTrash} from \"react-icons/bs\";\r\nimport Spinner from \"../../spinner/Spinner\";\r\nimport {DataGrid, GridToolbar} from \"@mui/x-data-grid\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {RiCloseLine} from \"react-icons/ri\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {FaSave} from \"react-icons/fa\";\r\nimport {motion as m} from \"framer-motion\";\r\nimport {extrasmall, medium, small} from \"../../../responsiv\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport makeAnimated from \"react-select/animated\";\r\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\r\nimport {toast} from \"react-toastify\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {Card, CardContent} from \"@mui/material\";\r\n\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\"/>;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\"/>;\r\n\r\nconst FacultyService = () => {\r\n\r\n  const { headers } = getHeaders();\r\n  const [spinner,setSpinner] = useState(false);\r\n  const [directions,setDirections] = useState([]);\r\n  const [school,setSchool] = useState(null);\r\n  const [schools,setSchools] = useState([]);\r\n  const [openCreate, setOpenCreate] = useState(false);\r\n  const [updateDirection, setUpdateDirection] = useState({\r\n    id: null,\r\n    name: null,\r\n    shortName: null,\r\n    schoolCode: null,\r\n    school: null,\r\n  })\r\n\r\n  const columnsDirection = [\r\n    {field: 'id', headerName: 'ID', width: 300, editable: false},\r\n    {field: 'name',headerName: 'Name',type: 'string',width: 300,editable: false,  },\r\n    {field: 'shortName',headerName: 'Short name',type: 'string',width: 120,editable: false,  },\r\n    {field: 'school',headerName: 'School',type: 'string',width: 300,editable: false,  },\r\n    {field: 'service',headerName: 'Service',type: 'string',width: 100,editable: false,\r\n      renderCell: (cellValues) => {\r\n        return (\r\n          <Wrapper2>\r\n\r\n            <BtnEditPosition\r\n              color={mainColor}\r\n              onClick={() => handleOpenEdit(cellValues?.row?.id,cellValues?.row?.school)}\r\n            >\r\n              <FiEdit/>\r\n            </BtnEditPosition>\r\n\r\n            <BtnEditPosition\r\n              color={\"red\"}\r\n              onClick={() => onDeleted(cellValues?.row?.id,cellValues?.row?.name)}\r\n            >\r\n              <BsTrash/>\r\n            </BtnEditPosition>\r\n\r\n          </Wrapper2>\r\n        );\r\n      }\r\n    },\r\n  ];\r\n\r\n\r\n\r\n\r\n  const openCreateModal = () => {\r\n    setOpenCreate(true);\r\n    setSchool(null);\r\n    setUpdateDirection({\r\n      id: null,\r\n      name: null,\r\n      shortName: null,\r\n      schoolCode: null,\r\n      school: null,\r\n    });\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpenCreate(false)\r\n  }\r\n\r\n  const fetchSchools = () => {\r\n    axios.get(BASE_URL+\"/school/findAll\",{headers})\r\n      .then(res => {\r\n        setSchools(res?.data?.obj?.map(i=>({label:i?.nameEn,value:i?.code})))\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const fetchDirections = () => {\r\n    axios.get(BASE_URL+\"/faculty/getDirectionsOfFaculty\",{headers})\r\n      .then(res => {\r\n        setDirections(res?.data?.obj)\r\n        setSpinner(false)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const handleChangeValue = (e) => {\r\n    setUpdateDirection(prev => ({...prev, [e.target.name]: e.target.value}));\r\n  };\r\n\r\n\r\n  useEffect(()=>{\r\n    fetchSchools()\r\n    fetchDirections();\r\n  },[])\r\n\r\n\r\n  useEffect(()=>{\r\n    console.log(directions,\"change directions\")\r\n    console.log(schools,\"schools\")\r\n  },[directions])\r\n\r\n  useEffect(()=>{\r\n    console.log(updateDirection,\"update directions\")\r\n  },[updateDirection])\r\n\r\n  useEffect(()=>{\r\n    spinner && fetchDirections()\r\n  },[spinner])\r\n\r\n\r\n\r\n  const handleOpenEdit = (id,schoolName) => {\r\n    schools?.length > 0 && setSchool(prevState => ({\r\n\r\n        ...schools?.find(school => school?.label===schoolName)\r\n      }))\r\n\r\n    schools?.length > 0 && setUpdateDirection(prevState => ({\r\n\r\n      ...directions?.find(direction => direction?.id===id),\r\n      schoolCode: schools?.find(school => school?.label===schoolName)?.value\r\n    }))\r\n\r\n    setOpenCreate(true)\r\n  }\r\n\r\n  const onDeleted = (id,name) => {\r\n\r\n    setUpdateDirection({\r\n      id: null,\r\n      shortName: null,\r\n      schoolCode: null,\r\n      school: null,\r\n    });\r\n\r\n    if (window.confirm(`Do you want to delete ${name}?`)) {\r\n      axios.delete(`${BASE_URL}/faculty/deleteFaculty/${id}`, {headers})\r\n        .then(res => {\r\n          setDirections(directions?.filter(i=> i?.id!==id));\r\n          toast.success(res?.data?.message, {\r\n            position: \"top-right\",\r\n            autoClose: false,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n          })\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n      toast.success(\"Deleted successfully\", {\r\n        position: \"top-right\",\r\n        autoClose: false,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"colored\",\r\n      })\r\n\r\n\r\n    }\r\n  }\r\n\r\n  const onSaveSchool = (direction) => {\r\n    delete direction.id\r\n    delete direction.school\r\n    console.log(direction,\" for save direction\")\r\n\r\n\r\n    Object.values( direction ).every(\r\n      value => value !== null && value\r\n    )\r\n      ?\r\n      axios.post(BASE_URL+\"/faculty/saveDirection\", {...direction,id:null},{headers})\r\n        .then(res => {\r\n          setOpenCreate(false)\r\n          setSchool(null)\r\n          fetchDirections();\r\n          toast.success(`${direction?.name} direction has been saved successfully!.`)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          toast.error(err?.response?.data?.message);\r\n        })\r\n      :toast.warning(\"Empty any field..\");\r\n  }\r\n\r\n  const onUpdateSchool = (direction) => {\r\n    delete direction.school\r\n    Object.values( direction ).every(\r\n      value => value !== null && value\r\n    )\r\n      ?\r\n      axios.post(BASE_URL+\"/faculty/saveDirection\",direction,{headers})\r\n        .then(res => {\r\n          setOpenCreate(false)\r\n          fetchDirections();\r\n          toast.success(`${direction?.name} direction has been updated successfully!.`)\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n          toast.error(err?.response?.data?.message);\r\n        })\r\n      :toast.warning(\"Empty any field..\");\r\n  }\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Box display={'flex'} justifyContent={'end'}>\r\n        <Button sx={{width:\"220px\"}} variant={'contained'}\r\n             onClick={openCreateModal}\r\n        >Create new direction</Button>\r\n      </Box>\r\n\r\n      {spinner && directions?.length>0 ? <Spinner/> : (\r\n          <Card>\r\n            <CardContent>\r\n              <DataGrid\r\n                  checkboxSelection\r\n                  sx={{minHeight: \"670px!important\",overflow:'scroll'}}\r\n                  columns={columnsDirection}\r\n                  rows={directions}\r\n                  components={{Toolbar: GridToolbar}}/*** print and excel ****/\r\n                  pageSize={10}\r\n                  initialState={{ // hide items\r\n                    ...directions.initialState,\r\n                    columns: {\r\n                      columnVisibilityModel: {\r\n                        id: false,\r\n                      },\r\n                    },\r\n                  }}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n      )}\r\n\r\n      {/*** ================= add  school =================== ***/}\r\n      <Modal\r\n        open={openCreate}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"keep-mounted-modal-title\"\r\n        aria-describedby=\"keep-mounted-modal-description\"\r\n      >\r\n        <Box sx={styleEdit} component={styledEdit2}>\r\n          <CloseMyButtonForChild onClick={handleClose}\r\n                                 whileHover={{rotate: 180, scale: 1.1}}\r\n                                 whileTap={{scale: 0.9}}\r\n                                 transition={{duration: 0.3}}\r\n          ><RiCloseLine/></CloseMyButtonForChild>\r\n          <h3 style={{color: `${mainColor}`}}>{(updateDirection?.id===null || !updateDirection?.id) ? \"Create new direction\" : \"Update direction\"}</h3>\r\n\r\n\r\n          <WrapperScroll>\r\n                    <TextField  id=\"outlined-basic\" label=\"Name\" variant=\"outlined\"\r\n                               value={updateDirection?.name}\r\n                               name={\"name\"}\r\n                               onChange={handleChangeValue}\r\n                    />\r\n                    <TextField  id=\"outlined-basic\" label=\"Short name\" variant=\"outlined\"\r\n                               value={updateDirection?.shortName}\r\n                               name={\"shortName\"}\r\n                               onChange={handleChangeValue}\r\n                    />\r\n                    <Autocomplete\r\n                      id=\"checkboxes-tags-demo\"\r\n                      options={schools}\r\n                      disableCloseOnSelect\r\n                      getOptionLabel={(option) => option?.label}\r\n                      value={school}\r\n                      onChange={(event, newValue) => {\r\n                        console.log(newValue,\"new value\")\r\n                        setSchool(newValue)\r\n                        setUpdateDirection((prev) => ({...prev, schoolCode: newValue?.value}));\r\n                      }}\r\n                      renderOption={(props, option, {selected}) => (\r\n                        <li {...props}>\r\n                          <Checkbox\r\n                            icon={icon}\r\n                            checkedIcon={checkedIcon}\r\n                            style={{marginRight: 8}}\r\n                            checked={selected}\r\n                          />\r\n                          {option?.label}\r\n                        </li>\r\n                      )}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} label=\"School\" placeholder=\"School\"/>\r\n                      )}\r\n                    />\r\n\r\n          </WrapperScroll>\r\n          <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'end',\r\n              }}\r\n          >\r\n            <Button\r\n                variant={'contained'}\r\n                endIcon={(updateDirection?.id===null || !updateDirection?.id) ? <FaSave /> : <FiEdit />}\r\n                onClick={() => (updateDirection?.id===null || !updateDirection?.id) ? onSaveSchool(updateDirection) : onUpdateSchool(updateDirection) }\r\n            >{(updateDirection?.id===null || !updateDirection?.id) ? \" Save\" : \"Update\"}</Button>\r\n\r\n          </Box>\r\n          </Box>\r\n      </Modal>\r\n      {/*** ================= add  school =================== ***/}\r\n\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst WrapperScroll = styled.div`\r\n  height: 80px;\r\n  padding-top: 10px;\r\n  display: grid;\r\n  overflow-y: scroll;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  gap: 30px;\r\n  ${medium({\r\n    height: '100%',\r\n    gridTemplateColumns: '1fr',\r\n    gap: '15px',\r\n  })}\r\n  ${small({\r\n    height: '100%',\r\n    gridTemplateColumns: '1fr',\r\n    gap: '15px',\r\n  })}\r\n  ${extrasmall({\r\n    height: '100%',\r\n    gridTemplateColumns: '1fr',\r\n    gap: '15px',\r\n  })}\r\n`\r\n\r\n\r\nconst CloseMyButtonForChild = styled(m.button)`\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${mainColor};\r\n  border-radius: 50%;\r\n  color: white;\r\n  font-size: 26px;\r\n  border: none;\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n`;\r\n\r\n\r\nconst styleEdit = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: \"900px\",\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  gap: '20px',\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  borderRadius: 3,\r\n  p: 4,\r\n};\r\n\r\nconst styledEdit2=styled.div`\r\n  ${medium({\r\n    width: \"97vw !important\",\r\n    height: \"60vh !important\"\r\n  })}\r\n  ${small({\r\n    width: \"97vw !important\",\r\n    height: \"60vh !important\"\r\n  })}\r\n  ${extrasmall({\r\n    width: \"97vw !important\",\r\n    height: \"60vh !important\"\r\n  })}\r\n`\r\n\r\nconst BtnEditPosition = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  background-color: #fff;\r\n  font-size: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 1px solid ${props => props.color};\r\n  border-radius: 0.5rem;\r\n  color: ${props => props.color};\r\n  padding: 5px !important;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n\r\n`\r\n\r\nconst Wrapper2 = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  margin: 5px !important;\r\n`;\r\n\r\n\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding:1rem;\r\n`;\r\n\r\nexport default FacultyService;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');\nexports.default = _default;"],"names":["icon","fontSize","checkedIcon","WrapperScroll","styled","medium","height","gridTemplateColumns","gap","small","extrasmall","CloseMyButtonForChild","m","mainColor","styleEdit","position","top","left","transform","width","display","flexDirection","bgcolor","boxShadow","borderRadius","p","styledEdit2","BtnEditPosition","props","color","Wrapper2","Container","headers","getHeaders","useState","spinner","setSpinner","directions","setDirections","school","setSchool","schools","setSchools","openCreate","setOpenCreate","id","name","shortName","schoolCode","updateDirection","setUpdateDirection","columnsDirection","field","headerName","editable","type","renderCell","cellValues","onClick","handleOpenEdit","row","onDeleted","handleClose","fetchDirections","axios","BASE_URL","then","res","data","obj","catch","err","console","log","handleChangeValue","e","prev","target","value","useEffect","map","i","label","nameEn","code","schoolName","length","prevState","find","direction","window","confirm","filter","toast","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","justifyContent","sx","variant","checkboxSelection","minHeight","overflow","columns","rows","components","Toolbar","GridToolbar","pageSize","initialState","columnVisibilityModel","open","onClose","component","whileHover","rotate","scale","whileTap","transition","duration","style","onChange","options","disableCloseOnSelect","getOptionLabel","option","event","newValue","renderOption","selected","marginRight","checked","renderInput","params","placeholder","endIcon","Object","values","every","response","onUpdateSchool","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}