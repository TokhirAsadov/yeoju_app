{"version":3,"file":"static/js/7283.e246b14e.chunk.js","mappings":"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","sources":["components/bulim/sittings/BulimSittings.jsx","components/form/SaveAddress.jsx","components/form/SavePhoneNumber.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {BASE_URL, getHeaders, mainColor, TOKEN, TokenType} from \"../../../utills/ServiceUrls\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport {useHttp} from \"../../hook/useHttp\";\r\nimport axios from \"axios\";\r\nimport {fetchUser} from \"../../../redux/actions/user/user_actions\";\r\nimport {toast} from \"react-toastify\";\r\nimport {\r\n    FaArrowRight,\r\n    FaAt,\r\n    FaEdit,\r\n    FaFacebook,\r\n    FaFlag,\r\n    FaImage,\r\n    FaInstagram,\r\n    FaMobile,\r\n    FaPassport,\r\n    FaPencilAlt,\r\n    FaPhone,\r\n    FaSave,\r\n    FaTelegram,\r\n    FaUser\r\n} from \"react-icons/fa\";\r\nimport moment from \"moment\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Input from '@mui/material/Input';\r\nimport {RiCloseLine} from \"react-icons/ri\";\r\nimport SavePhoneNumber from \"../../form/SavePhoneNumber\";\r\nimport SaveAddress from \"../../form/SaveAddress\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport {HiOutlineKey} from \"react-icons/hi\";\r\nimport {extrasmall, large, medium, small} from \"../../../responsiv\";\r\nimport Noimg from \"../../../utills/images/no-picture.jpg\";\r\nimport {Card, CardContent} from \"@mui/material\";\r\nimport {IoClose} from \"react-icons/io5\";\r\nimport ButtonMui from \"@mui/material/Button\";\r\nimport {FaCakeCandles, FaLocationDot, FaMapLocationDot, FaRectangleXmark} from \"react-icons/fa6\";\r\n\r\nconst BulimSittings = () => {\r\n    const user = useSelector(state => state?.user?.user);\r\n    const token = localStorage.getItem(TOKEN)\r\n    const decode = jwtDecode(token);\r\n    const roleName = decode.roles;\r\n    const {headers} = getHeaders();\r\n\r\n    const [isName, setIsName] = useState(false);\r\n    const [isPassport, setIsPassport] = useState(false);\r\n    const [isEmail, setIsEmail] = useState(false);\r\n    const [isBrith, setIsBirth] = useState(false);\r\n    const [isNation, setIsNation] = useState(false);\r\n    const [isCivil, setIsCivil] = useState(false);\r\n    const [isMyPhone, setIsMyPhone] = useState(false);\r\n    const [isMotherPhone, setIsMotherPhone] = useState(false);\r\n    const [isFatherPhone, setIsFatherPhone] = useState(false);\r\n    const [isAddress, setIsAddress] = useState(false);\r\n    const [isAddressMap, setIsAddressMap] = useState(false);\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [passport, setPassport] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [birth, setBirth] = useState(null);\r\n    const [nation, setNation] = useState(\"\");\r\n    const [civil, setCivil] = useState(\"\");\r\n    const [openChange, setOpenChange] = useState(false)\r\n\r\n    const [isHovering, setIsHovering] = useState(false);\r\n\r\n    const handleMouseOver = () => {\r\n        setIsHovering(true);\r\n    };\r\n    const handleCloseModal = () => {\r\n        setOpenChange(false)\r\n    }\r\n    const handleOpenModal = () => {\r\n        setOpenChange(true)\r\n    }\r\n    const handleMouseOut = () => {\r\n        setIsHovering(false);\r\n    };\r\n\r\n    const {request} = useHttp();\r\n    const dispatch = useDispatch();\r\n\r\n    const savePhoto = (e) => {\r\n        e.preventDefault()\r\n        const url = BASE_URL + '/attachment/uploadPhoto';\r\n        const formData = new FormData();\r\n        formData.append('file', e.target.files[0]);\r\n        const token = localStorage.getItem(TOKEN)\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data',\r\n                'Authorization': TokenType + token,\r\n                'Access-Control-Allow-Origin': '*'\r\n            }\r\n        }\r\n        axios.post(url, formData, config)\r\n            .then((response) => {\r\n                console.log(response.data, 'RES');\r\n                dispatch(fetchUser(request));\r\n            })\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setIsMyPhone(false);\r\n        setIsFatherPhone(false);\r\n        setIsMotherPhone(false);\r\n        setIsAddressMap(false);\r\n        setIsAddress(false);\r\n        setEdit(false)\r\n    }\r\n\r\n\r\n    const saveFullName = async () => {\r\n        name.length > 3 && await axios.get(BASE_URL + \"/user/updateFullName?fullName=\" + name, {headers})\r\n            .then(res => {\r\n                // console.log(res)\r\n                setName(\"\");\r\n                setIsName(false);\r\n                dispatch(fetchUser(request))\r\n                toast.success(\"Changed full name successfully!...\");\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const saveCivil = async () => {\r\n        civil.length > 3 && await axios.get(BASE_URL + \"/user/updateCivil?civil=\" + civil, {headers})\r\n            .then(res => {\r\n                // console.log(res)\r\n                setCivil(\"\");\r\n                setIsCivil(false);\r\n                dispatch(fetchUser(request))\r\n                toast.success(\"Changed civil successfully!...\")\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const saveNation = async () => {\r\n        nation.length > 3 && await axios.get(BASE_URL + \"/user/updateNation?nation=\" + nation, {headers})\r\n            .then(res => {\r\n                // console.log(res)\r\n                setNation(\"\");\r\n                setIsNation(false);\r\n                dispatch(fetchUser(request))\r\n                toast.success(\"Changed nation successfully!...\")\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const saveBirth = async () => {\r\n        birth !== null && await axios.get(BASE_URL + \"/user/updateBirth?birth=\" + birth, {headers})\r\n            .then(res => {\r\n                // console.log(res)\r\n                setBirth(\"\");\r\n                setIsBirth(false);\r\n                dispatch(fetchUser(request))\r\n                toast.success(\"Changed birth day successfully!...\")\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const validateEmail = (email) => {\r\n        let re = String(email)\r\n            .toLowerCase()\r\n            .match(\r\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n            );\r\n        if (!re) alert(\"Invalid email:(\")\r\n        return re;\r\n    };\r\n\r\n    const savePassport = async () => {\r\n\r\n        await axios.get(BASE_URL + \"/user/updateEmail?passport=\" + passport, {headers})\r\n            .then(res => {\r\n                // console.log(res)\r\n                setPassport(\"\");\r\n                setIsPassport(false);\r\n                dispatch(fetchUser(request))\r\n                toast.success(\"Changed passport successfully!...\")\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const saveEmail = async () => {\r\n        validateEmail(email) && await axios.get(BASE_URL + \"/user/updateEmail?email=\" + email, {headers})\r\n            .then(res => {\r\n                // console.log(res)\r\n                setEmail(\"\");\r\n                setIsEmail(false);\r\n                dispatch(fetchUser(request))\r\n                toast.success(\"Changed email successfully!...\")\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const [edit, setEdit] = useState(false)\r\n    const [editUser, setEditUser] = useState({password: ''})\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n    const handleChangeValue = (e) => {\r\n        setEditUser(prev => ({...prev, [e.target.name]: e.target.value}));\r\n    };\r\n\r\n    const handleSecurity = () => {\r\n        setEdit(true);\r\n    }\r\n\r\n    const submitSecurity = () => {\r\n        if (\r\n            editUser !== undefined &&\r\n            editUser !== null &&\r\n            editUser?.password !== undefined &&\r\n            editUser?.password !== \"\" &&\r\n            editUser?.password !== null\r\n        ) {\r\n            axios.post(BASE_URL + \"/user/changeLogin\", editUser, {headers})\r\n                .then(res => {\r\n                    dispatch(fetchUser(request));\r\n                    handleClose();\r\n                    setEditUser({password: ''})\r\n                    toast.success('Successfully')\r\n                })\r\n                .catch(err => {\r\n                    toast.warning(err?.response?.data?.message)\r\n                })\r\n        } else {\r\n            toast.warning(\"Empty any fields..\")\r\n        }\r\n    }\r\n\r\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Boxwr>\r\n                <Header>\r\n                    <Card sx={{width: '100%'}}>\r\n                        <CardContent>\r\n                            <UserFieldWrapper>\r\n                                <Fields>\r\n                                    <Box display={'flex'} justifyContent={'end'}>\r\n                                        <IconButton onClick={handleOpenModal}>\r\n                                            <FaEdit size={20}/>\r\n                                        </IconButton>\r\n                                    </Box>\r\n                                    <ImageWrapper onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n                                        <Img>\r\n                                            {\r\n                                                user?.photos?.id ? <img\r\n                                                    src={BASE_URL + \"/attachment/download/\" + user?.photos?.id}\r\n                                                    width={\"240px\"} height={\"240px\"}\r\n                                                    alt={user?.fullName}\r\n                                                    style={{borderRadius: \"50%\"}}\r\n                                                /> : <img src={Noimg} alt={\"img\"} style={{width: \"100%\"}}/>\r\n                                            }\r\n                                        </Img>\r\n                                        {\r\n                                            isHovering && <label style={{\r\n                                                minHeight: \"40px\",\r\n                                                position: \"absolute\",\r\n                                                bottom: \"0\",\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n                                                justifyContent: \"center\",\r\n                                                width: \"100%\",\r\n                                                fontSize: \"28px\",\r\n                                                backgroundColor: \"rgba(85,76,76,0.4)\",\r\n                                                cursor: \"pointer\"\r\n                                            }}>\r\n                                                <input type=\"file\"\r\n                                                       accept=\"image/png, image/jpeg\"\r\n                                                       style={{display: \"none\"}}\r\n                                                       onChange={savePhoto}\r\n                                                />\r\n                                                <FaImage />\r\n                                            </label>\r\n                                        }\r\n                                    </ImageWrapper>\r\n\r\n                                    <FullName><span>F.I.SH.: </span>{user?.fullName}</FullName>\r\n                                    <RoleName><span>Passport series: </span>{user?.passportNum}</RoleName>\r\n                                    <RoleName><span>Nationality: </span> {user?.nationality}</RoleName>\r\n                                    <RoleName><span>Citizenship:</span> {user?.citizenship}</RoleName>\r\n                                    <RoleName><span>Date of birth: </span>{moment(new Date(user?.bornYear)).format(\"DD.MM.YYYY\")}\r\n                                    </RoleName>\r\n                                    <RoleName><span>Address:</span> {user?.address}</RoleName>\r\n                                    <RoleName><span>Address(temporary):</span> {user?.addressCurrent}</RoleName>\r\n                                </Fields>\r\n\r\n\r\n                            </UserFieldWrapper>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Header>\r\n                <Body>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Fields>\r\n                                <RoleName><span className={'title'}>Email: </span>{user?.email}</RoleName>\r\n                                <RoleName><span className={'title'}>Role: </span>{roleName?.map((item, index) => (\r\n                                    <span key={index}>{item?.roleName?.slice(5)} ,</span>))}\r\n                                </RoleName>\r\n                                <FullName><span\r\n                                    className={'title'}>Mobile phone: </span>{user?.phones?.find(i => i?.phoneType == 'MOBILE_PHONE')?.phoneNumber}\r\n                                </FullName>\r\n                                <FullName><span\r\n                                    className={'title'}>Work phone: </span>{user?.phones?.find(i => i?.phoneType == 'WORK_PHONE')?.phoneNumber}\r\n                                </FullName>\r\n                                <FullName><span\r\n                                    className={'title'}>Home phone: </span>{user?.phones?.find(i => i?.phoneType == 'HOME_PHONE')?.phoneNumber}\r\n                                </FullName>\r\n                            </Fields>\r\n                        </CardContent>\r\n                    </Card>\r\n                    <Box>\r\n                        <ButtonMui\r\n                            size={'small'}\r\n                            onClick={handleSecurity}\r\n                            variant={'contained'}\r\n                            startIcon={<HiOutlineKey\r\n                                style={{fontSize: '20px', marginRight: '5px'}}/>}\r\n                        >\r\n                            Change password\r\n                        </ButtonMui>\r\n                    </Box>\r\n                </Body>\r\n            </Boxwr>\r\n\r\n            {/*** ================= edit staff =================== ***/}\r\n            <Modal\r\n                open={edit}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"keep-mounted-modal-title\"\r\n                aria-describedby=\"keep-mounted-modal-description\"\r\n            >\r\n                <Box sx={style} component={style2}>\r\n                    <Box display={'flex'} justifyContent={'space-between'} alignItems={'center'}>\r\n                        <h5 style={{color: `${mainColor}`, fontSize: \"18px\"}}>Change password</h5>\r\n                        <IconButton onClick={handleClose}>\r\n                            <RiCloseLine/>\r\n                        </IconButton>\r\n                    </Box>\r\n                    <Box sx={{display: 'grid', gridTemplateColumns: '1fr',gap:'20px', mt:'20px'}}>\r\n                        <FormControl fullWidth variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"outlined-adornment-password\">New password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                onChange={handleChangeValue}\r\n                                name={'password'}\r\n                                value={editUser?.password}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            onChange={handleChangeValue}\r\n                                            value={editUser?.password}\r\n                                            name={'password'}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <VisibilityOff/> : <Visibility/>}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                label=\"new password\"\r\n                            />\r\n                        </FormControl>\r\n                        <ButtonMui variant={'contained'} onClick={submitSecurity}>Save</ButtonMui>\r\n                    </Box>\r\n\r\n                </Box>\r\n            </Modal>\r\n            {/*** ================= edit staff =================== ***/}\r\n\r\n\r\n            <Modal\r\n                open={openChange}\r\n                onClose={handleCloseModal}\r\n                aria-labelledby=\"keep-mounted-modal-title\"\r\n                aria-describedby=\"keep-mounted-modal-description\"\r\n            >\r\n                <Box sx={styleModalCreate}\r\n                     component={styleAddSm}\r\n                >\r\n                    <ModalTitle>\r\n                        <h4></h4>\r\n                        <IconButton onClick={handleCloseModal}> <IoClose size={22}/></IconButton>\r\n                    </ModalTitle>\r\n                    <Box\r\n                        sx={{\r\n                            marginTop: '15px',\r\n                            overflow: 'scroll'\r\n                        }}\r\n                    >\r\n                        <BodySection>\r\n                            <BodyRow>\r\n                                <BodyLabel><Icon><FaUser /></Icon><LabelValue>Full\r\n                                    Name:</LabelValue></BodyLabel>\r\n                                {\r\n                                    isName ?\r\n                                        <>\r\n                                            <Input value={name} onChange={(e) => setName(e.target.value)}/>\r\n                                            <Button onClick={saveFullName}><FaSave/></Button>\r\n                                            <Button onClick={() => setIsName(false)} color={\"#f00\"}><FaRectangleXmark /></Button>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <BodyItem>{user?.fullName}</BodyItem>\r\n                                            <Button onClick={() => setIsName(true)}><FaPencilAlt /></Button>\r\n                                        </>\r\n                                }\r\n                            </BodyRow>\r\n                            <BodyRow>\r\n                                <BodyLabel><Icon><FaAt /></Icon><LabelValue>Email:</LabelValue></BodyLabel>\r\n                                {\r\n                                    isEmail ?\r\n                                        <>\r\n                                            <Input type=\"email\" value={email}\r\n                                                   onChange={(e) => setEmail(e.target.value)}/>\r\n                                            <Button onClick={saveEmail}><FaSave /></Button>\r\n                                            <Button onClick={() => setIsEmail(false)} color={\"#f00\"}><FaRectangleXmark /></Button>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <BodyItem>{user?.email}</BodyItem>\r\n                                            <Button onClick={() => setIsEmail(true)}><FaPencilAlt /></Button>\r\n                                        </>\r\n                                }\r\n                            </BodyRow>\r\n                            <BodyRow>\r\n                                <BodyLabel><Icon><FaPassport /></Icon><LabelValue>Passport:</LabelValue></BodyLabel>\r\n                                {\r\n                                    isPassport ?\r\n                                        <>\r\n                                            <Input value={passport} onChange={(e) => setPassport(e.target.value)}/>\r\n                                            <Button onClick={() => setIsPassport(false)}><FaSave /></Button>\r\n                                            <Button onClick={() => setIsPassport(false)} color={\"#f00\"}><FaRectangleXmark /></Button>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <BodyItem>{user?.passportNum}</BodyItem>\r\n                                            <Button onClick={() => setIsPassport(true)}><FaPencilAlt /></Button>\r\n                                        </>\r\n                                }\r\n                            </BodyRow>\r\n                            <BodyRow>\r\n                                <BodyLabel><Icon><FaCakeCandles /></Icon><LabelValue>Birthday:</LabelValue></BodyLabel>\r\n                                {\r\n                                    isBrith ?\r\n                                        <>\r\n                                            <input type=\"date\" value={birth}\r\n                                                   onChange={(e) => setBirth(e.target.value)}/>\r\n                                            <Button onClick={saveBirth}><FaSave /></Button>\r\n                                            <Button onClick={() => setIsBirth(false)} color={\"#f00\"}><FaRectangleXmark /></Button>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <BodyItem>{moment(new Date(user?.bornYear)).format(\"DD.MM.yyyy\")}</BodyItem>\r\n                                            <Button onClick={() => setIsBirth(true)}><FaPencilAlt /></Button>\r\n                                        </>\r\n                                }\r\n                            </BodyRow>\r\n                            <BodyRow>\r\n                                <BodyLabel><Icon><FaFlag /></Icon><LabelValue>The\r\n                                    nation:</LabelValue></BodyLabel>\r\n                                {\r\n                                    isNation ?\r\n                                        <>\r\n                                            <Input value={nation} onChange={(e) => setNation(e.target.value)}/>\r\n                                            <Button onClick={saveNation}><FaSave /></Button>\r\n                                            <Button onClick={() => setIsNation(false)} color={\"#f00\"}><FaRectangleXmark /></Button>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <BodyItem>{user?.nationality}</BodyItem>\r\n                                            <Button onClick={() => setIsNation(true)}><FaPencilAlt /></Button>\r\n                                        </>\r\n                                }\r\n                            </BodyRow>\r\n                            <BodyRow>\r\n                                <BodyLabel><Icon><FaFlag /></Icon><LabelValue>The\r\n                                    civil:</LabelValue></BodyLabel>\r\n                                {\r\n                                    isCivil ?\r\n                                        <>\r\n                                            <Input value={civil} onChange={(e) => setCivil(e.target.value)}/>\r\n                                            <Button onClick={saveCivil}><FaSave /></Button>\r\n                                            <Button onClick={() => setIsCivil(false)} color={\"#f00\"}><FaRectangleXmark /></Button>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <BodyItem>{user?.citizenship}</BodyItem>\r\n                                            <Button onClick={() => setIsCivil(true)}><FaPencilAlt /></Button>\r\n                                        </>\r\n                                }\r\n                            </BodyRow>\r\n                            <BodyRow>\r\n                                <BodyLabel><Icon><FaMobile /></Icon><LabelValue fs={isMyPhone}>Mobile\r\n                                    Phone:</LabelValue></BodyLabel>\r\n\r\n                                {\r\n                                    isMyPhone ?\r\n                                        <>\r\n\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <BodyItem>\r\n                                                {user?.phones.filter(item => item.phoneType === \"MOBILE_PHONE\")[0]?.phoneNumber}\r\n                                                {\r\n                                                    user?.phones.filter(item => item.phoneType === \"MOBILE_PHONE\")[0]?.hasTg\r\n                                                    &&\r\n                                                    <FaTelegram />\r\n                                                }\r\n                                                {\r\n                                                    user?.phones.filter(item => item.phoneType === \"MOBILE_PHONE\")[0]?.hasInstagram\r\n                                                    &&\r\n                                                    <FaInstagram />\r\n                                                }\r\n                                                {\r\n                                                    user?.phones.filter(item => item.phoneType === \"MOBILE_PHONE\")[0]?.hasFacebook\r\n                                                    &&\r\n                                                    <FaFacebook />\r\n                                                }\r\n                                            </BodyItem>\r\n                                            <Button onClick={() => setIsMyPhone(true)}><FaPencilAlt /></Button>\r\n                                        </>\r\n                                }\r\n\r\n\r\n                                {/*** ================= change mobile phone =================== ***/}\r\n                                <Modal\r\n                                    open={isMyPhone}\r\n                                    onClose={handleClose}\r\n                                    aria-labelledby=\"keep-mounted-modal-title\"\r\n                                    aria-describedby=\"keep-mounted-modal-description\"\r\n                                >\r\n                                    <Box sx={style} component={style2}>\r\n                                        <CloseMyButtonForChild\r\n                                            onClick={handleClose}><RiCloseLine/></CloseMyButtonForChild>\r\n                                        <SavePhoneNumber\r\n                                            // title={updateItem?.id!==null ? \"UPDATE BUILDING\" : \"ADD BUILDING\"}\r\n                                            title={\"Mobile Phone\"}\r\n                                            phoneType={\"MOBILE_PHONE\"}\r\n                                            formArr={[\r\n                                                {\r\n                                                    label: \"id\",\r\n                                                    name: \"id\",\r\n                                                    placeholder: \"Enter id of build\",\r\n                                                    icon: FaArrowRight,\r\n                                                    type: \"text\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Phone Number:\",\r\n                                                    name: \"phoneNumber\",\r\n                                                    placeholder: \"Phone Number:\",\r\n                                                    type: \"phone\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Has Tg:\",\r\n                                                    name: \"hasTg\",\r\n                                                    placeholder: \"Has Tg\",\r\n                                                    icon: FaTelegram,\r\n                                                    type: \"checkbox\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Has Instagram:\",\r\n                                                    name: \"hasInstagram\",\r\n                                                    placeholder: \"Has Instagram\",\r\n                                                    icon: FaInstagram,\r\n                                                    type: \"checkbox\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Has Facebook:\",\r\n                                                    name: \"hasFacebook\",\r\n                                                    placeholder: \"Has Facebook\",\r\n                                                    icon: FaFacebook,\r\n                                                    type: \"checkbox\",\r\n                                                }\r\n                                            ]}\r\n                                            onClose={() => setIsMyPhone(false)}\r\n                                        />\r\n                                    </Box>\r\n                                </Modal>\r\n                                {/*** ================= change mobile phone =================== ***/}\r\n\r\n\r\n                            </BodyRow>\r\n                            <BodyRow>\r\n                                <BodyLabel><Icon><FaPhone /></Icon><LabelValue fs={isFatherPhone}>Home\r\n                                    Phone:</LabelValue></BodyLabel>\r\n                                {\r\n                                    isFatherPhone ?\r\n                                        <>\r\n\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <BodyItem>\r\n                                                {user?.phones.filter(item => item.phoneType === \"HOME_PHONE\")[0]?.phoneNumber}\r\n\r\n                                                {\r\n                                                    user?.phones.filter(item => item.phoneType === \"HOME_PHONE\")[0]?.hasTg\r\n                                                    &&\r\n                                                    <FaTelegram />\r\n                                                }\r\n                                                {\r\n                                                    user?.phones.filter(item => item.phoneType === \"HOME_PHONE\")[0]?.hasInstagram\r\n                                                    &&\r\n                                                    <FaInstagram />\r\n                                                }\r\n                                                {\r\n                                                    user?.phones.filter(item => item.phoneType === \"HOME_PHONE\")[0]?.hasFacebook\r\n                                                    &&\r\n                                                    <FaFacebook />\r\n                                                }\r\n                                            </BodyItem>\r\n                                            <Button onClick={() => setIsFatherPhone(true)}><FaPencilAlt /></Button>\r\n                                        </>\r\n                                }\r\n\r\n                                {/*** ================= change father phone =================== ***/}\r\n                                <Modal\r\n                                    open={isFatherPhone}\r\n                                    onClose={handleClose}\r\n                                    aria-labelledby=\"keep-mounted-modal-title\"\r\n                                    aria-describedby=\"keep-mounted-modal-description\"\r\n                                >\r\n                                    <Box sx={style} component={style2}>\r\n                                        <CloseMyButtonForChild\r\n                                            onClick={handleClose}><RiCloseLine/></CloseMyButtonForChild>\r\n                                        <SavePhoneNumber\r\n                                            title={\"Home Phone\"}\r\n                                            phoneType={\"HOME_PHONE\"}\r\n                                            formArr={[\r\n                                                {\r\n                                                    label: \"id\",\r\n                                                    name: \"id\",\r\n                                                    placeholder: \"Enter id of phone\",\r\n                                                    icon: FaArrowRight,\r\n                                                    type: \"text\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Phone Number:\",\r\n                                                    name: \"phoneNumber\",\r\n                                                    placeholder: \"Phone Number:\",\r\n                                                    type: \"phone\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Has Tg:\",\r\n                                                    name: \"hasTg\",\r\n                                                    placeholder: \"Has Tg\",\r\n                                                    icon: FaTelegram,\r\n                                                    type: \"checkbox\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Has Instagram:\",\r\n                                                    name: \"hasInstagram\",\r\n                                                    placeholder: \"Has Instagram\",\r\n                                                    icon: FaInstagram,\r\n                                                    type: \"checkbox\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Has Facebook:\",\r\n                                                    name: \"hasFacebook\",\r\n                                                    placeholder: \"Has Facebook\",\r\n                                                    icon: FaFacebook,\r\n                                                    type: \"checkbox\",\r\n                                                }\r\n                                            ]}\r\n                                            onClose={() => setIsFatherPhone(false)}\r\n                                        />\r\n                                    </Box>\r\n                                </Modal>\r\n                                {/*** ================= change HOME phone =================== ***/}\r\n\r\n                            </BodyRow>\r\n                            <BodyRow>\r\n                                <BodyLabel><Icon><FaPhone /></Icon><LabelValue fs={isMotherPhone}>Work\r\n                                    Phone:</LabelValue></BodyLabel>\r\n                                {\r\n                                    isMotherPhone ?\r\n                                        <>\r\n\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <BodyItem>\r\n                                                {user?.phones.filter(item => item.phoneType === \"WORK_PHONE\")[0]?.phoneNumber}\r\n                                                {\r\n                                                    user?.phones.filter(item => item.phoneType === \"WORK_PHONE\")[0]?.hasTg\r\n                                                    &&\r\n                                                    <FaTelegram />\r\n                                                }\r\n                                                {\r\n                                                    user?.phones.filter(item => item.phoneType === \"WORK_PHONE\")[0]?.hasInstagram\r\n                                                    &&\r\n                                                    <FaInstagram />\r\n                                                }\r\n                                                {\r\n                                                    user?.phones.filter(item => item.phoneType === \"WORK_PHONE\")[0]?.hasFacebook\r\n                                                    &&\r\n                                                    <FaFacebook />\r\n                                                }\r\n                                            </BodyItem>\r\n                                            <Button onClick={() => setIsMotherPhone(true)}><FaPencilAlt /></Button>\r\n                                        </>\r\n                                }\r\n\r\n                                {/*** ================= change mother phone =================== ***/}\r\n                                <Modal\r\n                                    open={isMotherPhone}\r\n                                    onClose={handleClose}\r\n                                    aria-labelledby=\"keep-mounted-modal-title\"\r\n                                    aria-describedby=\"keep-mounted-modal-description\"\r\n                                >\r\n                                    <Box sx={style} component={style2}>\r\n                                        <CloseMyButtonForChild\r\n                                            onClick={handleClose}><RiCloseLine/></CloseMyButtonForChild>\r\n                                        <SavePhoneNumber\r\n                                            title={\"Work Phone\"}\r\n                                            phoneType={\"WORK_PHONE\"}\r\n                                            formArr={[\r\n                                                {\r\n                                                    label: \"id\",\r\n                                                    name: \"id\",\r\n                                                    placeholder: \"Enter id of build\",\r\n                                                    icon: FaArrowRight,\r\n                                                    type: \"text\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Phone Number:\",\r\n                                                    name: \"phoneNumber\",\r\n                                                    placeholder: \"Phone Number:\",\r\n                                                    type: \"phone\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Has Tg:\",\r\n                                                    name: \"hasTg\",\r\n                                                    placeholder: \"Has Tg\",\r\n                                                    icon: FaTelegram,\r\n                                                    type: \"checkbox\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Has Instagram:\",\r\n                                                    name: \"hasInstagram\",\r\n                                                    placeholder: \"Has Instagram\",\r\n                                                    icon: FaInstagram,\r\n                                                    type: \"checkbox\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Has Facebook:\",\r\n                                                    name: \"hasFacebook\",\r\n                                                    placeholder: \"Has Facebook\",\r\n                                                    icon: FaFacebook,\r\n                                                    type: \"checkbox\",\r\n                                                }\r\n                                            ]}\r\n                                            onClose={() => setIsMotherPhone(false)}\r\n                                        />\r\n                                    </Box>\r\n                                </Modal>\r\n                                {/*** ================= change mother phone =================== ***/}\r\n\r\n                            </BodyRow>\r\n                            <BodyRow>\r\n                                <BodyLabel><Icon><FaMapLocationDot/></Icon>Address:</BodyLabel>\r\n                                {\r\n                                    isAddressMap ?\r\n                                        <>\r\n\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <BodyItem\r\n                                                fontSize={\"12px\"}>{user?.address && `${user?.address?.country}, ${user?.address?.region}, ${user?.address?.area}, ${user?.address?.address}`}</BodyItem>\r\n                                            <Button onClick={() => setIsAddressMap(true)}><FaPencilAlt /></Button>\r\n                                        </>\r\n                                }\r\n\r\n                                {/*** ================= change address map =================== ***/}\r\n                                <Modal\r\n                                    open={isAddressMap}\r\n                                    onClose={handleClose}\r\n                                    aria-labelledby=\"keep-mounted-modal-title\"\r\n                                    aria-describedby=\"keep-mounted-modal-description\"\r\n                                >\r\n                                    <Box sx={style} component={style2}>\r\n                                        <CloseMyButtonForChild\r\n                                            onClick={handleClose}><RiCloseLine/></CloseMyButtonForChild>\r\n                                        <SaveAddress\r\n                                            constant={true}\r\n                                            formArr={[\r\n                                                {\r\n                                                    label: \"id\",\r\n                                                    name: \"id\",\r\n                                                    placeholder: \"Enter id\",\r\n                                                    icon: FaArrowRight,\r\n                                                    type: \"text\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Country:\",\r\n                                                    name: \"country\",\r\n                                                    placeholder: \"Enter country\",\r\n                                                    type: \"text\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Region:\",\r\n                                                    name: \"region\",\r\n                                                    placeholder: \"Enter region\",\r\n                                                    type: \"text\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Area:\",\r\n                                                    name: \"area\",\r\n                                                    placeholder: \"Enter ares\",\r\n                                                    type: \"text\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Address:\",\r\n                                                    name: \"address\",\r\n                                                    placeholder: \"Enter address\",\r\n                                                    type: \"text\",\r\n                                                }\r\n                                            ]}\r\n                                            onClose={() => setIsAddressMap(false)}\r\n                                        />\r\n                                    </Box>\r\n                                </Modal>\r\n                                {/*** ================= change mobile phone =================== ***/}\r\n\r\n                            </BodyRow>\r\n                            <BodyRow>\r\n                                <BodyLabel><Icon><FaLocationDot /></Icon>Address:</BodyLabel>\r\n                                {\r\n                                    isAddress ?\r\n                                        <>\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            <BodyItem\r\n                                                fontSize={\"12px\"}>{user?.addressCurrent && `${user?.addressCurrent?.country}, ${user?.addressCurrent?.region}, ${user?.addressCurrent?.area}, ${user?.addressCurrent?.address}`}</BodyItem>\r\n                                            <Button onClick={() => setIsAddress(true)}><FaPencilAlt /></Button>\r\n                                        </>\r\n                                }\r\n                                {/*** ================= change current address =================== ***/}\r\n                                <Modal\r\n                                    open={isAddress}\r\n                                    onClose={handleClose}\r\n                                    aria-labelledby=\"keep-mounted-modal-title\"\r\n                                    aria-describedby=\"keep-mounted-modal-description\"\r\n                                >\r\n                                    <Box sx={style} component={style2}>\r\n                                        <CloseMyButtonForChild\r\n                                            onClick={handleClose}><RiCloseLine/></CloseMyButtonForChild>\r\n                                        <SaveAddress\r\n                                            constant={false}\r\n                                            formArr={[\r\n                                                {\r\n                                                    label: \"id\",\r\n                                                    name: \"id\",\r\n                                                    placeholder: \"Enter id\",\r\n                                                    icon: FaArrowRight,\r\n                                                    type: \"text\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Country:\",\r\n                                                    name: \"country\",\r\n                                                    placeholder: \"Enter country\",\r\n                                                    type: \"text\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Region:\",\r\n                                                    name: \"region\",\r\n                                                    placeholder: \"Enter region\",\r\n                                                    type: \"text\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Area:\",\r\n                                                    name: \"area\",\r\n                                                    placeholder: \"Enter ares\",\r\n                                                    type: \"text\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"Address:\",\r\n                                                    name: \"address\",\r\n                                                    placeholder: \"Enter address\",\r\n                                                    type: \"text\",\r\n                                                }\r\n                                            ]}\r\n                                            onClose={() => setIsAddress(false)}\r\n                                        />\r\n                                    </Box>\r\n                                </Modal>\r\n                                {/*** ================= change current address =================== ***/}\r\n                            </BodyRow>\r\n                        </BodySection>\r\n                    </Box>\r\n                </Box>\r\n            </Modal>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst styleAddSm = styled.div`\r\n    ${extrasmall({\r\n        width: \"97% !important\"\r\n    })}\r\n`\r\nconst styleModalCreate = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 600,\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    padding: \"15px\",\r\n    borderRadius: \"8px\",\r\n};\r\n\r\nconst ModalTitle = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    h4 {\r\n        color: black;\r\n    }\r\n\r\n    h5 {\r\n        color: red;\r\n    }\r\n\r\n`\r\nconst Boxwr = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 0.6fr 1fr;\r\n    gap: 20px;\r\n    ${extrasmall({\r\n        gridTemplateColumns: \"1fr\",\r\n    })}\r\n`\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 800,\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    borderRadius: 3,\r\n    p: 2,\r\n};\r\nconst style2 = styled.div`\r\n    ${large({\r\n        width: \"80vw !important\",\r\n    })}\r\n    ${medium({\r\n        width: \"85vw !important\",\r\n    })}\r\n    ${small({\r\n        width: \"90vw !important\",\r\n    })}\r\n    ${extrasmall({\r\n        width: \"95vw !important\",\r\n        padding: \"10px !important\"\r\n    })}\r\n`\r\n\r\nconst CloseMyButtonForChild = styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    border-radius: 50%;\r\n    color: ${mainColor};\r\n    font-size: 26px;\r\n    border: none;\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n`;\r\n\r\n\r\nconst LabelValue = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    font-size: ${props => props.fs ? \"12px\" : \"14px\"};\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n    padding: 0 4px !important;\r\n    border: none;\r\n    font-size: 16px;\r\n    border-radius: 0.25rem;\r\n    color: ${props => props.color ? props.color : mainColor};\r\n    background-color: #ffffff;\r\n\r\n    &:hover {\r\n        filter: brightness(0.8);\r\n    }\r\n`;\r\n\r\n\r\nconst Icon = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst BodyItem = styled.div`\r\n    flex: 2;\r\n    display: flex;\r\n    gap: 10px;\r\n    overflow: auto;\r\n    color: #000;\r\n`;\r\n\r\nconst BodyLabel = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    gap: 10px;\r\n    color: ${mainColor};\r\n`;\r\n\r\nconst BodyRow = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    gap: 10px;\r\n    font-size: 18px;\r\n`;\r\n\r\nconst BodySection = styled.div`\r\n    flex: 1;\r\n    min-width: 340px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    padding: 1rem !important;\r\n`;\r\n\r\nconst Body = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    gap: 30px;\r\n`;\r\n\r\nconst RoleName = styled.div`\r\n    font-size: 14px;\r\n    color: black;\r\n\r\n    .title {\r\n        font-weight: bold;\r\n    }\r\n`\r\n\r\nconst FullName = styled.div`\r\n    font-size: 14px;\r\n    color: black;\r\n\r\n    .title {\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nconst Fields = styled.div`\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    height: 100%;\r\n`;\r\n\r\nconst UserFieldWrapper = styled.div`\r\n    display: flex;\r\n    gap: 20px;\r\n    background-color: #fff;\r\n    color: ${mainColor};\r\n    border-radius: 10px;`;\r\n\r\nconst Img = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 100px;\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n    width: 230px;\r\n    height: 230px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-radius: 50%;\r\n    position: relative;\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    ${small({\r\n        justifyContent: \"center\",\r\n    })}\r\n    ${extrasmall({\r\n        justifyContent: \"center\",\r\n    })}\r\n\r\n`;\r\n\r\n\r\nconst Container = styled.div`\r\n    padding: 1rem !important;\r\n`;\r\n\r\n\r\nexport default BulimSittings;","import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport {BASE_URL, getHeaders, mainColor} from \"../../utills/ServiceUrls\";\r\nimport axios from \"axios\";\r\nimport {useHttp} from \"../hook/useHttp\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchUser} from \"../../redux/actions/user/user_actions\";\r\nimport {FaSave} from \"react-icons/fa\";\r\n\r\n\r\nconst prepareForm = (formArr) => {\r\n    return formArr.reduce((r,v) => v.name!==\"lessonDtos\" ? ({...r,[v.name]: \"\"}) : ({...r,[v.name]: []}),{});\r\n}\r\n\r\n\r\nconst SaveAddress = ({ constant,formArr, redirect,onClose }) => {\r\n\r\n  const [form,setForm] = useState(prepareForm(formArr));\r\n\r\n  const [isValid, setIsValid] = useState(false)\r\n  const user = useSelector(state => state?.user?.user);\r\n\r\n  const { request } = useHttp();\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeHandler = (e,name) => setForm(p => ({...p,[name]: e.target.value}));\r\n\r\n\r\n  const fixedForm = async () => {\r\n    if (constant){\r\n      if (user?.address?.id!==null){\r\n        setForm(p => ({...p,id: user?.address?.id}))\r\n      }\r\n      setForm(p => ({...p,constant: constant,asCurrent:false}))\r\n    }\r\n    else {\r\n      if (user?.addressCurrent?.id!==null){\r\n        setForm(p => ({...p,id: user?.addressCurrent?.id}))\r\n      }\r\n      setForm(p => ({...p,constant: constant,asCurrent:true}))\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    fixedForm();\r\n  },[])\r\n\r\n  const close = () => onClose();\r\n  const onSubmitHandler = async () => {\r\n    isValid && axios.post(BASE_URL+\"/address/createForUser\",form,{headers})\r\n      .then(res => {\r\n        close();\r\n        dispatch(fetchUser(request))\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  const { headers } = getHeaders();\r\n\r\n  const hasRedirect = !!redirect;\r\n\r\n\r\n  useEffect(() =>{\r\n    if (form?.country && form?.region && form?.area && form?.address && form?.constant!==null && form?.asCurrent!==null){\r\n      setIsValid(true);\r\n    }\r\n  },[form])\r\n\r\n\r\n\r\n\r\n  return (\r\n      <SForm >\r\n          <Title>{constant ? \"Constant address\" : \"Current address\"}</Title>\r\n               <InputWrapper >\r\n                  {formArr?.map(({label,name,placeholder,type},index) => {\r\n                      return <Wrapper key={index}>\r\n                        <Label htmlFor={name} display={name === \"id\"}>{label}</Label>\r\n                        <Input\r\n                          key={index}\r\n                          display={name === \"id\"}\r\n                          id={name}\r\n                          name={name}\r\n                          type={type}\r\n                          value={form[name]}\r\n                          onChange={(e) => onChangeHandler(e,name)}\r\n                          placeholder={placeholder}\r\n                          required={true}\r\n                        />\r\n                      </Wrapper>\r\n                  })}\r\n              </InputWrapper>\r\n          <Button\r\n              onClick={(e) => {\r\n                  e.preventDefault();\r\n                  onSubmitHandler();\r\n              }}\r\n          ><FaSave/>\r\n            Save\r\n          </Button>\r\n          { hasRedirect && (\r\n              <Redirect>\r\n                  <RedirectLabel>{redirect.label}&nbsp;</RedirectLabel>\r\n                  <RedirectLink to={redirect.link.to}>{redirect.link.label}</RedirectLink>\r\n              </Redirect>\r\n          )}\r\n      </SForm>\r\n  );\r\n};\r\n\r\nconst SForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  width: 90%;\r\n   \r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  & > div{\r\n    width: 250px!important;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 1px solid ${mainColor};\r\n  width: 200px;\r\n  //height: 20px;\r\n  padding-left: 10px!important;\r\n  border-radius: 5px;\r\n  display: ${props => props.display ? \"none\" : \"block\"};\r\n  cursor: pointer;\r\n  \r\n  &::placeholder{\r\n    font-size: 14px;\r\n    letter-spacing: 1.1px;\r\n    color: ${mainColor};\r\n  }\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n  width: 200px;\r\n  height: 30px;\r\n  margin-top: 20px!important;\r\n  background-color: ${mainColor};\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  font-size: 16px;\r\n  letter-spacing: 0.7px;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: all ease 0.4s;\r\n  border: none;\r\n  border-radius: 5px;\r\n  \r\n  &:focus{\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 20px;\r\n  display: ${props => props.display ? \"none\" : \"block\"};\r\n`;\r\n\r\nconst Redirect = styled.div`\r\n  font-size: 12px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 10px!important;\r\n`;\r\n\r\nconst RedirectLabel = styled.span`\r\n\r\n`;\r\nconst Title = styled.h3`\r\n  color: ${mainColor};\r\n  margin-bottom: 20px!important;\r\n`;\r\n\r\nconst RedirectLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: blue;\r\n`;\r\n\r\nexport default SaveAddress;","import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {isValidPhoneNumber} from 'react-phone-number-input'\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport {BASE_URL, getHeaders, mainColor} from \"../../utills/ServiceUrls\";\r\nimport axios from \"axios\";\r\nimport {useHttp} from \"../hook/useHttp\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchUser} from \"../../redux/actions/user/user_actions\";\r\nimport {FaEdit, FaSave} from \"react-icons/fa\";\r\n\r\nconst prepareForm = (formArr) => {\r\n    return formArr.reduce((r,v) => v.name!==\"lessonDtos\" ? ({...r,[v.name]: \"\"}) : ({...r,[v.name]: []}),{});\r\n}\r\n\r\n\r\nconst SavePhoneNumber = ({ title,formArr, redirect,phoneType,onClose }) => {\r\n\r\n  const initialForm = prepareForm(formArr);\r\n  const [form,setForm] = useState(prepareForm(formArr));\r\n\r\n  const [value, setValue] = useState(\"\")\r\n  const [isValid, setIsValue] = useState(false)\r\n\r\n  const { request } = useHttp();\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeHandler = (e,name) => setForm(p => ({...p,[name]: e.target.checked}));\r\n\r\n  const fixedForm = () => {\r\n    if (form?.hasTg===\"\") setForm(p => ({...p,hasTg: false}))\r\n    if (form?.hasInstagram===\"\") setForm(p => ({...p,hasInstagram: false}))\r\n    if (form?.hasFacebook===\"\") setForm(p => ({...p,hasFacebook: false}))\r\n  }\r\n\r\n  const close = () => onClose();\r\n  const onSubmitHandler = async () => {\r\n    await fixedForm();\r\n\r\n    isValid && axios.post(BASE_URL+\"/phoneNumber/createPhoneNumber\",form,{headers})\r\n      .then(res => {\r\n        close();\r\n        dispatch(fetchUser(request))\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  const { headers } = getHeaders();\r\n\r\n  const hasRedirect = !!redirect;\r\n  const user = useSelector(state => state?.user?.user);\r\n\r\n\r\n  useEffect(() =>{\r\n    console.log(form,\"form\")\r\n    console.log(formArr,\"form\")\r\n  },[form])\r\n\r\n\r\n  const handlePhone = (value, country, e, formattedValue) => {\r\n    setIsValue(isValidPhoneNumber(formattedValue));\r\n    if (isValidPhoneNumber(formattedValue)) {\r\n      setForm(p => (\r\n          {\r\n            ...p,\r\n            phoneNumber: value,\r\n            phoneType:phoneType,\r\n            id:user?.phones.filter(item => item.phoneType===phoneType)[0]?.id\r\n          }\r\n        )\r\n      )\r\n    }\r\n    setValue(value);\r\n  }\r\n\r\n\r\n  return (\r\n      <SForm >\r\n          <Title>{title}</Title>\r\n               <InputWrapper >\r\n                  {formArr?.map(({label,name,placeholder,type,icon},index) => {\r\n                    if (type === \"phone\") {\r\n                      return <Wrapper key={index}>\r\n                          <Label htmlFor={name} display={name === \"id\"}>{label}</Label>\r\n                          <PhoneInput\r\n                                placeholder=\"Enter phone number\"\r\n                                value={value}\r\n                                onChange={handlePhone}\r\n                                international\r\n                                country={'uz'}\r\n                                enableSearch={true}\r\n                          />\r\n                      </Wrapper>\r\n                    } else {\r\n                      return <Wrapper key={index}>\r\n                        <Label htmlFor={name} display={name === \"id\"}>{React.createElement(icon)}&nbsp;&nbsp;{label}</Label>\r\n                        <Input\r\n                          key={index}\r\n                          display={name === \"id\"}\r\n                          id={name}\r\n                          name={name}\r\n                          type={type}\r\n                          value={form[name]}\r\n                          onChange={(e) => onChangeHandler(e,name)}\r\n                          placeholder={placeholder}\r\n                        />\r\n                      </Wrapper>\r\n                    }\r\n                  })}\r\n              </InputWrapper>\r\n          <Button\r\n              onClick={(e) => {\r\n                  e.preventDefault();\r\n                  onSubmitHandler();\r\n              }}\r\n          >{user?.phones.filter(item => item.phoneType===phoneType)[0]!==null ? <FaEdit /> : <FaSave />}\r\n              {user?.phones.filter(item => item.phoneType===phoneType)[0]!==null ? \"Update\" : \"Save\"}\r\n          </Button>\r\n          { hasRedirect && (\r\n              <Redirect>\r\n                  <RedirectLabel>{redirect.label}&nbsp;</RedirectLabel>\r\n                  <RedirectLink to={redirect.link.to}>{redirect.link.label}</RedirectLink>\r\n              </Redirect>\r\n          )}\r\n      </SForm>\r\n  );\r\n};\r\n\r\nconst SForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nconst InputWrapper = styled.div`\r\n  display: flex;\r\n  overflow: scroll;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  width: 90%;\r\n\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  & > div{\r\n    width: 300px!important;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: 1px solid ${mainColor};\r\n  width: 20px;height: 20px;\r\n  padding-left: 10px!important;\r\n  border-radius: 5px;\r\n  display: ${props => props.display ? \"none\" : \"block\"};\r\n  cursor: pointer;\r\n\r\n  &::placeholder{\r\n    font-size: 14px;\r\n    letter-spacing: 1.1px;\r\n    color: ${mainColor};\r\n  }\r\n  &:focus{\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n  width: 200px;\r\n  height: 30px;\r\n  margin-top: 20px!important;\r\n  background-color: ${mainColor};\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  font-size: 16px;\r\n  letter-spacing: 0.7px;\r\n  font-weight: 400;\r\n  cursor: pointer;\r\n  transition: all ease 0.4s;\r\n  border: none;\r\n  border-radius: 5px;\r\n\r\n  &:focus{\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  width: 200px;\r\n  font-size: 20px;\r\n  display: ${props => props.display ? \"none\" : \"block\"};\r\n`;\r\n\r\nconst Redirect = styled.div`\r\n  font-size: 12px;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 10px!important;\r\n`;\r\n\r\nconst RedirectLabel = styled.span`\r\n\r\n`;\r\nconst Title = styled.h3`\r\n  color: ${mainColor};\r\n  margin-bottom: 20px!important;\r\n`;\r\n\r\nconst RedirectLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: blue;\r\n`;\r\n\r\nexport default SavePhoneNumber;"],"names":["styleAddSm","styled","extrasmall","width","styleModalCreate","position","top","left","transform","bgcolor","boxShadow","padding","borderRadius","ModalTitle","Boxwr","gridTemplateColumns","style","p","style2","large","medium","small","CloseMyButtonForChild","mainColor","LabelValue","props","fs","Button","color","Icon","BodyItem","BodyLabel","BodyRow","BodySection","Body","RoleName","FullName","Fields","UserFieldWrapper","Img","ImageWrapper","Header","justifyContent","Container","user","useSelector","state","token","localStorage","getItem","TOKEN","roleName","jwtDecode","roles","headers","getHeaders","useState","isName","setIsName","isPassport","setIsPassport","isEmail","setIsEmail","isBrith","setIsBirth","isNation","setIsNation","isCivil","setIsCivil","isMyPhone","setIsMyPhone","isMotherPhone","setIsMotherPhone","isFatherPhone","setIsFatherPhone","isAddress","setIsAddress","isAddressMap","setIsAddressMap","name","setName","passport","setPassport","email","setEmail","birth","setBirth","nation","setNation","civil","setCivil","openChange","setOpenChange","isHovering","setIsHovering","handleCloseModal","request","useHttp","dispatch","useDispatch","handleClose","setEdit","saveFullName","length","axios","BASE_URL","then","res","fetchUser","toast","catch","err","console","log","saveCivil","saveNation","saveBirth","validateEmail","re","String","toLowerCase","match","alert","saveEmail","edit","password","editUser","setEditUser","React","showPassword","setShowPassword","handleChangeValue","e","prev","target","value","sx","display","onClick","size","onMouseOver","onMouseOut","photos","id","src","height","alt","fullName","Noimg","minHeight","bottom","alignItems","fontSize","backgroundColor","cursor","type","accept","onChange","preventDefault","url","formData","FormData","append","files","config","TokenType","response","data","passportNum","nationality","citizenship","moment","Date","bornYear","format","address","addressCurrent","className","map","item","index","slice","phones","find","i","phoneType","phoneNumber","variant","startIcon","marginRight","open","onClose","component","gap","mt","fullWidth","htmlFor","endAdornment","show","onMouseDown","event","edge","label","undefined","message","marginTop","overflow","filter","hasTg","hasInstagram","hasFacebook","title","formArr","placeholder","icon","FaArrowRight","FaTelegram","FaInstagram","FaFacebook","country","region","area","constant","SForm","InputWrapper","Wrapper","Input","Label","Redirect","RedirectLabel","Title","RedirectLink","Link","redirect","reduce","r","v","prepareForm","form","setForm","isValid","setIsValid","fixedForm","asCurrent","useEffect","onSubmitHandler","hasRedirect","onChangeHandler","required","to","link","setValue","setIsValue","handlePhone","formattedValue","isValidPhoneNumber","international","enableSearch","checked"],"sourceRoot":""}