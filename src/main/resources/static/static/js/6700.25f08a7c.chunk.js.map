{"version":3,"file":"static/js/6700.25f08a7c.chunk.js","mappings":"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","sources":["components/dekan/studentservice/NewStudentService.jsx","components/dekan/studentservice/OldStudentService.jsx","components/dekan/studentservice/DeanStudentServiceReference.jsx","components/student/student_service/PdfFile.jsx","components/student/student_service/PdfNewChange.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {CardContent, Stack} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {DataGrid} from \"@mui/x-data-grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {BASE_URL, getHeaders} from \"../../../utills/ServiceUrls\";\r\nimport {useSelector} from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nconst NewStudentService = () => {\r\n    const user = useSelector(state => state?.user?.user)\r\n    const {headers} = getHeaders();\r\n    const [references,setReferences] = useState([]);\r\n    const [loading, setLoading] = useState(false)\r\n    const columns = [\r\n        {\r\n            field: 'count',\r\n            headerName: 'â„–',\r\n            sortable: false,\r\n            width: 50,\r\n            align: 'center',\r\n        },\r\n        {\r\n            flex: 1,\r\n            minWidth:220,\r\n            field: 'fullName',\r\n            headerName: 'Full name',\r\n            sortable: true,\r\n            valueGetter: (params) =>\r\n                `${params.row.user.firstName || ''} ${params.row.user.lastName || ''}`,\r\n        },\r\n        {\r\n            flex: 1,\r\n            minWidth:130,\r\n            field: 'type',\r\n            headerName: 'Type ',\r\n            sortable: false,\r\n        },\r\n        { flex: 1,\r\n            minWidth:220,\r\n            field: 'description',\r\n            headerName: 'Description',\r\n            sortable: false,\r\n        },\r\n        {\r\n            flex: 1,\r\n            minWidth:150,\r\n            field: 'createdAt',\r\n            headerName: 'Date',\r\n            sortable: true,\r\n            valueGetter:(params) => `${moment(params.row.createdAt).format(\"DD:MM:YYYY HH:MM\")}`\r\n        },\r\n        {\r\n            flex: 1,\r\n            minWidth:100,\r\n            field: 'status',\r\n            headerName: 'Status',\r\n            sortable: false,\r\n            align: 'center',\r\n            renderCell: (props) => {\r\n                const {row} = props\r\n\r\n                return <Button\r\n                    size=\"small\"\r\n                    sx={{cursor: 'default !important'}}\r\n                    color={row.status === \"AT_PROCESS\" ? \"primary\" : row.status === \"CONFIRM\" ? \"success\" : \"error\"}\r\n                >\r\n                    {row.status === \"AT_PROCESS\" ? \"AT_PROCESS\" : row.status === \"CONFIRM\" ? \"CONFIRM\" : \"REJECT\"}\r\n                </Button>\r\n\r\n\r\n            }\r\n        },\r\n        {\r\n            flex: 1,\r\n            minWidth:200,\r\n            field: 'actions',\r\n            headerName: 'Actions',\r\n            sortable: false,\r\n            align: 'center',\r\n            renderCell: (props) => {\r\n                const {id, row} = props;\r\n                return <Stack direction=\"row\" justifyContent=\"center\" spacing={3}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        variant={row.status === \"CONFIRM\" ? \"contained\" : \"outlined\" || \"outlined\"}\r\n                            size=\"small\" color=\"success\"\r\n                            onClick={() => fetchChangeStatus(id,\"CONFIRM\")}>\r\n                        <Box display={'flex'} justifyContent={'center'} alignItems={'center'} gap={'7px'}>\r\n                            Confirm {loading && <CircularProgress size={22} />}\r\n                        </Box>\r\n                    </Button>\r\n                    <Button\r\n                        disabled={loading}\r\n                        variant={row.status === \"REJECT\" ? \"contained\" : \"outlined\" || \"outlined\"}\r\n                            size=\"small\" color=\"error\"\r\n                            onClick={() => fetchChangeStatus(id,\"REJECT\")}>\r\n                        <Box display={'flex'} justifyContent={'center'} alignItems={'center'} gap={'7px'}>\r\n                            Reject {loading && <CircularProgress size={22} />}\r\n                        </Box>\r\n                    </Button>\r\n                </Stack>\r\n            }\r\n        },\r\n\r\n    ];\r\n\r\n    useEffect(()=>{\r\n        const sse = new EventSource(BASE_URL + '/reference/stream?userId=' + user?.id+'&bool=true');\r\n        sse.addEventListener(\"reference-list-event\", (event) => {\r\n            const data = JSON.parse(event.data);\r\n            setReferences(data.map((row, index) => (row.status === \"AT_PROCESS\" && {\r\n                ...row,\r\n                count: index + 1,\r\n            } )));\r\n        });\r\n        sse.onerror = () => {\r\n            sse.close();\r\n        };\r\n        return () => {\r\n            sse.close();\r\n        };\r\n    })\r\n\r\n\r\n    const fetchChangeStatus = (id,status) => {\r\n        setLoading(true)\r\n      axios.put(`${BASE_URL}/reference/change`,{id,status},{headers})\r\n        .then(res => {\r\n            console.log(res)\r\n            toast.success('Successfully')\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            toast.error('Error')\r\n        })\r\n          .finally(()=>{\r\n              setLoading(false)\r\n          })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n                <CardContent>\r\n                    <Box sx={{width: '100%'}}>\r\n\r\n                        <DataGrid\r\n                            rows={references}\r\n                            columns={columns}\r\n                            initialState={{\r\n                                pagination: { paginationModel: { pageSize: 10 } },\r\n                            }}\r\n                            rowsPerPageOptions={[10, 30, 50, 70, 100]}\r\n                            autoHeight\r\n                            className=\"data-grid-container\"\r\n                        />\r\n                    </Box>\r\n                    <Box sx={{\r\n                        m: '15px',\r\n                        display: 'flex',\r\n                        justifyContent: 'end',\r\n                    }}>\r\n                    </Box>\r\n                </CardContent>\r\n\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default NewStudentService;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {CardContent, Stack} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {DataGrid} from \"@mui/x-data-grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport moment from \"moment/moment\";\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../../../utills/ServiceUrls\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {BsDownload} from \"react-icons/bs\";\r\nimport PdfNewChange from \"../../student/student_service/PdfNewChange\";\r\n\r\nconst OldStudentService = () => {\r\n\r\n    const userId = useSelector(state => state.user.user.id)\r\n    const [rows, setRows] = useState([]);\r\n    const [loading, setLoading] = useState(false)\r\n    const columns = [\r\n        {\r\n            field: 'count',\r\n            headerName: 'â„–',\r\n            sortable: true,\r\n            width: 50,\r\n            align: 'center',\r\n        },\r\n        {\r\n            minWidth: 250,\r\n            flex: 1,\r\n            field: 'fullName',\r\n            headerName: 'Full name',\r\n            sortable: true,\r\n            valueGetter: (params) =>\r\n                `${params?.row?.user?.firstName || ''} ${params?.row?.user?.lastName || ''}`,\r\n        },\r\n        {\r\n            minWidth: 130,\r\n            flex: 1,\r\n            field: 'type',\r\n            headerName: 'Type ',\r\n            sortable: false,\r\n        },\r\n        {\r\n            minWidth: 250,\r\n            flex: 1,\r\n            field: 'description',\r\n            headerName: 'Description',\r\n            sortable: false,\r\n        },\r\n        {\r\n            minWidth: 150,\r\n            flex: 1,\r\n            field: 'createdAt',\r\n            headerName: 'Date',\r\n            sortable: true,\r\n            valueGetter: (params) => `${moment(params?.row?.createdAt).format(\"DD:MM:YYYY HH:MM\")}`\r\n        },\r\n        {\r\n            minWidth: 100,\r\n            flex: 1,\r\n            field: 'status',\r\n            headerName: 'Status',\r\n            sortable: false,\r\n            align: 'center',\r\n            renderCell: (props) => {\r\n                const {row} = props\r\n                return <Button\r\n                    size=\"small\"\r\n                    sx={{cursor: 'default !important'}}\r\n                    color={row?.status === \"AT_PROCESS\" ? \"primary\" : row?.status === \"CONFIRM\" ? \"success\" : \"error\"}\r\n                >\r\n                    {row?.status === \"AT_PROCESS\" ? \"PENDING\" : row?.status === \"CONFIRM\" ? \"CONFIRM\" : \"REJECT\"}\r\n                </Button>\r\n            }\r\n        },\r\n\r\n        {\r\n            minWidth: 80,\r\n            flex: 1,\r\n            field: 'file',\r\n            headerName: 'File',\r\n            sortable: false,\r\n            align: 'center',\r\n            renderCell: (props) => {\r\n                const {row} = props\r\n                if (row?.status === \"CONFIRM\") {\r\n                 return   <PdfNewChange id={row?.id} />\r\n                } else {\r\n                    return  <Stack direction=\"row\" justifyContent=\"center\" width={\"100%\"}>\r\n                        <Button\r\n                            disabled={row?.status !== \"CONFIRM\"}\r\n                            variant=\"outlined\" size=\"small\"\r\n                            style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"center\",\r\n                                padding: \"10px\",\r\n                                cursor: \"not-allowed\"\r\n                            }}\r\n                        >\r\n                            <BsDownload/>\r\n                        </Button>\r\n                    </Stack>\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n    ];\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        axios.get(BASE_URL + `/reference/getHistory?userId=${userId}`)\r\n            .then(res => {\r\n                const rowsWithCount = res.data.map((row, index) => ({\r\n                    ...row,\r\n                    count: index + 1,\r\n                }));\r\n                setRows(rowsWithCount)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <CardContent>\r\n            <Box sx={{width: '100%'}}>\r\n                <DataGrid\r\n                    rows={rows || []}\r\n                    columns={columns}\r\n                    pageSize={5}\r\n                    loading={loading}\r\n                        className=\"data-grid-container\"\r\n                    autoHeight={true}\r\n                />\r\n            </Box>\r\n        </CardContent>\r\n\r\n    );\r\n};\r\n\r\nexport default OldStudentService;\r\n","import React, {useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {Card, Stack} from \"@mui/material\";\r\nimport NewStudentService from \"./NewStudentService\";\r\nimport OldStudentService from \"./OldStudentService\";\r\nimport {BsArrowLeft, BsClockHistory} from \"react-icons/bs\";\r\n\r\nconst DeanStudentServiceReference = () => {\r\n    const [cardBtn, setCardBtn] = useState(true)\r\n\r\n    return (\r\n        <Container>\r\n            <Box mt={3}>\r\n                <Stack direction=\"row\" justifyContent={'end'} spacing={2} my={2}>\r\n                    {cardBtn ? <Button endIcon={<BsClockHistory/>} onClick={() => setCardBtn(false)} variant={\"contained\"}>\r\n                        history\r\n                    </Button> : <Button startIcon={<BsArrowLeft/>} onClick={() => setCardBtn(true)} variant={\"outlined\"}>\r\n                        back\r\n                    </Button>}\r\n\r\n                </Stack>\r\n            </Box>\r\n            <Card>\r\n                {cardBtn ? (\r\n                    <NewStudentService/>\r\n                ) : (\r\n                    <OldStudentService/>\r\n                )}\r\n\r\n\r\n            </Card>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nconst Container = styled.div`\r\n  .MuiDataGrid-columnHeaderTitleContainer {\r\n    justify-content: center;\r\n  }\r\n  .data-grid-container {\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n  }\r\n  .MuiDataGrid-cell {\r\n    border-right: 1px solid #ccc;\r\n    padding: 8px;\r\n  }\r\n  .MuiDataGrid-colCellTitle {\r\n    border-bottom: 1px solid #ccc;\r\n    padding: 8px;\r\n    font-weight: bold;\r\n  }\r\n  .MuiDataGrid-cell:focus {\r\n    outline: none !important;\r\n    border: none !important;\r\n  }\r\n`\r\n\r\nexport default DeanStudentServiceReference;\r\n","import React, {useRef, useState} from 'react';\r\nimport Logo from '../../../utills/images/logo.png';\r\nimport moment from \"moment\";\r\nimport html2pdf from \"html2pdf.js/src\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {MdOutlineFileDownload} from \"react-icons/md\";\r\nimport QRCode from \"qrcode.react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst PdfFile = ({contentPdf}) => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const pdfContainerRef = useRef(null);\r\n    const valueQRcode = window.location.origin + '/file/services/reference/' + contentPdf?.id;\r\n\r\n    const downloadPDF = async () => {\r\n        setIsLoading(true);\r\n        const content = pdfContainerRef.current;\r\n        const options = {\r\n            margin: 10,\r\n            filename: `certificateOfStudentStatus${new Date().getTime()}.pdf`,\r\n            image: {type: 'jpeg', quality: 1},\r\n            html2canvas: {scale: 2},\r\n            jsPDF: {unit: 'mm', format: 'a4', orientation: 'portrait'},\r\n        }\r\n        await html2pdf().set(options).from(content).save()\r\n        setIsLoading(false)\r\n    };\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                    <Button size={'small'} variant={\"outlined\"} endIcon={<CircularProgress size={18}/>}>\r\n                        download\r\n                    </Button>\r\n            ) : (\r\n                <Button size={'small'} variant={\"contained\"} endIcon={<MdOutlineFileDownload size={22}/>}\r\n                        onClick={downloadPDF}>\r\n                    download\r\n                </Button>\r\n            )}\r\n        <div style={{display: 'none'}}>\r\n            <Container ref={pdfContainerRef}>\r\n                <div className={'header'}>\r\n                    <div>\r\n                        <img width={140} src={Logo} alt=\"logo\"/>\r\n                    </div>\r\n                    <div>\r\n                        <b className={'head_title'}>TOSHKENT KIMYO XALQARO UNIVERSITETI <br/>\r\n                            KIMYO INTERNATIONAL UNIVERSITY IN TASHKENT</b>\r\n                        <br/> <br/>\r\n                        <i style={{fontSize: '14px'}}>100121, Toshkent shahri, Yakkasaroy tumani, Usmon Nosir\r\n                            ko`chasi, 156 uy.\r\n                            Tel.: +998781294040. Veb-sayt: www.kiut.uz. Elektron pochta: info@kiut.uz</i>\r\n                    </div>\r\n                </div>\r\n                <div className={'date'}>\r\n                    <p>â„–:{contentPdf?.id}</p>\r\n                    <p>{moment(contentPdf?.time).format(\"DD.MM.YYYY\")}</p>\r\n                </div>\r\n                <div className={'app_number'}>\r\n                    <p>Application number: {contentPdf?.numeration}</p>\r\n                </div>\r\n                <p className={'core_title'}>\r\n                    CERTIFICATE OF STUDENT STATUS\r\n                </p>\r\n\r\n                <div className={'item'}>\r\n                    <p className={'info'}>Full Name:</p>\r\n                    <p className={'info2'}>{contentPdf?.fullName}</p>\r\n                </div>\r\n\r\n                <div className={'item'}>\r\n                    <p className={'info'}>Passport Number:</p>\r\n                    <p className={'info2'}>{contentPdf?.passport}</p>\r\n                </div>\r\n\r\n                <div className={'item'}>\r\n                    <p className={'info'}>Major:</p>\r\n                    <p className={'info2'}>{contentPdf?.direction}</p>\r\n                </div>\r\n                <div className={'item'}>\r\n                    <p className={'info'}>Grade:</p>\r\n                    <p className={'info2'}>{contentPdf?.grade}</p>\r\n                </div>\r\n                <div className={'item'}>\r\n                    <p className={'info'}>Language of Instruction:</p>\r\n                    <p className={'info2'}>{contentPdf?.eduLang}</p>\r\n                </div>\r\n                <div className={'item'}>\r\n                    <p className={'info'}>Mode of Study:</p>\r\n                    <p className={'info2'}>{contentPdf?.eduType}</p>\r\n                </div>\r\n                <div className={'item'}>\r\n                    <p className={'info'}>Length of Study:</p>\r\n                    <p className={'info2'}>{contentPdf?.lengthOfStudying}</p>\r\n                </div>\r\n                <div className={'item'}>\r\n                    <p className={'info'}>Remark: Rectorâ€™s order:</p>\r\n                    <p className={'info2'}>{contentPdf?.rektororder}</p>\r\n                </div>\r\n                <p className={'info_text'}>\r\n                    Additional information: Kimyo international University in Tashkent provides educational\r\n                    services in the field of higher education based on state license No044527 dated on\r\n                    21.10.2022 issued by the State Inspectorate for Supervision of Quality in Education under\r\n                    the Cabinet of Ministers of the Republic of Uzbekistan and the Decree of the Cabinet\r\n                    Ministers of the Republic of Uzbekistan No.1007 dated on 17.12.2019.\r\n                </p>\r\n                <p className={'given_text'}>\r\n                    This Certificate of student status is given to:\r\n                </p>\r\n                <div className={'flex_footer'}>\r\n                    <div className={'footer'}>\r\n                        <p>\r\n                            Course leader:  {contentPdf?.dean}\r\n                        </p>\r\n                    </div>\r\n                    <div className={'qr_code_box'}>\r\n                        <QRCode value={valueQRcode} size={120}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </Container>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    width: 640px;\r\n    margin: 0 auto;\r\n    font-size: 15px;\r\n    padding: 10px;\r\n    color: black;\r\n    line-height: 1.5;\r\n\r\n    p{\r\n        margin: 0;\r\n        padding:0;\r\n    }\r\n    .header {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border-bottom: 1px solid black;\r\n    }\r\n\r\n    .head_title {\r\n        font-size: 18px;\r\n    }\r\n\r\n    .date {\r\n        padding: 0 25px;\r\n        margin: 10px 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n\r\n    .date_text {\r\n        font-size: 12px;\r\n    }\r\n\r\n\r\n    .app_number {\r\n        padding: 0 25px;\r\n        margin: 0;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    .core_title {\r\n        text-align: center;\r\n        margin-top: 20px;\r\n        font-weight: 500;\r\n    }\r\n\r\n    .item {\r\n        margin-top: 15px;\r\n        padding-left: 20px;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n    }\r\n\r\n    .info {\r\n        width: 40%;\r\n    }\r\n\r\n    .info2 {\r\n        width: 60%;\r\n    }\r\n\r\n    .info_text {\r\n        margin-top: 15px;\r\n        padding: 0 20px;\r\n        line-height: 1.5;\r\n        text-align: justify;\r\n    }\r\n\r\n    .given_text {\r\n        padding-bottom: 20px;\r\n        margin-top: 20px;\r\n        margin-bottom: 10px;\r\n        border-bottom: 1px solid #000;\r\n    }\r\n\r\n    .footer {\r\n        margin-top: 25px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    .flex_footer {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n    \r\n\r\n    .qr_code_box {\r\n        margin-top: 25px;\r\n    }\r\n\r\n`;\r\n\r\nexport default PdfFile;\r\n","import React, {memo, useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {BASE_URL} from \"../../../utills/ServiceUrls\";\r\nimport PdfFile from \"./PdfFile\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction PdfNewChange({id}) {\r\n    const [contentPdf, setContentPdf] = useState(null)\r\n    useEffect(() => {\r\n        axios.get(BASE_URL + `/student/getDataForStudentReference2/${id}`)\r\n            .then(res => {\r\n                console.log(res, \"----reference info-----\")\r\n                setContentPdf(res.data.obj)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <Container>\r\n\r\n            {contentPdf && <PdfFile contentPdf={contentPdf}/>}\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n\r\n`\r\nexport default memo(PdfNewChange);"],"names":["user","useSelector","state","headers","getHeaders","useState","references","setReferences","loading","setLoading","columns","field","headerName","sortable","width","align","flex","minWidth","valueGetter","params","row","firstName","lastName","moment","createdAt","format","renderCell","props","Button","size","sx","cursor","color","status","id","Stack","direction","justifyContent","spacing","disabled","variant","onClick","fetchChangeStatus","Box","display","alignItems","gap","CircularProgress","useEffect","sse","EventSource","BASE_URL","addEventListener","event","data","JSON","parse","map","index","count","onerror","close","axios","then","res","console","log","toast","catch","err","finally","CardContent","DataGrid","rows","initialState","pagination","paginationModel","pageSize","rowsPerPageOptions","autoHeight","className","m","userId","setRows","PdfNewChange","style","padding","rowsWithCount","Container","styled","cardBtn","setCardBtn","mt","my","endIcon","startIcon","Card","contentPdf","isLoading","setIsLoading","pdfContainerRef","useRef","valueQRcode","window","location","origin","downloadPDF","content","current","options","margin","filename","Date","getTime","image","type","quality","html2canvas","scale","jsPDF","unit","orientation","html2pdf","set","from","save","ref","src","Logo","alt","fontSize","time","numeration","fullName","passport","grade","eduLang","eduType","lengthOfStudying","rektororder","dean","value","setContentPdf","obj","memo"],"sourceRoot":""}