{"version":3,"file":"static/js/9273.49c8c5b0.chunk.js","mappings":"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","sources":["components/teacher/teacherScience/TeacherScience.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {extrasmall, large, medium, small, xlarge} from \"../../../responsiv\";\r\nimport {IoBookmarks} from \"react-icons/io5\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {BASE_URL, getHeaders, mainColor} from \"../../../utills/ServiceUrls\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {educationYearStatisticsFetching} from \"../../../redux/slice/educationYear/education_year_statistics_slice\";\r\nimport {fetchEducationYear} from \"../../../redux/actions/educationYear/education_year_actions\";\r\nimport axios from \"axios\";\r\nimport {ImBook} from \"react-icons/im\";\r\nimport {setLessonsTeacher} from \"../../../redux/actions/lessonsTeacher/lessons_teacher_actions\";\r\n\r\nconst TeacherScience = () => {\r\n    const courseLevelData = [1, 2, 3, 4,]\r\n    const user = useSelector(state => state?.user?.user) || null;\r\n    const {headers} = getHeaders();\r\n    const navigate = useNavigate()\r\n    const educationYear = useSelector(state => state?.educationYear?.educationYear) || null;\r\n    const [eduYears, setEduYears] = useState([]);\r\n    const [scien, setScien] = useState(\"\");\r\n    const [lessons, setLessons] = useState([]);\r\n    const [courseLevel, setCourseLevel] = useState(\"\")\r\n    const [allLessons, setAllLessons] = useState([]);\r\n    const [allGroup, setallGroup] = useState([])\r\n    const [lessonId, setLessonId] = useState(null)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const handleChange = (event) => {\r\n        event.target.value !== educationYear?.name && dispatch(educationYearStatisticsFetching())\r\n        dispatch(fetchEducationYear(eduYears?.find(i => i?.name === event.target.value)))\r\n\r\n    };\r\n    const fetchEducationYears = async () => {\r\n        await axios.get(BASE_URL + '/education/educationYearsForSelected', {headers})\r\n            .then(res => {\r\n                // console.log(res?.data?.obj,\"education years res come\")\r\n                setEduYears(res?.data?.obj);\r\n                dispatch(fetchEducationYear(res?.data?.obj?.[0]))\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    const fetchLessons = async () => {\r\n\r\n        educationYear && educationYear?.id && await axios.get(`${BASE_URL}/groupConnect/subjectsOfTeacher/${user?.id}?educationId=${educationYear?.id}`)\r\n            .then((response) => {\r\n                setLessons(response?.data?.obj);\r\n                // console.log(response?.data?.obj)\r\n                // setScien(response?.data?.obj[0]?.name)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEducationYears();\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        fetchLessons()\r\n    }, [educationYear])\r\n\r\n\r\n    const clickItems = (course, ...data) => {\r\n        const courseData = {\r\n            educationYear: data[0],\r\n            groupData: data[1],\r\n            allGroup: data[2],\r\n        }\r\n        dispatch(setLessonsTeacher(courseData))\r\n        navigate(`${course}`)\r\n    }\r\n    const handleChange1 = (event) => {\r\n        setScien(event.target.value);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        educationYear && scien && scien?.length > 0 && courseLevel &&\r\n        axios.get(`${BASE_URL}/plan/getPlansForTeacherSciences?educationYearId=${educationYear?.id}&level=${courseLevel}&subjectId=${lessons?.find(l => l?.name === scien)?.id}`, {headers})\r\n            .then((response) => {\r\n                const data = response.data?.obj.reduce((acc, item) => {\r\n                    const {eduType, lang} = item;\r\n                    const key = `${eduType}_${lang}`;\r\n\r\n                    if (!acc[key]) {\r\n                        acc[key] = [];\r\n                    }\r\n\r\n                    acc[key].push(item);\r\n                    return acc;\r\n                }, {});\r\n\r\n                const result = Object.values(data)\r\n                setAllLessons(response.data?.secondObj)\r\n                setallGroup(response.data?.obj)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [educationYear, scien, courseLevel])\r\n\r\n\r\n    useEffect(() => {\r\n        if (lessons.length > 0) {\r\n            setLessonId(lessons.find(item => item.name === scien)?.id)\r\n        }\r\n\r\n    }, [lessons, scien])\r\n\r\n    useEffect(() => {\r\n        educationYear &&\r\n        axios.get(`${BASE_URL}/plan/getAllPlansForTeacherSciences?educationYearId=${educationYear?.id}`, {headers})\r\n            .then((response) => {\r\n                console.log(response?.data, \"response all\");\r\n                const data = response.data?.obj.reduce((acc, item) => {\r\n                    const {eduType, lang} = item;\r\n                    const key = `${eduType}_${lang}`;\r\n\r\n                    if (!acc[key]) {\r\n                        acc[key] = [];\r\n                    }\r\n\r\n                    acc[key].push(item);\r\n                    return acc;\r\n                }, {});\r\n\r\n                const result = Object.values(data)\r\n\r\n                setAllLessons(response.data?.secondObj)\r\n                setallGroup(response.data?.obj)\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <TitleMain><ImBook/> My courses</TitleMain>\r\n            <CardInput>\r\n                <Box sx={{minWidth: 180, background: \"#fff\"}}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel htmlFor='semestr'>O'quv yilli</InputLabel>\r\n                        <Select\r\n                            labelId=\"semestr\"\r\n                            id=\"demo-simple-select\"\r\n                            value={educationYear?.name}\r\n                            onChange={handleChange}\r\n                            label=\"O'quv yili\"\r\n                        >\r\n                            {eduYears?.map((item, key) => (\r\n                                <MenuItem key={item?.id} value={item?.name}>{item?.name}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n                <Box sx={{width: 200}}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"fanselect\">Fan</InputLabel>\r\n                        <Select\r\n                            labelId=\"fanselect\"\r\n                            id=\"demo-simple-select2\"\r\n                            value={scien}\r\n                            label=\"Fan\"\r\n                            onChange={handleChange1}\r\n                        >\r\n                            {lessons?.map((item, key) => (\r\n                                <MenuItem key={item?.id} value={item?.name}>{item?.name}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n                <Box sx={{width: 200}}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Course</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={courseLevel}\r\n                            label=\"Course\"\r\n                            onChange={(e) => setCourseLevel(e.target.value)}\r\n                        >\r\n                            {courseLevelData?.map((item, key) => (\r\n                                <MenuItem key={key} value={item}>{item}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n            </CardInput>\r\n\r\n            <BoxCardMain>\r\n                {allLessons.length > 0 && allLessons.map((group, key) => (\r\n\r\n                    <CardSience key={key}\r\n                                onClick={() => clickItems(group.lessonName, educationYear, group, allGroup)}>\r\n                        <CardTitle fw={\"bold\"} fs={\"22px\"} cl={\"steelblue\"}>\r\n                            <IoBookmarks size={40}/>\r\n                            {group.lessonName}\r\n                        </CardTitle>\r\n                        <CardTitle fs={\"15px\"}>\r\n                            Course: {group.level}\r\n                        </CardTitle>\r\n                        <CardTitle fs={\"15px\"}>\r\n                            Language : {group.eduLang}\r\n                        </CardTitle>\r\n                        <CardTitle fs={\"15px\"}>\r\n                            Type of education : {group.eduType}\r\n                        </CardTitle>\r\n\r\n                    </CardSience>\r\n\r\n\r\n                ))}\r\n\r\n            </BoxCardMain>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst CardInput = styled.div`\r\n    padding: 15px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 30px;\r\n    ${extrasmall({\r\n        justifyContent: \"center\"\r\n    })}\r\n`\r\n\r\n\r\nconst TitleMain = styled.h1`\r\n    margin-left: 20px;\r\n    color: ${mainColor};\r\n    font-size: 25px;\r\n    font-weight: bold;\r\n    ${extrasmall({\r\n        textAlign: \"center\",\r\n        fontSize: \"20px\",\r\n    })}\r\n`;\r\nconst CardTitle = styled.p`\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    color: ${props => props.cl || \"black\"};\r\n    font-size: ${props => props.fs};\r\n    font-weight: ${props => props.fw || \"normal\"};\r\n`\r\n\r\nconst CardSience = styled.div`\r\n    border: 1px solid #f1eded;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    background-color: #FFFF;\r\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\r\n    cursor: pointer;\r\n    transition: 0.2s;\r\n\r\n    :hover {\r\n        transform: scale(1.02);\r\n    }\r\n`;\r\nconst BoxCardMain = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    gap: 20px;\r\n    padding: 10px;\r\n    ${xlarge({\r\n        gridTemplateColumns: \"1fr 1fr 1fr  \",\r\n    })}\r\n    ${large({\r\n        gridTemplateColumns: \"1fr 1fr 1fr  \",\r\n    })}\r\n    ${medium({\r\n        gridTemplateColumns: \"1fr 1fr \",\r\n    })}\r\n    ${small({\r\n        gridTemplateColumns: \"1fr 1fr \",\r\n    })}\r\n    ${extrasmall({\r\n        gridTemplateColumns: \"1fr \",\r\n    })}\r\n`;\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    padding: 1rem;\r\n`;\r\nexport default TeacherScience;\r\n"],"names":["CardInput","styled","extrasmall","justifyContent","TitleMain","mainColor","textAlign","fontSize","CardTitle","props","cl","fs","fw","CardSience","BoxCardMain","xlarge","gridTemplateColumns","large","medium","small","Container","courseLevelData","user","useSelector","state","headers","getHeaders","navigate","useNavigate","educationYear","useState","eduYears","setEduYears","scien","setScien","lessons","setLessons","courseLevel","setCourseLevel","allLessons","setAllLessons","allGroup","setallGroup","setLessonId","dispatch","useDispatch","fetchEducationYears","axios","BASE_URL","then","res","data","obj","fetchEducationYear","catch","err","console","log","fetchLessons","id","response","useEffect","length","find","l","name","reduce","acc","item","eduType","lang","key","push","Object","values","secondObj","sx","minWidth","background","fullWidth","htmlFor","labelId","value","onChange","event","target","educationYearStatisticsFetching","i","label","map","width","e","group","onClick","course","courseData","groupData","setLessonsTeacher","clickItems","lessonName","size","level","eduLang"],"sourceRoot":""}