{"version":3,"file":"static/js/9430.5ea79eae.chunk.js","mappings":"sYAoNA,IAAMA,EAAYC,EAAAA,GAAAA,GAAH,0LAMFC,EAAAA,IAGPC,EAAAA,EAAAA,IAAW,CACbC,UAAW,SACXC,SAAU,UAMRC,EAAYL,EAAAA,GAAAA,IAAH,0DAIf,UAtNA,WAA4B,IAAD,EAEjBM,EAAqB,CAAC,WAAY,WAAY,oBAAoB,2BAA2B,kBAAmB,YAC/GC,GAAWC,EAAAA,EAAAA,MAAXD,QACDE,EAAU,CACZ,CAACC,MAAO,KAAMC,WAAY,KAAMC,MAAO,GAAIC,UAAU,GACrD,CAACH,MAAO,WAAYC,WAAY,YAAaC,MAAO,IAAKC,UAAU,GACnE,CAACH,MAAO,YAAaC,WAAY,QAASC,MAAO,IAAKC,UAAU,GAChE,CAACH,MAAO,WAAYC,WAAY,WAAYC,MAAO,IAAKC,UAAU,GAClE,CAACH,MAAO,QAASC,WAAY,QAASC,MAAO,IAAKC,UAAU,GAC5D,CAACH,MAAO,OAAQC,WAAY,OAAQC,MAAO,IAAKC,UAAU,GAC1D,CAACH,MAAO,cAAeC,WAAY,gBAAiBC,MAAO,IAAKC,UAAU,GAC1E,CACIH,MAAO,eACPC,WAAY,gBACZC,MAAO,IACPC,UAAU,EACVC,WAAY,SAACC,GAET,OADAC,QAAQC,IAAIF,IAEJ,SAAC,IAAD,CAAKG,GAAI,CAACN,MAAO,SAAjB,UACI,SAAC,IAAD,CAAaO,WAAS,EAAtB,UACI,SAAC,IAAD,CACIC,KAAK,QACLC,QAAQ,2BACRC,GAAG,qBACHC,SAAU,SAACC,GAAD,OAASC,EAAcD,EAAMT,IAJ3C,SAMKT,EAAmBoB,KAAI,SAAAC,GAAI,OACxB,SAAC,IAAD,CAAqBC,MAAOD,EAA5B,SAAmCA,GAApBA,cAQ/C,CAACjB,MAAO,cAAeC,WAAY,SAAUC,MAAO,IAAKC,UAAU,IAGjEgB,GAAgBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,oBAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAOC,eAAX,aAAI,EAAgBA,YAAY,KACvE,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4CF,EAAAA,EAAAA,UAAS,IAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,IAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACMC,GAASC,EAAAA,EAAAA,MACf,SAASC,IACY,KAAbJ,GAAqC,KAAlBF,EACnBO,EAAAA,EAAAA,IAAUC,EAAAA,GAAQ,oCAAwC,CAACrC,QAAAA,IACtDsC,MAAK,SAAAC,GACFX,EAAQW,EAAIZ,SAEfa,OAAM,SAAAC,GACHhC,QAAQC,IAAI+B,MAGH,KAAZV,GAAqC,KAAnBF,EACvBO,EAAAA,EAAAA,IAAUC,EAAAA,GAAQ,wEAAoEN,GAAa,CAAC/B,QAAAA,IAC/FsC,MAAK,SAAAC,GACFX,EAAQW,EAAIZ,SAEfa,OAAM,SAAAC,GACHhC,QAAQC,IAAI+B,MAGE,KAAlBZ,GAAsC,KAAdE,GAE5BK,EAAAA,EAAAA,IAAUC,EAAAA,GAAQ,wEAAoER,EAApE,sBAAgGE,GAAa,CAAC/B,QAAAA,IAC3HsC,MAAK,SAAAC,GACFX,EAAQW,EAAIZ,SAEfa,OAAM,SAAAC,GACHhC,QAAQC,IAAI+B,OAK5BC,EAAAA,EAAAA,YAAU,WACNP,MACD,CAACN,EAAgBE,IAEpB,IAAMb,EAAgB,SAACD,EAAM0B,GACzB,IAAMC,EAAa3B,EAAM4B,OAAOxB,MACzBN,EAAM4B,EAAN5B,GACPN,QAAQC,IAAIK,GACZqB,EAAAA,EAAAA,IAAUC,EAAAA,GAAS,uCAAD,OAAwCtB,EAAxC,wBAA0D6B,IACvEN,MAAK,SAACQ,GACHX,IACAY,EAAAA,GAAAA,QAAc,4BAEjBP,OAAM,SAACQ,GACJvC,QAAQC,IAAIsC,EAAM,uBAClBD,EAAAA,GAAAA,MAAY,2BAWxB,OACI,UAACjD,EAAD,YACI,UAACN,EAAD,YACI,0BACI,SAAC,MAAD,IADJ,eAGA,SAAC,IAAD,CAAQyD,QAAS,kBAAMhB,GAAU,IAAIiB,QAAQ,WAAWC,WAAW,SAAC,MAAD,IAAnE,sBAMJ,UAAC,IAAD,CACAxC,GAAI,CACAyC,GAAI,OACJC,QAAS,OACTC,IAAI,QAJR,WAOI,SAAC,IAAD,CAAK3C,GAAI,CAACN,MAAO,KAAjB,UACI,UAAC,IAAD,CAAaO,WAAS,EAAtB,WACI,SAAC,IAAD,CAAYG,GAAG,2BAAf,wBACA,UAAC,IAAD,CACID,QAAQ,2BACRC,GAAG,qBACHM,MAAOU,EACPwB,MAAM,YACNvC,SAlCF,SAACC,GACnBe,EAAaf,EAAM4B,OAAOxB,QA4BV,WAOI,SAAC,IAAD,CAAUA,MAAM,GAAhB,UACI,kCARR,OAUKC,QAVL,IAUKA,GAVL,UAUKA,EAAekC,iBAVpB,aAUK,EAA0BrC,KAAI,SAACsC,GAAD,OAC3B,SAAC,IAAD,CAAyBpC,MAAK,OAAEoC,QAAF,IAAEA,OAAF,EAAEA,EAAM1C,GAAtC,gBAA2C0C,QAA3C,IAA2CA,OAA3C,EAA2CA,EAAMC,WAAjD,OAAeD,QAAf,IAAeA,OAAf,EAAeA,EAAM1C,gBAKrC,SAAC,IAAD,CAAKJ,GAAI,CAACN,MAAO,KAAjB,UACI,UAAC,IAAD,CAAaO,WAAS,EAAtB,WACI,SAAC,IAAD,CAAYG,GAAG,2BAAf,qBACA,UAAC,IAAD,CACID,QAAQ,2BACRC,GAAG,qBACHM,MAAOQ,EACP0B,MAAM,SACNvC,SAlDF,SAACC,GACnBa,EAAkBb,EAAM4B,OAAOxB,QA4Cf,WAOI,SAAC,IAAD,CAAUA,MAAM,GAAhB,UACI,kCAtJV,CAAC,WAAY,oBAAqB,2BAA4B,kBAAmB,YAwJhEF,KAAI,SAACsC,GAAD,OACX,SAAC,IAAD,CAAqBpC,MAAOoC,EAA5B,SAAmCA,GAApBA,kBAOnC,SAAC,IAAD,CAAM9C,GAAI,CAACyC,GAAI,GAAf,UACI,SAAC,IAAD,WACI,SAAC,IAAD,CACIO,mBAAiB,EACjBC,MAAO,CAACvD,MAAO,OAAQwD,UAAW,mBAClC3D,QAASA,EACT4D,KAAMnC,EACNoC,WAAY,CAACC,QAASC,EAAAA,GACtBC,YAAU,EACVC,SAAU,GACVC,cAAY,kBACLzC,EAAKyC,cADA,IAERlE,QAAS,CACLmE,sBAAuB,CACnBtD,IAAI,EACJuD,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,UAAU,EACVC,aAAa,EACbC,MAAM,EACNC,cAAc","sources":["components/dekan/arxiv/ArchiveForDean.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {BASE_URL, getHeaders, mainColor} from \"../../../utills/ServiceUrls\";\r\nimport {AiOutlineUnorderedList} from \"react-icons/ai\";\r\nimport {Card, CardContent} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport {DataGrid, GridToolbar} from \"@mui/x-data-grid\";\r\nimport axios from \"axios\";\r\nimport {useSelector} from \"react-redux\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport {toast} from \"react-toastify\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {BiArrowBack} from \"react-icons/bi\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {extrasmall} from \"../../../responsiv\";\r\n\r\nfunction ArchiverForDean() {\r\n    const statusEdu = ['FINISHED', 'ACADEMIC_VACATION', 'EXPELLED_FROM_UNIVERSITY', 'ACADEMIC_DEBTOR', 'TRANSFER',]\r\n    const statusEduForChange = ['TEACHING', 'FINISHED', 'ACADEMIC_VACATION','EXPELLED_FROM_UNIVERSITY','ACADEMIC_DEBTOR', 'TRANSFER',]\r\n    const {headers} = getHeaders();\r\n    const columns = [\r\n        {field: 'id', headerName: 'ID', width: 40, editable: false},\r\n        {field: 'fullName', headerName: 'Full Name', width: 400, editable: false,},\r\n        {field: 'groupName', headerName: 'Group', width: 100, editable: false,},\r\n        {field: 'passport', headerName: 'Passport', width: 150, editable: false},\r\n        {field: 'login', headerName: 'Login', width: 200, editable: false},\r\n        {field: 'rfid', headerName: 'RFID', width: 200, editable: false},\r\n        {field: 'rektororder', headerName: 'Rektors order', width: 150, editable: false},\r\n        {\r\n            field: 'changeStatus',\r\n            headerName: 'Change Status',\r\n            width: 180,\r\n            editable: false,\r\n            renderCell: (cellValues) => {\r\n                console.log(cellValues)\r\n                return (\r\n                        <Box sx={{width: \"180px\"}}>\r\n                            <FormControl fullWidth>\r\n                                <Select\r\n                                    size=\"small\"\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    onChange={(event)=>handleChange4(event,cellValues)}\r\n                                >\r\n                                    {statusEduForChange.map(name => (\r\n                                        <MenuItem key={name} value={name}>{name}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                );\r\n            }\r\n        },\r\n        {field: 'teachStatus', headerName: 'Status', width: 180, editable: false,},\r\n\r\n    ];\r\n    const deanFaculties = useSelector(state => state?.dekanat?.dekanat) || null;\r\n    const [data, setData] = useState([]);\r\n    const [selectedStatus, setSelectedStatus] = useState(\"\")\r\n    const [direction, setDirection] = useState(\"\");\r\n    const navigate=useNavigate()\r\n    function fetchData() {\r\n        if (direction ===\"\" && selectedStatus ===\"\" ) {\r\n            axios.get(BASE_URL + `/student/getAllStudentDataForDean`, {headers})\r\n                .then(res => {\r\n                    setData(res.data)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n        else if (direction!==\"\" && selectedStatus === \"\" ) {\r\n            axios.get(BASE_URL + `/student/getStudentDataForTeachStatusAllByFacultyId?facultyId=${direction}`, {headers})\r\n                .then(res => {\r\n                    setData(res.data)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n        else if(selectedStatus !==\"\" && direction !== \"\"){\r\n\r\n            axios.get(BASE_URL + `/student/getStudentDataForTeachStatusAndFacultyId?teachStatus=${selectedStatus}&facultyId=${direction}`, {headers})\r\n                .then(res => {\r\n                    setData(res.data)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [selectedStatus, direction]);\r\n\r\n    const handleChange4 = (event,editData) => {\r\n        const statusName = event.target.value\r\n        const {id} = editData\r\n        console.log(id)\r\n        axios.get(BASE_URL+`/student/changeTeachStatusOfStudent/${id}?teachStatus=${statusName}`)\r\n            .then((response) => {\r\n                fetchData()\r\n                toast.success('Success change status')\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error,\"error change status\")\r\n                toast.error('Error change status')\r\n            })\r\n\r\n    };\r\n    const handleChange1 = (event) => {\r\n        setDirection(event.target.value);\r\n    };\r\n    const handleChange2 = (event) => {\r\n        setSelectedStatus(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <TitleMain>\r\n                <p>\r\n                    <AiOutlineUnorderedList/> Archive\r\n                </p>\r\n                <Button onClick={() => navigate(-1)} variant=\"outlined\" startIcon={<BiArrowBack/>}>\r\n                    Back\r\n                </Button>\r\n            </TitleMain>\r\n\r\n\r\n            <Box\r\n            sx={{\r\n                mt: '15px',\r\n                display: 'flex',\r\n                gap:'20px',\r\n            }}\r\n            >\r\n                <Box sx={{width: 150}}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Yo'nalish</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={direction}\r\n                            label=\"Yo'nalish\"\r\n                            onChange={handleChange1}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>All</em>\r\n                            </MenuItem>\r\n                            {deanFaculties?.faculties?.map((item) => (\r\n                                <MenuItem key={item?.id} value={item?.id}>{item?.shortName}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n                <Box sx={{width: 150}}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={selectedStatus}\r\n                            label=\"Status\"\r\n                            onChange={handleChange2}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>All</em>\r\n                            </MenuItem>\r\n                            {statusEdu.map((item) => (\r\n                                <MenuItem key={item} value={item}>{item}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Card sx={{mt: 3}}>\r\n                <CardContent>\r\n                    <DataGrid\r\n                        checkboxSelection\r\n                        style={{width: \"100%\", minHeight: \"300px!important\"}}\r\n                        columns={columns}\r\n                        rows={data}\r\n                        components={{Toolbar: GridToolbar}}/*** print and excel ****/\r\n                        autoHeight\r\n                        pageSize={20}\r\n                        initialState={{ // hide items\r\n                            ...data.initialState,\r\n                            columns: {\r\n                                columnVisibilityModel: {\r\n                                    id: false,\r\n                                    cardNo: false,\r\n                                    login: false,\r\n                                    email: false,\r\n                                    passport: false,\r\n                                    rektororder: false,\r\n                                    rfid: false,\r\n                                    changeStatus: false,\r\n                                },\r\n                            },\r\n                        }}\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst TitleMain = styled.h1`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  p {\r\n    color: ${mainColor};\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    ${extrasmall({\r\n    textAlign: \"center\",\r\n    fontSize: \"20px\",\r\n})}\r\n  }\r\n`;\r\n\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  padding: 1rem;\r\n`\r\nexport default ArchiverForDean;"],"names":["TitleMain","styled","mainColor","extrasmall","textAlign","fontSize","Container","statusEduForChange","headers","getHeaders","columns","field","headerName","width","editable","renderCell","cellValues","console","log","sx","fullWidth","size","labelId","id","onChange","event","handleChange4","map","name","value","deanFaculties","useSelector","state","dekanat","useState","data","setData","selectedStatus","setSelectedStatus","direction","setDirection","navigate","useNavigate","fetchData","axios","BASE_URL","then","res","catch","err","useEffect","editData","statusName","target","response","toast","error","onClick","variant","startIcon","mt","display","gap","label","faculties","item","shortName","checkboxSelection","style","minHeight","rows","components","Toolbar","GridToolbar","autoHeight","pageSize","initialState","columnVisibilityModel","cardNo","login","email","passport","rektororder","rfid","changeStatus"],"sourceRoot":""}