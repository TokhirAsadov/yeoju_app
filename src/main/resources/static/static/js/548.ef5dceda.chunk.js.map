{"version":3,"file":"static/js/548.ef5dceda.chunk.js","mappings":"6PAuIMA,EAAUC,EAAAA,GAAAA,IAAH,iMAQPC,EAAYD,EAAAA,GAAAA,IAAH,4CACE,SAAAE,GAAK,OAAIA,EAAMC,IAAM,UAEhCC,EAAYJ,EAAAA,GAAAA,IAAH,wBAETK,EAAWL,EAAAA,GAAAA,IAAH,wjBAODM,EAAAA,IAmBPC,EAAQP,EAAAA,GAAAA,MAAH,mLASLQ,EAAOR,EAAAA,GAAAA,IAAH,2TAiBJS,EAAQT,EAAAA,GAAAA,IAAH,8CAILU,EAAMV,EAAAA,GAAAA,IAAH,8FAIIM,EAAAA,IAGPK,EAASX,EAAAA,GAAAA,IAAH,0CAINY,EAAYZ,EAAAA,GAAAA,IAAH,oEAOf,UArNqB,WAAO,IAAD,MAEjBa,EAAW,CAEb,CACIC,OAAQ,aACRC,WAAY,IAGhB,CACID,OAAQ,sBACRC,WAAY,IAGhB,CACID,OAAQ,WACRC,WAAY,IAEhB,CACID,OAAQ,YACRC,WAAY,IAEhB,CACID,OAAQ,kBACRC,WAAY,IAEhB,CACID,OAAQ,qCACRC,WAAY,IAEhB,CACID,OAAQ,YACRC,WAAY,IAEhB,CACID,OAAQ,cACRC,WAAY,IAEhB,CACID,OAAQ,qBACRC,WAAY,IAEhB,CACID,OAAQ,8CACRC,WAAY,IAEhB,CACID,OAAQ,iFACRC,WAAY,IAEhB,CACID,OAAQ,sDACRC,WAAY,IAEhB,CACID,OAAQ,iDACRC,WAAY,IAEhB,CACID,OAAQ,iCACRC,WAAY,KAIpB,GAA0BC,EAAAA,EAAAA,UAAQ,UAACH,EAAS,UAAV,aAAC,EAAaC,QAAhD,eAAOG,EAAP,KAAcC,EAAd,KAEA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACND,EAAQP,EAASS,QAAO,SAAAC,GAAI,OAAIA,EAAKT,SAAWG,QACjD,CAACA,IAMJ,OACI,UAACL,EAAD,YACI,SAACD,EAAD,WACI,UAACD,EAAD,YACI,SAACD,EAAD,wBACA,UAACF,EAAD,YACI,kBAAOiB,MAAO,CAACC,QAAS,WAGxB,SAACjB,EAAD,WAAM,SAAC,MAAD,eAIlB,eAAIgB,MAAO,CAACE,MAAO,WAEnB,gBAAKC,UAAU,kBAAf,UACI,SAAC,IAAD,CACIC,QAAQ,aACRC,eAAa,EACbC,0BAAwB,EACxBb,MAAOA,EACPc,SA1BK,SAACC,EAAOC,GACzBf,EAASe,IA0BGC,eAAe,GANnB,SAQKrB,EAASsB,KAAI,SAACC,EAAKC,GAAN,OACV,SAAC,IAAD,CACIC,UAAWjC,EAEXY,MAAOmB,EAAItB,OACXyB,OACI,SAACtC,EAAD,CAAWE,IAAO,OAAHiC,QAAG,IAAHA,OAAA,EAAAA,EAAKtB,OAAO0B,QAAS,IAAM,OAA1C,gBAAmDJ,QAAnD,IAAmDA,OAAnD,EAAmDA,EAAKtB,UAHvDuB,WASrB,SAACtC,EAAD,WACK,UAAAoB,EAAK,UAAL,eAASJ,WAAWyB,QAAS,EAA7B,UAAiCrB,EAAK,UAAtC,aAAiC,EAASJ,WAAWoB,KAAI,SAACZ,EAAMc,GAAP,OACtD,SAACjC,EAAD,UACKmB,EAAKkB,UADMJ,OAIhB,SAAC,IAAD,CAAcK,EAAG,MAAOC,EAAG","sources":["components/teacher/files/TeacherFiles.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {mainColor} from \"../../../utills/ServiceUrls\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport EmptyDataImg from \"../../emptyDataImg/EmptyDataImg\";\r\nimport {FaPaperclip} from \"react-icons/fa\";\r\n\r\n\r\nconst TeacherFiles = () => {\r\n\r\n    const datafeke = [\r\n\r\n        {\r\n            lesson: \"Ochiq dars\",\r\n            lessoninfo: []\r\n        },\r\n\r\n        {\r\n            lesson: \"Sovrindor talabalar\",\r\n            lessoninfo: []\r\n        },\r\n\r\n        {\r\n            lesson: \"Tezislar\",\r\n            lessoninfo: []\r\n        },\r\n        {\r\n            lesson: \"Maqolalar\",\r\n            lessoninfo: []\r\n        },\r\n        {\r\n            lesson: \"ITI da ishtirok\",\r\n            lessoninfo: []\r\n        },\r\n        {\r\n            lesson: \"Xalqaro (impakt-faktorli) nashrlar\",\r\n            lessoninfo: []\r\n        },\r\n        {\r\n            lesson: \"Ixtirolar\",\r\n            lessoninfo: []\r\n        },\r\n        {\r\n            lesson: \"Monografiya\",\r\n            lessoninfo: []\r\n        },\r\n        {\r\n            lesson: \"Darslik, qo`llanma\",\r\n            lessoninfo: []\r\n        },\r\n        {\r\n            lesson: \"Yakka mualliflikdagi darslik yoki qo`llanma\",\r\n            lessoninfo: []\r\n        },\r\n        {\r\n            lesson: \"Ilmiy rahbarligidagi bitta DSc yoki ikkita PhD himoyasi dissersatsiya himoyasi\",\r\n            lessoninfo: []\r\n        },\r\n        {\r\n            lesson: \"Doktorlik (DSc yoki PhD) dissersatsiyasini himoyasi\",\r\n            lessoninfo: []\r\n        },\r\n        {\r\n            lesson: \"Xorijda malaka oshirish yoki stajirofka o`tash\",\r\n            lessoninfo: []\r\n        },\r\n        {\r\n            lesson: \"Akademik ilmiy unvoniga egalik\",\r\n            lessoninfo: []\r\n        },\r\n\r\n    ]\r\n    const [value, setValue] = useState(datafeke[0]?.lesson);\r\n\r\n    const [date, setDate] = useState([])\r\n\r\n    useEffect(() => {\r\n        setDate(datafeke.filter(item => item.lesson === value))\r\n    }, [value])\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Header>\r\n                <Row>\r\n                    <Title>Diplom: </Title>\r\n                    <Label>\r\n                        <input style={{display: \"none\"}}\r\n                            // onChange={savePhoto}\r\n                        />\r\n                        <Icon><FaPaperclip/></Icon>\r\n                    </Label>\r\n                </Row>\r\n            </Header>\r\n            <hr style={{width: \"100%\"}}/>\r\n\r\n            <div className='teacherfiletabs'>\r\n                <Tabs\r\n                    variant=\"scrollable\"\r\n                    scrollButtons\r\n                    allowScrollButtonsMobile\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"\"\r\n                >\r\n                    {datafeke.map((itm, key) => (\r\n                        <Tab\r\n                            component={tabsitem}\r\n                            key={key}\r\n                            value={itm.lesson}\r\n                            label={(\r\n                                <TabsTitle fs={itm?.lesson.length > 35 && \"10px\"}>{itm?.lesson}</TabsTitle>\r\n                            )\r\n                            }/>\r\n                    ))}\r\n                </Tabs>\r\n            </div>\r\n            <Tabsbox>\r\n                {date[0]?.lessoninfo.length > 0 ? date[0]?.lessoninfo.map((item, key) => (\r\n                    <Tabsitems key={key}>\r\n                        {item.allCount}\r\n                    </Tabsitems>\r\n                )) : (\r\n                    <EmptyDataImg w={\"200\"} h={\"180\"}/>\r\n                )}\r\n            </Tabsbox>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Tabsbox = styled.div`\r\n    width: 100%;\r\n    padding: 1rem;\r\n    background-color: #ffffff;\r\n    min-height: 300px;\r\n    box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.2);\r\n    border-radius: 5px;\r\n`\r\nconst TabsTitle = styled.div`\r\n    font-size: ${props => props.fs || \"15px\"}\r\n`;\r\nconst Tabsitems = styled.div`\r\n`;\r\nconst tabsitem = styled.div`\r\n    width: 230px !important;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    border-radius: 8px !important;;\r\n    color: ${mainColor};\r\n    padding: 5px 20px !important;\r\n    height: 42px !important;\r\n    margin: 5px !important;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0 4px 12px;\r\n\r\n    &:hover {\r\n        color: #ffffff !important;\r\n        background-color: #5093f1 !important;\r\n    }\r\n\r\n    &.Mui-selected {\r\n        color: #ffffff !important;\r\n        background-color: #5093f1 !important;\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst Label = styled.label`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: #fff;\r\n    border-radius: 0.5rem;\r\n    cursor: pointer;\r\n`\r\n\r\nconst Icon = styled.div`\r\n    width: 35px;\r\n    height: 35px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 20px;\r\n    background-color: #fff;\r\n    border-radius: 0.5rem;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background-color: rgba(255, 255, 255, 0.4);\r\n    }\r\n`;\r\n\r\n\r\nconst Title = styled.div`\r\n    font-size: 24px;\r\n`;\r\n\r\nconst Row = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    gap: 20px;\r\n    color: ${mainColor};\r\n`;\r\n\r\nconst Header = styled.div`\r\n    width: 100%;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    \r\n    width: 100%;\r\n    padding: 10px;\r\n`;\r\n\r\n\r\nexport default TeacherFiles;"],"names":["Tabsbox","styled","TabsTitle","props","fs","Tabsitems","tabsitem","mainColor","Label","Icon","Title","Row","Header","Container","datafeke","lesson","lessoninfo","useState","value","setValue","date","setDate","useEffect","filter","item","style","display","width","className","variant","scrollButtons","allowScrollButtonsMobile","onChange","event","newValue","indicatorColor","map","itm","key","component","label","length","allCount","w","h"],"sourceRoot":""}