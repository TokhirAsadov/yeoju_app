{"version":3,"file":"static/js/526.cc549b8d.chunk.js","mappings":"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","sources":["components/teacher/teacherScience/GroupPlan.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport {MdDelete, MdOutlineCreateNewFolder, MdUpdate} from \"react-icons/md\";\r\nimport {CgClose} from \"react-icons/cg\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\r\nimport {Autocomplete, Menu} from \"@mui/material\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {IoSend} from \"react-icons/io5\";\r\nimport {extrasmall, large, medium, small, xlarge} from \"../../../responsiv\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select from \"@mui/material/Select\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport {BiArrowBack} from \"react-icons/bi\";\r\nimport {BASE_URL, getHeaders, mainColor} from \"../../../utills/ServiceUrls\";\r\nimport {FaLayerGroup} from \"react-icons/fa\"\r\nimport axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport {BsThreeDotsVertical} from \"react-icons/bs\";\r\n\r\nconst GroupPlan = () => {\r\n    const {fan} = useParams()\r\n    const icon = <CheckBoxOutlineBlankIcon fontSize=\"small\"/>;\r\n    const checkedIcon = <CheckBoxIcon fontSize=\"small\"/>;\r\n    const {forLessonsData} = useSelector(state => state.lessonsTeacherSlice)\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedGroups, setSelectedGroups] = useState([]);\r\n    const [disabled, setDisabled] = useState(true)\r\n    const [data, setDate] = useState([])\r\n    const [obj, setObj] = useState({\r\n        educationYearId: forLessonsData?.educationYear?.id,\r\n        eduType: forLessonsData?.groupData?.eduType,\r\n        eduLang: forLessonsData?.groupData?.eduLang,\r\n        subjectId: forLessonsData?.groupData?.lessonId,\r\n        level: forLessonsData?.groupData?.level,\r\n        groupsIds: selectedGroups?.map(s => s?.groupId) || []\r\n    })\r\n    const [oldObj, setOldObj] = useState({\r\n        id: null,\r\n        educationYearId: forLessonsData?.educationYear?.id,\r\n        eduType: forLessonsData?.groupData?.eduType,\r\n        eduLang: forLessonsData?.groupData?.eduLang,\r\n        subjectId: forLessonsData?.groupData?.lessonId,\r\n        level: forLessonsData?.groupData?.level,\r\n        groupsIds: selectedGroups?.map(s => s?.groupId) || []\r\n    })\r\n    const [limitGroupName, setLimitGroupName] = useState(true)\r\n    const navigate = useNavigate()\r\n    const {headers} = getHeaders();\r\n    const menuOptions = [\r\n        {\r\n            title: \"Update\",\r\n            icon: <MdUpdate color={\"#0087be\"}/>\r\n        },\r\n        {\r\n            title: \"Delete\",\r\n            icon: <MdDelete color={\"red\"}/>\r\n        }\r\n    ]\r\n\r\n    const uniqueArray = forLessonsData?.allGroup?.reduce((acc, current) => {\r\n        const existingItem = acc.find(item => item.groupId === current.groupId);\r\n        if (!existingItem) {\r\n            acc.push(current);\r\n        }\r\n        return acc;\r\n    }, []);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const openMenu = Boolean(anchorEl);\r\n    const handleClick = (e, id) => {\r\n        setAnchorEl(e.currentTarget);\r\n\r\n        let getItem = data?.find(d => d.id === id);\r\n        setOldObj(prevState => ({\r\n            ...prevState,\r\n            id,\r\n            eduLang: getItem?.eduLang,\r\n            eduType: getItem?.eduType,\r\n            groupsIds: getItem?.groups?.map(g => g.groupId)\r\n        }))\r\n    };\r\n    const handleCloseMenu = (label) => {\r\n        setAnchorEl(null);\r\n\r\n        if (label === \"Update\") {\r\n\r\n            console.log(oldObj, \"for id\")\r\n            setOpen(true)\r\n        } else {\r\n\r\n        }\r\n\r\n    };\r\n\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setOldObj(prevState => ({...prevState, id: null}))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (selectedGroups?.length > 0) {\r\n            setDisabled(false)\r\n        }\r\n    }, [selectedGroups]);\r\n\r\n\r\n    const fetchCreatePlan = async () => {\r\n        axios.post(`${BASE_URL}/plan/createdPlan`, obj, {headers})\r\n            .then(response => {\r\n                console.log(response, \"create plan response\")\r\n                toast.success(\"created plan of subject successfully\")\r\n                setOpen(false);\r\n                setSelectedGroups([]);\r\n                fetchPlans()\r\n            })\r\n            .catch(err => {\r\n                console.log(err, \"error creating plan response\")\r\n            })\r\n    }\r\n\r\n    const fetchUpdatePlan = async () => {\r\n        console.log(oldObj, \"-----------------\")\r\n        axios.put(`${BASE_URL}/plan/updatedPlan`, oldObj, {headers})\r\n            .then(response => {\r\n                console.log(response, \"create plan response\")\r\n                toast.success(\"created plan of subject successfully\")\r\n                setOpen(false);\r\n                setOldObj(prevState => ({...prevState, id: null}))\r\n                setSelectedGroups([]);\r\n                fetchPlans()\r\n            })\r\n            .catch(err => {\r\n                console.log(err, \"error creating plan response\")\r\n            })\r\n    }\r\n\r\n\r\n    const fetchPlans = async () => {\r\n        await axios.get(`${BASE_URL}/plan/getExistPlans?educationYearId=${forLessonsData?.educationYear?.id}&level=${forLessonsData?.groupData?.level}&subjectId=${forLessonsData?.groupData?.lessonId}`, {headers})\r\n            .then(response => {\r\n                console.log(response, \"get exists plans \")\r\n                setDate(response.data.obj)\r\n            })\r\n            .catch(err => {\r\n                console.log(err, \"error exists plans\")\r\n            })\r\n    }\r\n    useEffect(() => {\r\n        fetchPlans()\r\n    }, [])\r\n\r\n    const fetchNewArr = () => {\r\n        let newArr = []\r\n        oldObj?.groupsIds?.forEach(i => {\r\n            if (forLessonsData?.allGroup?.find(g => g.groupId === i)) {\r\n                newArr.push(forLessonsData?.allGroup?.find(g => g.groupId === i))\r\n            }\r\n        })\r\n        return newArr.reduce((acc, current) => {\r\n            const existingItem = acc.find(item => item.groupId === current.groupId);\r\n            if (!existingItem) {\r\n                acc.push(current);\r\n            }\r\n            return acc;\r\n        }, []);\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <TitleMain>\r\n                <p>{fan}</p>\r\n\r\n                <Button onClick={() => navigate(-1)} variant=\"outlined\" startIcon={<BiArrowBack/>}>\r\n                    Back\r\n                </Button>\r\n            </TitleMain>\r\n            <Box sx={{\r\n                padding: \"10px\",\r\n            }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    endIcon={<MdOutlineCreateNewFolder/>}\r\n                    onClick={handleOpen}\r\n                >\r\n                    create group plan\r\n                </Button>\r\n            </Box>\r\n\r\n\r\n            <BoxCardMain>\r\n                {data?.map((item, key) => (\r\n                    <CardSience key={key}>\r\n                        <Box display={'flex'} alignItems={'flex-start'}>\r\n                            <Box width={\"100%\"}>\r\n                                <CardTitle onClick={() => navigate(`${item.id}`)} fs=\"25px\" fw=\"bold\"\r\n                                           cl={mainColor}><FaLayerGroup/> Groups </CardTitle>\r\n                                <Box\r\n                                    onClick={() => navigate(`${item.id}`)}\r\n                                    sx={{\r\n                                        cursor: 'pointer',\r\n                                        marginTop: 1,\r\n                                        display: 'grid',\r\n                                        gridTemplateColumns: \"1fr 1fr 1fr\",\r\n                                        gap: \"5px\",\r\n                                    }}\r\n                                >\r\n                                    {item?.groups.slice(0, limitGroupName ? 5 : undefined).map((item2, index) => (\r\n                                        <p style={{color: 'black', margin: 0, textAlign: 'center'}} key={item2.groupId}>\r\n                                            <b>{index + 1 + \".\"}</b> {item2.groupName}\r\n                                        </p>\r\n                                    ))}\r\n                                </Box>\r\n\r\n                                <Box\r\n                                    sx={{\r\n                                        mt: 2,\r\n                                        display: 'flex',\r\n                                        justifyContent: 'center',\r\n                                    }}\r\n                                >\r\n                                    <Button\r\n                                        onClick={() => setLimitGroupName(!limitGroupName)}>{limitGroupName ? 'show more' : 'hidden'}</Button>\r\n                                </Box>\r\n                            </Box>\r\n                            <IconButton\r\n                                aria-label=\"actions\"\r\n                                id=\"long-button\"\r\n                                aria-controls={openMenu ? 'long-menu' : undefined}\r\n                                aria-expanded={openMenu ? 'true' : undefined}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={(e) => handleClick(e, item?.id)}\r\n                                size=\"small\">\r\n                                <BsThreeDotsVertical/>\r\n                            </IconButton>\r\n                        </Box>\r\n\r\n                    </CardSience>\r\n                ))}\r\n\r\n            </BoxCardMain>\r\n\r\n            {/******** modal create group ************/}\r\n            <Modal\r\n                open={open}\r\n                onClose={() => handleClose()}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n\r\n                <Box sx={style} component={style2}>\r\n                    <CloseBtn>\r\n                        <IconButton onClick={() => handleClose()} aria-label=\"close\" size=\"medium\">\r\n                            <CgClose/>\r\n                        </IconButton>\r\n                    </CloseBtn>\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        {\r\n                            oldObj?.id === null ? \"Create \" : \"Update \"\r\n                        } group plan\r\n                    </Typography>\r\n\r\n                    <FormControl sx={{width: \"100%\", margin: \"25px 0\"}}>\r\n                        <InputLabel id=\"demo-simple-select-readonly-label\">Academic year</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-readonly-label\"\r\n                            id=\"demo-simple-select-readonly\"\r\n                            value={forLessonsData?.educationYear?.name}\r\n                            label=\"Academic year\"\r\n                            inputProps={{readOnly: true}}\r\n                        >\r\n                            <MenuItem\r\n                                value={forLessonsData?.educationYear?.name}>{forLessonsData?.educationYear?.name}</MenuItem>\r\n                        </Select>\r\n                        <FormHelperText>Read only</FormHelperText>\r\n                    </FormControl>\r\n\r\n                    <Box sx={{display: \"flex\", gap: \"20px\"}}>\r\n                        <FormControl sx={{width: \"100%\"}}>\r\n                            <InputLabel id=\"demo-simple-select-readonly-label1\">Language</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-readonly-label1\"\r\n                                id=\"demo-simple-select-readonly\"\r\n                                value={forLessonsData?.groupData?.eduLang}\r\n                                label=\"Language\"\r\n                                inputProps={{readOnly: true}}\r\n                            >\r\n                                <MenuItem\r\n                                    value={forLessonsData?.groupData?.eduLang}>{forLessonsData?.groupData?.eduLang}</MenuItem>\r\n                            </Select>\r\n                            <FormHelperText>Read only</FormHelperText>\r\n                        </FormControl>\r\n                        <FormControl sx={{width: \"100%\"}}>\r\n                            <InputLabel id=\"demo-simple-select-readonly-label1\">Type of education</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-readonly-label1\"\r\n                                id=\"demo-simple-select-readonly\"\r\n                                value={forLessonsData?.groupData?.eduType}\r\n                                label=\"Type of education\"\r\n                                inputProps={{readOnly: true}}\r\n                            >\r\n                                <MenuItem\r\n                                    value={forLessonsData?.groupData?.eduType}>{forLessonsData?.groupData?.eduType}</MenuItem>\r\n                            </Select>\r\n                            <FormHelperText>Read only</FormHelperText>\r\n                        </FormControl>\r\n                    </Box>\r\n\r\n                    <Autocomplete\r\n                        multiple\r\n                        id=\"checkboxes-tags-demo\"\r\n                        options={uniqueArray}\r\n                        disableCloseOnSelect\r\n                        getOptionLabel={(option) => option?.groupName}\r\n                        value={\r\n                            oldObj?.id === null ? selectedGroups : fetchNewArr()\r\n                        }\r\n                        onChange={(event, newValue) => {\r\n                            console.log(newValue, \"new Value\")\r\n                            oldObj?.id === null ?\r\n                                setObj(prev => ({...prev, groupsIds: newValue?.map(n => n?.groupId)}))\r\n                                :\r\n                                setOldObj(prev => ({...prev, groupsIds: newValue?.map(n => n?.groupId)}))\r\n                            setSelectedGroups(newValue);\r\n                        }}\r\n                        renderOption={(props, option, {selected}) => (\r\n                            <li {...props}>\r\n                                <Checkbox\r\n                                    icon={icon}\r\n                                    checkedIcon={checkedIcon}\r\n                                    style={{marginRight: 8}}\r\n                                    checked={selected}\r\n                                />\r\n                                {option?.groupName}\r\n                            </li>\r\n                        )}\r\n                        style={{width: \"100%\", margin: \"25px 0\"}}\r\n                        renderInput={(params) => (\r\n                            <TextField required {...params} label=\"Groups\" placeholder=\"Group\" helperText=\"Required\"/>\r\n                        )}\r\n                    />\r\n\r\n                    <CloseBtn>\r\n                        <Button\r\n                            onClick={oldObj?.id === null ? fetchCreatePlan : fetchUpdatePlan}\r\n                            variant=\"contained\"\r\n                            endIcon={<IoSend/>}\r\n                            disabled={disabled}\r\n                        > {oldObj?.id === null ? \"Save\" : \"Update\"}</Button>\r\n                    </CloseBtn>\r\n                </Box>\r\n            </Modal>\r\n\r\n            {/******** menu actions *************/}\r\n\r\n            <Menu\r\n                id=\"long-menu\"\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'long-button',\r\n                }}\r\n                anchorEl={anchorEl}\r\n                open={openMenu}\r\n                onClose={handleCloseMenu}\r\n                PaperProps={{\r\n                    style: {\r\n                        maxHeight: 40 * 4.5,\r\n                        width: '20ch',\r\n                    },\r\n                }}\r\n            >\r\n                {menuOptions.map((item, key) => (\r\n                    <MenuItem key={key} onClick={() => handleCloseMenu(item.title)}>\r\n                        <Box display={'flex'} gap={'5px'} alignItems={'center'}>\r\n                            {item.icon} {item.title}\r\n                        </Box>\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </Container>\r\n\r\n    );\r\n};\r\nconst TitleMain = styled.h1`\r\n    padding: 0 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    p {\r\n        color: ${mainColor};\r\n        font-size: 30px;\r\n        font-weight: bold;\r\n        ${extrasmall({\r\n            textAlign: \"center\",\r\n            fontSize: \"20px\",\r\n        })}\r\n    }\r\n`;\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    borderRadius: 2,\r\n    p: 3,\r\n};\r\nconst style2 = styled.div`\r\n    ${extrasmall({\r\n        width: '95% !important',\r\n    })}\r\n`\r\nconst BoxCardMain = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    gap: 20px;\r\n    padding: 10px;\r\n    ${xlarge({\r\n        gridTemplateColumns: \"1fr 1fr 1fr  \",\r\n    })}\r\n    ${large({\r\n        gridTemplateColumns: \"1fr 1fr 1fr  \",\r\n    })}\r\n    ${medium({\r\n        gridTemplateColumns: \"1fr 1fr \",\r\n    })}\r\n    ${small({\r\n        gridTemplateColumns: \"1fr 1fr \",\r\n    })}\r\n    ${extrasmall({\r\n        gridTemplateColumns: \"1fr \",\r\n    })}\r\n`;\r\nconst CardSience = styled.div`\r\n    border: 1px solid #f1eded;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    background-color: #FFFF;\r\n    box-shadow: rgba(99, 99, 99, 0.2) 0 2px 8px 0;\r\n\r\n`;\r\nconst CardTitle = styled.p`\r\n    color: ${props => props.cl || \"black\"};\r\n    font-size: ${props => props.fs};\r\n    font-weight: ${props => props.fw || \"normal\"};\r\n    cursor: pointer;\r\n`\r\nconst CloseBtn = styled.div`\r\n    display: flex;\r\n    justify-content: end;\r\n`\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    padding: 1rem;\r\n`;\r\nexport default GroupPlan;\r\n"],"names":["TitleMain","styled","mainColor","extrasmall","textAlign","fontSize","style","position","top","left","transform","width","bgcolor","boxShadow","borderRadius","p","style2","BoxCardMain","xlarge","gridTemplateColumns","large","medium","small","CardSience","CardTitle","props","cl","fs","fw","CloseBtn","Container","fan","useParams","icon","checkedIcon","forLessonsData","useSelector","state","lessonsTeacherSlice","useState","open","setOpen","selectedGroups","setSelectedGroups","disabled","setDisabled","data","setDate","educationYearId","educationYear","id","eduType","groupData","eduLang","subjectId","lessonId","level","groupsIds","map","s","groupId","obj","setObj","oldObj","setOldObj","limitGroupName","setLimitGroupName","navigate","useNavigate","headers","getHeaders","menuOptions","title","color","uniqueArray","allGroup","reduce","acc","current","find","item","push","React","anchorEl","setAnchorEl","openMenu","Boolean","handleCloseMenu","label","console","log","handleClose","prevState","useEffect","length","fetchCreatePlan","axios","BASE_URL","then","response","toast","fetchPlans","catch","err","fetchUpdatePlan","onClick","variant","startIcon","sx","padding","endIcon","key","display","alignItems","cursor","marginTop","gap","groups","slice","undefined","item2","index","margin","groupName","mt","justifyContent","e","currentTarget","getItem","d","g","handleClick","size","onClose","component","labelId","value","name","inputProps","readOnly","multiple","options","disableCloseOnSelect","getOptionLabel","option","newArr","forEach","i","fetchNewArr","onChange","event","newValue","prev","n","renderOption","selected","marginRight","checked","renderInput","params","required","placeholder","helperText","MenuListProps","PaperProps","maxHeight"],"sourceRoot":""}