{"version":3,"file":"static/js/3747.9e7f0afe.chunk.js","mappings":"8VAYMA,EAAQ,CACVC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,OACPC,OAAQ,OACRC,QAAS,mBACTC,UAAW,GACXC,aAAc,GAGH,SAASC,IACpB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,IAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAwBC,EAAAA,UAAe,GAAvC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAiB5BE,EAAU,CACZ,CAACC,MAAO,KAAMC,WAAY,KAAMnB,MAAO,GAAIoB,UAAU,GACrD,CACIF,MAAO,WACPC,WAAY,YACZnB,MAAO,IACPoB,UAAU,EACVC,WAAY,SAACC,GACT,OACI,UAACC,EAAD,YACI,SAACC,EAAD,KACA,UAACC,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNC,QAAS,SAACC,GA7BT,IAACC,EA8BEC,QAAQC,IAAIV,EAAWW,IA9BzBH,EA+BmBR,EAAWW,GA9BpDvB,EAAS,MACTwB,EAAAA,EAAAA,IAAUC,EAAAA,GAAWC,EAAAA,GAAmBN,GACnCO,MAAK,SAAAC,GACF1B,GAAa,SAAA2B,GAAI,yBACVA,GACAD,EAAIE,SAEX9B,GAAS,kBAAM4B,EAAIE,KAAKC,UAAUC,WAErCC,OAAM,SAAAC,GACHb,QAAQC,IAAIY,MAdC7B,GAAQ,IA6Bb,WAUI,SAAC8B,EAAD,UAAkBvB,EAAWwB,IAAIC,YACjC,SAACC,EAAD,UAAa1B,EAAWwB,IAAIG,sBAMhD,CAAC/B,MAAO,OAAQC,WAAY,OAAQnB,MAAO,GAAIoB,UAAU,GACzD,CACIF,MAAO,eACPC,WAAY,gBACZnB,MAAO,IACPoB,UAAU,GAEd,CACIF,MAAO,eACPC,WAAY,eACZnB,MAAO,IACPoB,UAAU,GAEd,CAACF,MAAO,QAASC,WAAY,QAASnB,MAAO,IAAKoB,UAAU,GAC5D,CAACF,MAAO,WAAYC,WAAY,WAAYnB,MAAO,IAAKoB,UAAU,GAClE,CAACF,MAAO,QAASC,WAAY,QAASnB,MAAO,IAAKoB,UAAU,GAC5D,CAACF,MAAO,SAAUC,WAAY,WAAYnB,MAAO,IAAKoB,UAAU,IAGpE,GAAwBd,EAAAA,EAAAA,UAAS,IAAjC,eAAOkC,EAAP,KAAaU,EAAb,KAgBA,OAbAC,EAAAA,EAAAA,YAAU,WACN3C,GAAW,kBAAM,KACjB0B,EAAAA,EAAAA,IAAUC,EAAAA,GAAWiB,EAAAA,GAAAA,gCAChBf,MAAK,SAAAC,GACF9B,GAAW,SAAC+B,GAAD,OAAWA,KACtBW,GAAQ,kBAAMZ,EAAIE,WAErBG,OAAM,SAAAC,GACHb,QAAQC,IAAIY,QAErB,KAIC,UAACS,EAAD,YACI,SAAC,IAAD,CAAMC,GAAI,CAACtD,MAAO,QAAlB,UACI,SAAC,IAAD,WAEI,SAAC,IAAD,CACIuD,mBAAiB,EACjB5D,MAAO,CAACK,MAAO,OAAQwD,UAAW,mBAClCvC,QAASA,EACTwC,KAAMjB,GAAQ,GACdkB,SAAU,GACVC,WAAY,CAACC,QAASC,EAAAA,GACtBC,YAAU,EACVC,QAASxD,EACTyD,cAAY,kBACLxB,EAAKwB,cADA,IAER/C,QAAS,CACLgD,sBAAuB,CACnBhC,IAAI,EACJiC,OAAO,EACPC,QAAQ,EACRC,OAAO,EACPC,UAAU,aASlC,SAAC,IAAD,CACIC,cAAY,EACZxD,KAAMA,GAAkB,OAAVL,EACd8D,QAASvD,EACT,kBAAgB,2BAChB,mBAAiB,iCALrB,UAQQ,UAAC,IAAD,CAAKsC,GAAI3D,EAAT,WACI,SAAC6E,EAAD,CAAqB5C,QAASZ,EAA9B,UAA2C,SAAC,MAAD,MAEvCP,IAAS,SAAC,IAAD,CACL+B,KAAM7B,GAAaA,EACnBF,MAAOA,EACPgE,QAAS9D,GAAaA,EAAU8D,kBAUhE,IAAMjD,EAAQkD,EAAAA,GAAAA,IAAAA,MAAiB,CAC3BC,IAAK,IADKD,CAAH,sFAQLnD,EAAUmD,EAAAA,GAAAA,IAAH,2GAQPjD,EAASiD,EAAAA,GAAAA,OAAH,wXAoBN1B,EAAa0B,EAAAA,GAAAA,KAAH,kHAOV7B,EAAkB6B,EAAAA,GAAAA,KAAH,sHAOfF,EAAsBE,EAAAA,GAAAA,OAAH,uUAQZE,EAAAA,IASPvB,EAAYqB,EAAAA,GAAAA,IAAH","sources":["components/rektor/student/talaba/RektorTalabaTable.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport {BASE_URL, mainColor, REKTOR, STUDENT_ALL_DATA} from \"../../../../utills/ServiceUrls\";\r\nimport styled from \"styled-components\";\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport RektorTalabaForModal from \"./RektorTalabaForModal\";\r\nimport {RiCloseLine} from \"react-icons/ri\";\r\nimport {DataGrid, GridToolbar} from \"@mui/x-data-grid\";\r\nimport axios from \"axios\";\r\nimport {Card, CardContent} from \"@mui/material\";\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: \"95vw\",\r\n    height: \"95vh\",\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    borderRadius: 5,\r\n};\r\n\r\nexport default function RektorTalabaTable() {\r\n    const [spinner, setSpinner] = useState(true);\r\n    const [group, setGroup] = useState(\"\");\r\n    const [dataModal, setDataModal] = useState({});\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const studentDataFetch = (userId) => {\r\n        setGroup(null);\r\n        axios.get(BASE_URL + STUDENT_ALL_DATA + userId)\r\n            .then(res => {\r\n                setDataModal(prev => ({\r\n                    ...prev,\r\n                    ...res.data\r\n                }))\r\n                setGroup(() => res.data.groupData.name)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    const columns = [\r\n        {field: 'id', headerName: 'ID', width: 40, editable: false},\r\n        {\r\n            field: 'fullName',\r\n            headerName: 'Full Name',\r\n            width: 400,\r\n            editable: false,\r\n            renderCell: (cellValues) => {\r\n                return (\r\n                    <Wrapper>\r\n                        <Image/>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={(event) => {\r\n                                console.log(cellValues.id);\r\n                                studentDataFetch(cellValues.id);\r\n\r\n                                handleOpen()\r\n                            }}\r\n                        >\r\n                            <StudentFullName>{cellValues.row.fullName}</StudentFullName>\r\n                            <StudentTel>{cellValues.row.phoneNumber}</StudentTel>\r\n                        </Button>\r\n                    </Wrapper>\r\n                );\r\n            }\r\n        },\r\n        {field: 'fail', headerName: 'Fail', width: 80, editable: false},\r\n        {\r\n            field: 'missedLesson',\r\n            headerName: 'Missed Lesson',\r\n            width: 150,\r\n            editable: false,\r\n        },\r\n        {\r\n            field: 'indebtedness',\r\n            headerName: 'Indebtedness',\r\n            width: 150,\r\n            editable: false,\r\n        },\r\n        {field: 'email', headerName: 'Email', width: 200, editable: false},\r\n        {field: 'passport', headerName: 'Passport', width: 200, editable: false},\r\n        {field: 'login', headerName: 'Login', width: 200, editable: false},\r\n        {field: 'cardNo', headerName: 'Card Num', width: 200, editable: false},\r\n    ];\r\n\r\n    const [data, setData] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        setSpinner(() => true);\r\n        axios.get(BASE_URL + REKTOR.GET_STUDENT_RESULTS_FOR_REKTOR)\r\n            .then(res => {\r\n                setSpinner((prev) => !prev);\r\n                setData(() => res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Card sx={{width: '100%'}}>\r\n                <CardContent>\r\n\r\n                    <DataGrid\r\n                        checkboxSelection\r\n                        style={{width: \"100%\", minHeight: \"300px!important\"}}\r\n                        columns={columns}\r\n                        rows={data || []}\r\n                        pageSize={20}\r\n                        components={{Toolbar: GridToolbar}}/*** print and excel ****/\r\n                        autoHeight\r\n                        loading={spinner}\r\n                        initialState={{ // hide items\r\n                            ...data.initialState,\r\n                            columns: {\r\n                                columnVisibilityModel: {\r\n                                    id: false,\r\n                                    email: false,\r\n                                    cardNo: false,\r\n                                    login: false,\r\n                                    passport: false\r\n                                },\r\n                            },\r\n                        }}\r\n                    />\r\n\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Modal\r\n                hideBackdrop\r\n                open={open && group !== null}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"keep-mounted-modal-title\"\r\n                aria-describedby=\"keep-mounted-modal-description\"\r\n            >\r\n                {\r\n                    <Box sx={style}>\r\n                        <CloseButtonForChild onClick={handleClose}><RiCloseLine/></CloseButtonForChild>\r\n                        {\r\n                            group && <RektorTalabaForModal\r\n                                data={dataModal && dataModal}\r\n                                group={group}\r\n                                results={dataModal && dataModal.results}\r\n                            />\r\n                        }\r\n                    </Box>\r\n                }\r\n            </Modal>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Image = styled.img.attrs({\r\n    src: \"\"\r\n})`\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    gap: 10px;\r\n    margin: 5px !important;\r\n`;\r\n\r\n\r\nconst Button = styled.button`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    background-color: #fff;\r\n    padding-left: 5px;\r\n    font-size: 14px;\r\n    border: none;\r\n    cursor: pointer;\r\n    color: #000;\r\n    transition: all 0.2s ease;\r\n    letter-spacing: 1.2px;\r\n\r\n    &:focus {\r\n        transform: scale(0.95);\r\n    }\r\n`;\r\n\r\n\r\nconst StudentTel = styled.span`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    color: gray;\r\n`;\r\n\r\nconst StudentFullName = styled.span`\r\n    width: 100%;\r\n    font-size: 18px;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n`;\r\n\r\nconst CloseButtonForChild = styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n    border-radius: 50%;\r\n    color: ${mainColor};\r\n    font-size: 26px;\r\n    border: none;\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n`;\r\n\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    padding: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n`;\r\n"],"names":["style","position","top","left","transform","width","height","bgcolor","boxShadow","borderRadius","RektorTalabaTable","useState","spinner","setSpinner","group","setGroup","dataModal","setDataModal","React","open","setOpen","handleClose","columns","field","headerName","editable","renderCell","cellValues","Wrapper","Image","Button","variant","color","onClick","event","userId","console","log","id","axios","BASE_URL","STUDENT_ALL_DATA","then","res","prev","data","groupData","name","catch","err","StudentFullName","row","fullName","StudentTel","phoneNumber","setData","useEffect","REKTOR","Container","sx","checkboxSelection","minHeight","rows","pageSize","components","Toolbar","GridToolbar","autoHeight","loading","initialState","columnVisibilityModel","email","cardNo","login","passport","hideBackdrop","onClose","CloseButtonForChild","results","styled","src","mainColor"],"sourceRoot":""}