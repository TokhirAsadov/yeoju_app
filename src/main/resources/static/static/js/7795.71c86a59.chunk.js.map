{"version":3,"file":"static/js/7795.71c86a59.chunk.js","mappings":"wYA+KMA,EAAa,CACfC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,OACPC,UAAW,IACXC,QAAS,mBACTC,UAAW,GACXC,aAAc,EACdC,EAAG,GAEDC,GAAwBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,OAAPD,CAAH,oTAMHE,EAAAA,IAWlBC,EAAYH,EAAAA,GAAAA,IAAH,0FAEF,SAAAI,GAAK,OAAIA,EAAMC,MAAQ,OAAS,SAKvCC,EAAqBN,EAAAA,GAAAA,IAAH,8KASlBO,EAAgBP,EAAAA,GAAAA,KAAH,0KASbQ,EAAoBR,EAAAA,GAAAA,KAAH,4OAajBS,EAA2BT,EAAAA,GAAAA,KAAH,yHAOxBU,EAAuBV,EAAAA,GAAAA,IAAH,qMASpBW,GAAkBX,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,IAAPD,CAAH,sQAMRE,EAAAA,IAQPU,EAAiBZ,EAAAA,GAAAA,IAAH,mOAQda,EAAAA,EAAAA,IAAO,CACLC,oBAAqB,mBAEvBC,EAAAA,EAAAA,IAAM,CACJD,oBAAqB,mBAEvBE,EAAAA,EAAAA,IAAO,CACLF,oBAAqB,mBAEvBG,EAAAA,EAAAA,IAAM,CACJH,oBAAqB,mBAEvBI,EAAAA,EAAAA,IACM,CACIJ,oBAAqB,mBAOrC,UAzRsB,WAAO,IAAD,UAElBK,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAO,IAAD,IACNC,EAAQC,aAAaC,QAAQC,EAAAA,IAC7BC,GAASC,EAAAA,EAAAA,GAAUL,GACrBM,EAAS,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAQG,MAAMC,MAAK,SAAAC,GAAC,MAAmB,gBAAfA,EAAEC,mBAA7B,aAAG,EAAuDA,SACnEC,EAAS,OAAGP,QAAH,IAAGA,GAAH,UAAGA,EAAQG,MAAMC,MAAK,SAAAC,GAAC,MAAmB,kBAAfA,EAAEC,mBAA7B,aAAG,EAAyDA,SAEvD,gBAAdJ,GAA6C,kBAAdK,GAC/Bd,EAAS,YAEd,IAEH,IAAOe,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAgBK,GAAhB,WACA,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOM,EAAP,KAAkBC,EAAlB,KACA,GAAsCP,EAAAA,EAAAA,WAAS,GAA/C,eAAOQ,GAAP,KAAoBC,GAApB,KAEMC,IAAgBC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOC,mBAElD5B,EAAAA,EAAAA,YAAU,WACNmB,GAAa,GACbU,EAAAA,EAAAA,IAAUC,EAAAA,GAAW,sBAAuB,CAACjB,QAAAA,IACxCkB,MAAK,SAAAC,GAEFf,EAAO,OAACe,QAAD,IAACA,OAAD,EAACA,EAAKhB,SAEhBiB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAEfG,SAAQ,WACLlB,GAAa,QAEtB,IAEH,IAAMmB,GAAmB,WACrBhB,GAAa,GACbF,GAAW,IAGTmB,IAAWC,EAAAA,EAAAA,MAgBXC,GAAW,CACbC,QAAS,SAAAC,GAAK,MAAK,CACfC,MAAO,EACPC,WAAY,CACRC,MAAe,GAARH,KAGfI,OAAQ,CAACH,MAAO,IAGpB,OACI,iCACI,UAACrD,EAAD,WAES2B,EAyBG8B,MAAMC,KAAK,CAACC,OAAQ,IAAIC,KAAI,SAACC,EAAG1C,GAAJ,OACxB,SAAC,IAAD,CAAU2C,GAAI,CAAClF,UAAW,cAAuBmF,OAAQ,KAAX5C,MA1BtD,OAAaM,QAAb,IAAaA,OAAb,EAAaA,EAAMmC,KAAI,SAACzC,EAAGiC,GAAW,IAAD,QACjC,OAAO,SAACrD,EAAD,CAEHiE,QAAS,kBA/BRC,EA+B8B9C,EAAE8C,GA/B5BC,EA+BgC/C,EAAE+C,KA9B3DjC,GAAeiC,GACfnC,GAAa,GACbiB,IAASmB,EAAAA,EAAAA,IAAuB,iBAChC7B,EAAAA,EAAAA,IAAUC,EAAAA,GAAW,uDAAyD0B,EAAI,CAAC3C,QAAAA,IAC9EkB,MAAK,SAAAC,GAAQ,IAAD,EACTO,IAASoB,EAAAA,EAAAA,IAAmB,OAAC3B,QAAD,IAACA,GAAD,UAACA,EAAKhB,YAAN,aAAC,EAAW4C,SAE3C3B,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MATA,IAACsB,EAAIC,GAgCLI,OAAQlB,EACRmB,QAAQ,UACRrB,SAAUA,GACVsB,QAAQ,SANL,UAQH,UAAC1E,EAAD,YACI,UAACD,EAAD,YACI,SAACD,EAAD,WACI,SAAC,MAAD,OAEJ,SAACL,EAAD,CACIE,MAAmB,QAAX,OAAD0B,QAAC,IAADA,OAAA,EAAAA,EAAGM,OAA+C,QAAtB,OAADN,QAAC,IAADA,GAAA,UAAAA,EAAGM,YAAH,eAASgD,WAD/C,SACgF,QAAX,OAADtD,QAAC,IAADA,OAAA,EAAAA,EAAGM,OAA2C,QAAtB,OAADN,QAAC,IAADA,GAAA,UAAAA,EAAGM,YAAH,eAASgD,WAAb,EAAI,OAAkCtD,QAAlC,IAAkCA,GAAlC,UAAkCA,EAAGM,YAArC,aAAkC,EAASgD,gBAE1I,mBACA,UAAC9E,EAAD,YACI,iBAAM+E,MAAO,CAACC,SAAU,QAAxB,gBAAkCxD,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAG+C,QACrC,SAACxE,EAAD,UAAiC,QAAX,OAADyB,QAAC,IAADA,OAAA,EAAAA,EAAGM,MAAgB,EAAnB,OAAuBN,QAAvB,IAAuBA,GAAvB,UAAuBA,EAAGM,YAA1B,aAAuB,EAASmD,kBAlBxDzD,EAAE8C,QA6BnB,SAAC,IAAD,UAEQnC,IAAa,SAAC,IAAD,CACT+C,KAAM/C,EACNgD,QAAS/B,GACT,kBAAgB,2BAChB,mBAAiB,iCAEjBgC,UAAW1F,EAAAA,EAAAA,IACXmF,QAAS,CAACQ,QAAS,GACnBT,QAAS,CAACS,QAAS,GACnB1B,WAAY,CAAC2B,SAAU,IACvBC,KAAM,CAACF,QAAS,GAVP,UAYT,UAAC,IAAD,CAAKlB,GAAItF,EAAT,WACI,SAACW,EAAD,CACI6E,QAASjB,GACToC,WAAY,CAACC,OAAQ,IAAK/B,MAAO,KACjCgC,SAAU,CAAChC,MAAO,IAClBC,WAAY,CAAC2B,SAAU,IAJ3B,UAKC,SAAC,MAAD,OACD,eAAIP,MAAO,CAACY,UAAW,SAAU7F,MAAOH,EAAAA,GAAWiG,aAAc,QAAjE,SAA2EvD,KAExB,aAAlC,OAAbE,SAAa,IAAbA,QAAA,EAAAA,GAAesD,8BAA4C,SAAC,IAAD,KACvD,SAAC,IAAD,CACIC,QAAS,WACTC,cAAc,EACdC,cAAa,OAAEzD,SAAF,IAAEA,IAAF,UAAEA,GAAeG,sBAAjB,aAAE,EAA+BsD,cAC9CC,IAAG,OAAE1D,SAAF,IAAEA,IAAF,UAAEA,GAAeG,sBAAjB,aAAE,EAA+BwD,YACpCC,KAAI,OAAE5D,SAAF,IAAEA,IAAF,UAAEA,GAAeG,sBAAjB,aAAE,EAA+B0D,aACrCC,OAAM,OAAE9D,SAAF,IAAEA,IAAF,UAAEA,GAAeG,sBAAjB,aAAE,EAA+B4D,eACvCjE,YAAaA,GACbkE,UAAS,OAAEhE,SAAF,IAAEA,IAAF,UAAEA,GAAeG,sBAAjB,aAAE,EAA+B4B,gBAUrEtC,IAAa,SAAC,IAAD,CAAKwE,QAAS,OAAQC,eAAgB,MAAOtC,GAAI,CAACjF,MAAO,OAAQwH,GAAI,GAArE,UACV,SAAC,IAAD,CAA2BC,UAAS,gBAAmBC,YAAa9E","sources":["components/rektor/teacher/RektorTeacher.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {BASE_URL, getHeaders, mainColor, TOKEN} from \"../../../utills/ServiceUrls\";\r\nimport axios from \"axios\";\r\nimport {GiTeacher} from \"react-icons/gi\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {RiCloseLine} from \"react-icons/ri\";\r\nimport Spinner from \"../../spinner/Spinner\";\r\nimport {AnimatePresence, motion as m} from \"framer-motion\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {fetchRektorTeachers} from \"../../../redux/actions/rektor/rektor_teachers_action\";\r\nimport {rektorTeachersFetching} from \"../../../redux/slice/rektor/rektor_teachers_slice\";\r\nimport ModalRektorTeachersPage from \"../ModalRektorTeachersPage\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport {extrasmall, large, medium, small, xlarge} from \"../../../responsiv\";\r\nimport {Skeleton} from \"@mui/material\";\r\nimport ExportBtnToExcelForRektor from \"../staff/ExportBtnToExcelForRektor\";\r\n\r\nconst RektorTeacher = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(TOKEN);\r\n        const decode = jwtDecode(token);\r\n        let roleName2 = decode?.roles.find(i => i.roleName === 'ROLE_REKTOR')?.roleName;\r\n        let roleName3 = decode?.roles.find(i => i.roleName === 'Kengash raisi')?.roleName;\r\n\r\n        if (roleName2 !== \"ROLE_REKTOR\" && roleName3 !== \"Kengash raisi\") {\r\n            navigate(\"/login\");\r\n        }\r\n    }, [])\r\n\r\n    const {headers} = getHeaders();\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [spinner, setSpinner] = useState(true)\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const [facultyName, setFacultyName] = useState(false)\r\n\r\n    const rektorTeacher = useSelector(state => state?.rektorTeachers);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        axios.get(BASE_URL + \"/user/rektorTeacher\", {headers})\r\n            .then(res => {\r\n                // console.log(res?.data,\"r t\")\r\n                setData(res?.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    const handleCloseModal = () => {\r\n        setOpenModal(false);\r\n        setSpinner(true)\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpenModal = (id, name) => {\r\n        setFacultyName(name);\r\n        setOpenModal(true);\r\n        dispatch(rektorTeachersFetching('loading'))\r\n        axios.get(BASE_URL + \"/user/getKafedraTeachersDataForRektorByKafedraId?id=\" + id, {headers})\r\n            .then(res => {\r\n                dispatch(fetchRektorTeachers(res?.data?.obj))\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n\r\n    const variants = {\r\n        visible: index => ({\r\n            scale: 1,\r\n            transition: {\r\n                delay: index * 0.1,\r\n            },\r\n        }),\r\n        hidden: {scale: 0},\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <WrapperSection>\r\n                {\r\n                    !isLoading ? data?.map((i, index) => {\r\n                        return <BodyCardSection\r\n                            key={i.id}\r\n                            onClick={() => handleOpenModal(i.id, i.name)}\r\n                            custom={index}\r\n                            animate=\"visible\"\r\n                            variants={variants}\r\n                            initial=\"hidden\"\r\n                        >\r\n                            <BodyCardTitleWrapper>\r\n                                <BodyCardTitleIconWrapper>\r\n                                    <BodyCardTitleIcon>\r\n                                        <GiTeacher/>\r\n                                    </BodyCardTitleIcon>\r\n                                    <ComeCount\r\n                                        color={i?.data === null ? false : i?.data?.comeCount !== null}>{i?.data === null ? 0 : i?.data?.comeCount === null ? 0 : i?.data?.comeCount}</ComeCount>\r\n                                </BodyCardTitleIconWrapper>\r\n                                <hr/>\r\n                                <BodyCardTitle>\r\n                                    <span style={{fontSize: \"14px\"}}>{i?.name}</span>\r\n                                    <BodyCardCountUsers>{i?.data === null ? 0 : i?.data?.allCount}</BodyCardCountUsers>\r\n                                </BodyCardTitle>\r\n                            </BodyCardTitleWrapper>\r\n                        </BodyCardSection>\r\n                    }) : (\r\n                        Array.from({length: 5}).map((_, i) => (\r\n                            <Skeleton sx={{transform: 'scale(1,1)'}} key={i} height={180}/>\r\n                        ))\r\n                    )\r\n                }\r\n                {/*** ================= teacher =================== ***/}\r\n                <AnimatePresence>\r\n                    {\r\n                        openModal && <Modal\r\n                            open={openModal}\r\n                            onClose={handleCloseModal}\r\n                            aria-labelledby=\"keep-mounted-modal-title\"\r\n                            aria-describedby=\"keep-mounted-modal-description\"\r\n\r\n                            component={m.div}\r\n                            initial={{opacity: 0}}\r\n                            animate={{opacity: 1}}\r\n                            transition={{duration: 0.3}}\r\n                            exit={{opacity: 0}}\r\n                        >\r\n                            <Box sx={styleTable}>\r\n                                <CloseMyButtonForChild\r\n                                    onClick={handleCloseModal}\r\n                                    whileHover={{rotate: 180, scale: 1.1}}\r\n                                    whileTap={{scale: 0.9}}\r\n                                    transition={{duration: 0.3}}\r\n                                ><RiCloseLine/></CloseMyButtonForChild>\r\n                                <h2 style={{textAlign: \"center\", color: mainColor, marginBottom: '10px'}}>{facultyName}</h2>\r\n                                {\r\n                                    rektorTeacher?.rektorTeachersLoadingStatus === \"loading\" ? <Spinner/> :\r\n                                        <ModalRektorTeachersPage\r\n                                            colName={\"Teachers\"}\r\n                                            isTeacherUrl={true}\r\n                                            kafedraMudiri={rektorTeacher?.rektorTeachers?.kafedraMudiri}\r\n                                            all={rektorTeacher?.rektorTeachers?.allTeachers}\r\n                                            come={rektorTeacher?.rektorTeachers?.comeTeachers}\r\n                                            noCome={rektorTeacher?.rektorTeachers?.noComeTeachers}\r\n                                            facultyName={facultyName}\r\n                                            kafedraId={rektorTeacher?.rektorTeachers?.id}\r\n                                        />\r\n                                }\r\n                            </Box>\r\n                        </Modal>\r\n                    }\r\n                </AnimatePresence>\r\n                {/*** ================= teacher =================== ***/}\r\n            </WrapperSection>\r\n            {\r\n                !isLoading && <Box display={'flex'} justifyContent={'end'} sx={{width: '100%', my: 3}}>\r\n                    <ExportBtnToExcelForRektor direction={`Data_teachers`} dataToExcel={data}/>\r\n                </Box>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst styleTable = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: \"90vw\",\r\n    minHeight: 600,\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    borderRadius: 3,\r\n    p: 4,\r\n};\r\nconst CloseMyButtonForChild = styled(m.button)`\r\n    width: 30px;\r\n    height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background-color: ${mainColor};\r\n    border-radius: 50%;\r\n    color: white;\r\n    font-size: 26px;\r\n    border: none;\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n`;\r\n\r\n\r\nconst ComeCount = styled.div`\r\n    align-self: flex-end;\r\n    color: ${props => props.color ? \"lime\" : \"red\"};\r\n    display: flex;\r\n\r\n`\r\n\r\nconst BodyCardCountUsers = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    //margin-right: 10px;\r\n    font-size: 30px;\r\n    font-weight: 200;\r\n`;\r\n\r\nconst BodyCardTitle = styled.span`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n`;\r\n\r\nconst BodyCardTitleIcon = styled.span`\r\n\r\n    margin-top: -35px;\r\n    width: 55px;\r\n    height: 55px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 30px;\r\n    background: #deedf4;\r\n    border-radius: 15%;\r\n`;\r\n\r\nconst BodyCardTitleIconWrapper = styled.span`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 24px;\r\n`;\r\n\r\nconst BodyCardTitleWrapper = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    padding: 5px 15px !important;\r\n    margin-top: 10px !important;\r\n`;\r\n\r\nconst BodyCardSection = styled(m.div)`\r\n    height: 150px;\r\n    width: 100%;\r\n    display: flex;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    color: ${mainColor};\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        box-shadow: 2px 3px 5px 1px rgba(81, 159, 219, 0.43);\r\n    }\r\n`;\r\n\r\nconst WrapperSection = styled.div`\r\n    margin: 30px 0;\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    gap: 40px;\r\n    padding: 10px 0 !important;\r\n\r\n    ${xlarge({\r\n        gridTemplateColumns: \"repeat(3,1fr)\",\r\n    })}\r\n    ${large({\r\n        gridTemplateColumns: \"repeat(3,1fr)\",\r\n    })}\r\n    ${medium({\r\n        gridTemplateColumns: \"repeat(2,1fr)\",\r\n    })}\r\n    ${small({\r\n        gridTemplateColumns: \"repeat(2,1fr)\",\r\n    })}\r\n    ${extrasmall(\r\n            {\r\n                gridTemplateColumns: \"repeat(1,1fr)\",\r\n            })}\r\n\r\n\r\n`;\r\n\r\n\r\nexport default RektorTeacher;"],"names":["styleTable","position","top","left","transform","width","minHeight","bgcolor","boxShadow","borderRadius","p","CloseMyButtonForChild","styled","m","mainColor","ComeCount","props","color","BodyCardCountUsers","BodyCardTitle","BodyCardTitleIcon","BodyCardTitleIconWrapper","BodyCardTitleWrapper","BodyCardSection","WrapperSection","xlarge","gridTemplateColumns","large","medium","small","extrasmall","navigate","useNavigate","useEffect","token","localStorage","getItem","TOKEN","decode","jwtDecode","roleName2","roles","find","i","roleName","roleName3","headers","getHeaders","useState","data","setData","isLoading","setIsLoading","setSpinner","openModal","setOpenModal","facultyName","setFacultyName","rektorTeacher","useSelector","state","rektorTeachers","axios","BASE_URL","then","res","catch","err","console","log","finally","handleCloseModal","dispatch","useDispatch","variants","visible","index","scale","transition","delay","hidden","Array","from","length","map","_","sx","height","onClick","id","name","rektorTeachersFetching","fetchRektorTeachers","obj","custom","animate","initial","comeCount","style","fontSize","allCount","open","onClose","component","opacity","duration","exit","whileHover","rotate","whileTap","textAlign","marginBottom","rektorTeachersLoadingStatus","colName","isTeacherUrl","kafedraMudiri","all","allTeachers","come","comeTeachers","noCome","noComeTeachers","kafedraId","display","justifyContent","my","direction","dataToExcel"],"sourceRoot":""}