{"version":3,"file":"static/js/5065.93c5f6b3.chunk.js","mappings":"yRAoHMA,EAAQC,EAAAA,GAAAA,IAAH,4KAGAC,EAAAA,IAULC,EAAYF,EAAAA,GAAAA,IAAH,0IAQf,UAhIyB,WACrB,IAAMG,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,yBAAIA,EAAMC,YAAV,iBAAI,EAAYA,YAAhB,aAAI,EAAkBC,MAoDtD,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KA6BA,OARAC,EAAAA,EAAAA,YAAU,WAnBU,IAACN,EAAAA,EAoBJJ,EAnBbS,GAAa,GACbE,EAAAA,EAAAA,IAAUC,EAAAA,GAAQ,uCAAmCR,IAChDS,MAAK,SAAAC,GAAQ,IAAD,IACHC,EAAO,UAAGD,EAAIR,KAAKU,WAAZ,iBAAG,EAAcA,WAAjB,aAAG,EAAmBC,KAAI,SAACC,EAAKC,GAAN,eAAC,UACjCD,GADgC,IAEnCE,MAAOD,EAAQ,OAEnBZ,EAAQQ,MAGXM,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAEfG,SAAQ,WACLhB,GAAa,QAMtB,KAOC,UAACV,EAAD,YACI,UAACH,EAAD,YACI,SAAC,MAAD,CAAiB8B,KAAM,MACvB,uCAEJ,SAAC,IAAD,WACI,SAAC,IAAD,WACI,SAAC,IAAD,CACIC,QAASnB,EACToB,WAAY,CAACC,QAASC,EAAAA,GACtBC,QA5FJ,CACZ,CACIC,MAAO,QACPC,WAAY,SACZC,UAAU,EACVC,MAAO,GACPC,MAAO,UAEX,CACIC,SAAU,IACVC,KAAM,EACNN,MAAO,UACPC,WAAY,UACZC,UAAU,EACVE,MAAO,UAEX,CACIC,SAAU,GACVC,KAAM,GACNN,MAAO,QACPC,WAAY,OACZC,UAAU,EACVE,MAAO,UAEX,CACIC,SAAU,GACVC,KAAM,GACNN,MAAO,QACPC,WAAY,OACZC,UAAU,EACVE,MAAO,UAEX,CACIC,SAAU,IACVC,KAAM,GACNN,MAAO,QACPC,WAAY,OACZM,UAAU,EACVL,UAAU,EACVE,MAAO,UAEd,CACOC,SAAU,IACVC,KAAM,GACNN,MAAO,QACPC,WAAY,OACZM,UAAU,EACVL,UAAU,EACVE,MAAO,WA6CKI,KAAMlC,GAAQ,GACdmC,SAAU,GACVC,UAAU,sBACVC,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,YAAU","sources":["components/student/results/StudentExamFinal.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {FaClipboardList} from \"react-icons/fa\";\r\nimport {Card, CardContent} from \"@mui/material\";\r\nimport {DataGrid, GridToolbar} from \"@mui/x-data-grid\";\r\nimport {BASE_URL, mainColor} from \"../../../utills/ServiceUrls\";\r\nimport {useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst StudentExamFinal = () => {\r\n    const userId = useSelector(state => state.user?.user?.id)\r\n    const columns = [\r\n        {\r\n            field: 'count',\r\n            headerName: 'â„–',\r\n            sortable: true,\r\n            width: 50,\r\n            align: 'center',\r\n        },\r\n        {\r\n            minWidth: 200,\r\n            flex: 1,\r\n            field: 'subject',\r\n            headerName: 'Subject',\r\n            sortable: true,\r\n            align: 'center',\r\n        },\r\n        {\r\n            minWidth: 80,\r\n            flex: 0.3,\r\n            field: 'forms',\r\n            headerName: 'Form',\r\n            sortable: true,\r\n            align: 'center',\r\n        },\r\n        {\r\n            minWidth: 80,\r\n            flex: 0.3,\r\n            field: 'datas',\r\n            headerName: 'Date',\r\n            sortable: true,\r\n            align: 'center',\r\n        },\r\n        {\r\n            minWidth: 100,\r\n            flex: 0.4,\r\n            field: 'times',\r\n            headerName: 'Time',\r\n            editable: false,\r\n            sortable: false,\r\n            align: 'center',\r\n        },\r\n     {\r\n            minWidth: 100,\r\n            flex: 0.4,\r\n            field: 'rooms',\r\n            headerName: 'Room',\r\n            editable: false,\r\n            sortable: false,\r\n            align: 'center',\r\n        },\r\n    ];\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const getFinalData =(id)=>{\r\n        setIsLoading(true)\r\n        axios.get(BASE_URL + `/otherService/studentsFinals/${id}`)\r\n            .then(res => {\r\n                const resData = res.data.obj?.obj?.map((row, index) => ({\r\n                    ...row,\r\n                    count: index + 1,\r\n                }));\r\n                setData(resData)\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFinalData(userId)\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Title>\r\n                <FaClipboardList size={25}/>\r\n                <h1>Finals</h1>\r\n            </Title>\r\n            <Card>\r\n                <CardContent>\r\n                    <DataGrid\r\n                        loading={isLoading}\r\n                        components={{Toolbar: GridToolbar}}\r\n                        columns={columns}\r\n                        rows={data || []}\r\n                        pageSize={30}\r\n                        className=\"data-grid-container\"\r\n                        rowsPerPageOptions={[30, 60, 100]}\r\n                        autoHeight\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${mainColor};\r\n  gap: 5px;\r\n\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n\r\n  }\r\n`\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  padding: 1rem;\r\n  .MuiDataGrid-columnHeaderTitleContainer {\r\n    justify-content: center;\r\n  }\r\n`\r\n\r\nexport default StudentExamFinal;"],"names":["Title","styled","mainColor","Container","userId","useSelector","state","user","id","useState","data","setData","isLoading","setIsLoading","useEffect","axios","BASE_URL","then","res","resData","obj","map","row","index","count","catch","err","console","log","finally","size","loading","components","Toolbar","GridToolbar","columns","field","headerName","sortable","width","align","minWidth","flex","editable","rows","pageSize","className","rowsPerPageOptions","autoHeight"],"sourceRoot":""}